******* $Workfile: CRAIG.DEF$ $Revision: <COMMITHASH>$
++MODEL              YCOOPM
++DESCRIPTION
      ******************************************************************
      *    FGBC - EDIT PROGRAM FOR <TGBBTRAN>  AND <TGBBDETL>          *
      *    Change 14                                                   *
      *    THIS PROGRAM WILL ALLOW THE ENTRY OR AMENDMENT OF THE       *
      *    THE TRANASACTION HEADER AND THE TRANSACTION DETAIL LINES.   *
      *                                                                *
      *    THE TRANSACTION HEADER IS MAINTAINED IN EWS EGBB0/1/4.      *
      *                                                                *
      *    THE DETAIL LINES ARE MAINTAINED IN THE EWS EGBC0.           *
      *                                                                *
      *    SPLIT ANALYSIS AND AUTHORISATIONS CAN BE TRANSFERRED TO     *
      *    FROM THIS PROGRAM.                                          *
      *                                                                *
      *    TRANSACTION ORDERS AND TRANSACTION GRN CAN BE TRANSFERRED   *
      *    TO AND FROM THIS PROGRAM.                                   *
CED032*                                                                *
CED032*    CLOUDTRADE CHANGES IN LOAD-BLOB-KEY - 16/01/2015 - CS       *
CED032*                                                                *
      ******************************************************************
++FLAG               ACCEPT-WARNINGS
++FLAG               BUILD-PEWS
++FLAG               CMPY-DPNDNT
++FLAG               EDIT-CMDS
++FLAG               GLACCT
++FLAG               GROUPED-EWS
++FLAG               LACT
++FLAG               PEWS-RESTORE
++FLAG               RNGE-SCTY
++FLAG               STAB-FETCH

++COOP               FGPU
++COOP               FGBB
++COOP               FGBD
++COOP               FGO7
++COOP               FGC3

++IF TARGET(POP=Y)
++COOP                      FGRA
++COOP                      FGRB
++END-IF

++PRIMARY_COMMAREA   CGBB
++SUBSTITUTE +CID+   CGBB
++SUBSTITUTE +CIDL+  CGBB-C

++PRIMARY_MAP        MGBC
++SUBSTITUTE +MID+   MGBC

++EWS                EGO70 CHAINED=Y INDEX=5 EXISTENCE=PASSABLE
++-                  GRP=CGBB-O-GO7-GRP INSTANCE=CGBB-EWS-INSTANCE

++EWS                EGPV0 CHAINED=Y INDEX=5 EXISTENCE=PASSABLE
++-                  GRP=EGPU0-GPV-GRP INSTANCE=CGBB-EWS-INSTANCE

++EWS                EGPU0 CHAINED=Y INDEX=5 EXISTENCE=PASSABLE
++-                  GRP=CGBB-O-GO7-GRP INSTANCE=CGBB-EWS-INSTANCE

++EWS                EGBC0 CHAINED=Y INDEX=5 EXISTENCE=PASSABLE
++-                  GRP=CGBB-C-ESN INSTANCE=CGBB-EWS-INSTANCE

++EWS                EGBD0 CHAINED=Y INDEX=5 EXISTENCE=PASSABLE
++-                  GRP=EGBC0-SA-GRP INSTANCE=CGBB-EWS-INSTANCE

++EWS                EGBB0 CHAINED=Y INDEX=5 EXISTENCE=PASSABLE
++-                  INSTANCE=CGBB-EWS-INSTANCE

++EWS                EGBB1 CHAINED=Y INDEX=5 EXISTENCE=PASSABLE
++-                  INSTANCE=CGBB-EWS-INSTANCE

++EWS                EGBB4 CHAINED=Y INDEX=5 EXISTENCE=PASSABLE
++-                  INSTANCE=CGBB-EWS-INSTANCE

++EWS                EGC30 CHAINED=Y INDEX=5 EXISTENCE=PASSABLE
++-                  GRP=EGBC0-TXT-GRP INSTANCE=CGBB-EWS-INSTANCE

++IF TARGET(POP=Y)
++EWS                EGRA0 CHAINED=Y INDEX=5 EXISTENCE=PASSABLE
++-                  GRP=CGBB-C-ESN INSTANCE=CGBB-EWS-INSTANCE
++EWS                EGRB0 CHAINED=Y INDEX=5 GRP=EGBC0-GRN-GRP
++-                  EXISTENCE=PASSABLE INSTANCE=CGBB-EWS-INSTANCE
++END-IF

++SUBSTITUTE +PEID+  EGBC0
++SUBSTITUTE +STAB+  TGBBDETL

++TABLE              TAFUSR
++TABLE              TPXKIT
++TABLE              TAMWEBTH
++TABLE              TGOAUTHC
++TABLE              TGBBTAUT
++TABLE              TGBBARSP
++TABLE              TGBBTRAN
++TABLE              TAUADCTL
++TABLE              TEACNTRL
++TABLE              TGACNTRL
++TABLE              TGBBANAL
++TABLE              TGBBDETL
++TABLE              TGBCURR
++TABLE              TGBGLAC
++TABLE              TGBTRAN
++TABLE              TGBSKDTL
++TABLE              TPACNTRL
++TABLE              TPBADDR
++TABLE              TPBSUPP
++TABLE              TPBSCHD
++TABLE              TAKICMPY
++TABLE              TRACMPYL
++TABLE              TGBDETL
++TABLE              TRAHAND
++TABLE              TPBTAX
++TABLE              TGAPAYM
++TABLE              TPASETTL
++TABLE              TPADSCNT
++TABLE              TPXTEXT
++TABLE              TGBBTEXT
++TABLE              TGALEDGR

++IF TARGET(POP=Y)
|
++TABLE              TGBBORDR
++TABLE              TGBORDR
++TABLE              TGBBGRN
++TABLE              TDOORDER
++TABLE              TDACNTRL
++TABLE              TDADOC
++TABLE              TPLGRN
++TABLE              TDOANAL
++TABLE              TDOOLINE
++TABLE              TDOCURR
++TABLE              TPLANAL
|
++END-IF
++IF TARGET(PT=Y)
++TABLE              TKACNTRL
++END-IF

++SECONDARY_COMMAREA CAUM

++TABLE              TAUADATA

++SECONDARY_COMMAREA CAUL
++DOWN               FAUL CAUL

++SECONDARY_COMMAREA         CAMAIN
++SECONDARY_COMMAREA         CAMAOUT

++SECONDARY_COMMAREA         CEZ4

++SECONDARY_COMMAREA CGBVIN
++SECONDARY_COMMAREA CGBVOUT
++SECONDARY_COMMAREA CGBWIN
++SECONDARY_COMMAREA CGBWOUT
++SECONDARY_COMMAREA CGBXIN
++SECONDARY_COMMAREA CGBXOUT
++SECONDARY_COMMAREA CRA0IN
++SECONDARY_COMMAREA CRA0OUT
++SECONDARY_COMMAREA CAKWIN
++SECONDARY_COMMAREA CAKWOUT

++SECONDARY_COMMAREA CAGP
++SECONDARY_COMMAREA CAMR
++SECONDARY_COMMAREA CPBG
++IF TARGET(POP=Y)
++SECONDARY_COMMAREA CGBU
++SECONDARY_COMMAREA CPM3
++SECONDARY_COMMAREA CAAG
++SECONDARY_COMMAREA CPKIIN
++SECONDARY_COMMAREA CPKIOUT

++SECONDARY_COMMAREA CGRM
++SECONDARY_COMMAREA CDOZ

++SECONDARY_COMMAREA CATI
++SECONDARY_COMMAREA CPYN

++SECONDARY_COMMAREA CPX5
++DOWN               FPX5 CPX5
++END-IF

*--- INV REF
++SECONDARY_COMMAREA          CGEH
++PROMPT MGBC MGBC-CRN-INV-REF-F   (U) FGEH CGEH
++-                          CGBB-CMPY
++-                          MGBC-SUPP
++-                          MGBC-CRN-INV-REF
++-                          MGBC-CRN-INV-SYSREF

++PROMPT MGBC MGBC-LINE-INV-REF-F   (U) FGEH CGEH
++-                          CGBB-CMPY
++-                          MGBC-SUPP
++-                          MGBC-LINE-INV-REF
++-                          MGBC-LINE-INV-SYSREF

*--- FETCH KIT CODE
++SECONDARY_COMMAREA          CPXS
++PROMPT MGBC MGBC-FETCH-KIT-CODE-F   (U) FPXS CPXS
++-                          CGBB-CMPY
++-                          MGBC-FETCH-KIT-CODE
++-                          ' '
++-                          ' '
++-                          ' '
++-                          'Y'

++SECONDARY_COMMAREA          CPXT
++PROMPT MGBC MGBC-FETCH-KIT-CODE-F   (P) FPXT CPXT
++-                          WZAZLITS-EDIT-VIEW
++-                          CGBB-CMPY
++-                          MGBC-FETCH-KIT-CODE
*--- END OF FETCH KIT CODE


++SECONDARY_COMMAREA CPBA
++PROMPT             MGBC MGBC-SUPP-F (U) FPBA CPBA
++-                  CGBB-CMPY
++-                  MGBC-SUPP
++-                  -
++-                  -
++-                  WS-SUPP-POSTCODE

++PROMPT             MGBC MGBC-SUPP-POSTCODE-F (U) FPBA CPBA
++-                  CGBB-CMPY
++-                  MGBC-SUPP
++-                  -
++-                  -
++-                  MGBC-SUPP-POSTCODE
++-                  -
++-                  MGBC-PYMNT-ADDR

++PROMPT             MGBC MGBC-ALT-INVCE-SUPP-F (U) FPBA CPBA
++-                  CGBB-CMPY
++-                  MGBC-ALT-INVCE-SUPP

++SECONDARY_COMMAREA CGEN
++PROMPT             MGBC MGBC-SYSREF-F (U) FGEN CGEN
++-                  CGBB-CMPY
++-                  MGBC-SYSREF
++-                  WS-SYSREF-FR
++-                  WS-SYSREF-TO
++-                  ' '
++-                  ' '
++-                  CZAZPUBL-USR
++-                  ' '
++-                  ' '
++-                  ' '
++-                  CGBB-TRAN-TYPE

++SECONDARY_COMMAREA CPBB
++PROMPT             MGBC MGBC-SUPP-F (P) FPBB CPBB
++-                  WZAZLITS-EDIT-VIEW
++-                  CGBB-CMPY
++-                  MGBC-SUPP

++PROMPT             MGBC MGBC-ALT-INVCE-SUPP-F (P) FPBB CPBB
++-                  WZAZLITS-EDIT-VIEW
++-                  CGBB-CMPY
++-                  MGBC-ALT-INVCE-SUPP

++SECONDARY_COMMAREA CGAG
++PROMPT             MGBC MGBC-PRE-STTLD-BANK-F (U) FGAG CGAG
++-                  CGBB-CMPY
++-                  MGBC-PRE-STTLD-BANK

++SECONDARY_COMMAREA CGAH
++PROMPT             MGBC MGBC-PRE-STTLD-BANK-F (P) FGAH CGAH
++-                  WZAZLITS-EDIT-VIEW
++-                  CGBB-CMPY
++-                  MGBC-PRE-STTLD-BANK

++SECONDARY_COMMAREA CGAE
++PROMPT             MGBC MGBC-TRAN-STYPE-F (U) FGAE CGAE
++-                  CGBB-CMPY
++-                  CGBB-TRAN-TYPE
++-                  MGBC-TRAN-STYPE

++SECONDARY_COMMAREA CGAF
++PROMPT             MGBC MGBC-TRAN-STYPE-F (P) FGAF CGAF
++-                  WZAZLITS-EDIT-VIEW
++-                  CGBB-CMPY
++-                  CGBB-TRAN-TYPE
++-                  MGBC-TRAN-STYPE

++PROMPT             MGBC MGBC-PYMNT-ADDR-F (P) FPBB CPBB
++-                  WZAZLITS-EDIT-VIEW
++-                  CGBB-CMPY
++-                  MGBC-SUPP
++-                  'ADDR'
++-                  MGBC-PYMNT-ADDR

++PROMPT             MGBC MGBC-PYMNT-ADDR-F (U) FPBA CPBA
++-                  CGBB-CMPY
++-                  MGBC-SUPP
++-                  -
++-                  -
++-                  -
++-                  '1'
++-                  MGBC-PYMNT-ADDR

++SECONDARY_COMMAREA CECJ
++PROMPT             MGBC MGBC-ELEM-F (P) FECJ CECJ
++-                  WZAZLITS-EDIT-VIEW
++-                  WS-PROMPT-CMPY
++-                  MGBC-ELEM

++SECONDARY_COMMAREA CPBH
++PROMPT             MGBC MGBC-ELEM-F (U) FPBH CPBH
++-                  CGBB-CMPY
++-                  MGBC-SUPP
++-                  MGBC-ELEM

++SECONDARY_COMMAREA CAGA
++PROMPT             MGBC MGBC-CURR-F (U) FAGA CAGA
++-                  MGBC-CURR

++SECONDARY_COMMAREA CAGB
++PROMPT             MGBC MGBC-CURR-F (P) FAGB CAGB
++-                  WZAZLITS-EDIT-VIEW
++-                  MGBC-CURR

++SECONDARY_COMMAREA CAGG
++PROMPT             MGBC MGBC-RATE-TYPE-F (U) FAGG CAGG
++-                  WAZCMPYD-BASE-CURR
++-                  MGBC-CURR
++-                  MGBC-RATE-TYPE

++SECONDARY_COMMAREA CAGH
++PROMPT             MGBC MGBC-RATE-TYPE-F (P) FAGH CAGH
++-                  WZAZLITS-EDIT-VIEW
++-                  WAZCMPYD-BASE-CURR
++-                  MGBC-CURR
++-                  MGBC-RATE-TYPE

++SECONDARY_COMMAREA CAGJ
++PROMPT             MGBC MGBC-EFF-DATE-F (P) FAGJ CAGJ
++-                  WZAZLITS-EDIT-VIEW
++-                  WAZCMPYD-BASE-CURR
++-                  MGBC-CURR
++-                  MGBC-RATE-TYPE
++-                  MGBC-EFF-DATE

++SECONDARY_COMMAREA CAGI
++PROMPT             MGBC MGBC-EFF-DATE-F (U) FAGI CAGI
++-                  WAZCMPYD-BASE-CURR
++-                  MGBC-CURR
++-                  MGBC-RATE-TYPE
++-                  MGBC-EFF-DATE

++SECONDARY_COMMAREA CEAA
++PROMPT             MGBC MGBC-HDR-GL-CMPY-F (U)  FEAA CEAA
++-                  MGBC-HDR-GL-CMPY

++PROMPT             MGBC MGBC-GL-CMPY-F (U)  FEAA CEAA
++-                  MGBC-GL-CMPY

++SECONDARY_COMMAREA CEAB
++PROMPT             MGBC MGBC-HDR-GL-CMPY-F (P)  FEAB CEAB
++-                  WZAZLITS-EDIT-VIEW
++-                  MGBC-HDR-GL-CMPY

++PROMPT             MGBC MGBC-GL-CMPY-F (P)  FEAB CEAB
++-                  WZAZLITS-EDIT-VIEW
++-                  MGBC-GL-CMPY

++SECONDARY_COMMAREA CAKO
++PROMPT             MGBC MGBC-PUOM-F (U) FAKO CAKO
++-                  MGBC-PUOM

++SECONDARY_COMMAREA CAKP
++PROMPT             MGBC MGBC-PUOM-F (P) FAKP CAKP
++-                  WZAZLITS-EDIT-VIEW
++-                  MGBC-PUOM

++PROMPT             MGBC MGBC-QUOM-F (U) FAKO CAKO
++-                  MGBC-QUOM

++PROMPT             MGBC MGBC-QUOM-F (P) FAKP CAKP
++-                  WZAZLITS-EDIT-VIEW
++-                  MGBC-QUOM

++SECONDARY_COMMAREA CRAM
++PROMPT             MGBC MGBC-TRAN-TAX-CODE-F (U) FRAM CRAM
++-                  TPACNTRL-GL-HOLDING-CMPY
++-                  MGBC-TRAN-TAX-CODE

++PROMPT             MGBC MGBC-DETL-TAX-CODE-F (U) FRAM CRAM
++-                  TPACNTRL-GL-HOLDING-CMPY
++-                  MGBC-DETL-TAX-CODE

++SECONDARY_COMMAREA CRAN
++PROMPT             MGBC MGBC-TRAN-TAX-CODE-F (P) FRAN CRAN
++-                  WZAZLITS-EDIT-VIEW
++-                  TPACNTRL-GL-HOLDING-CMPY
++-                  MGBC-TRAN-TAX-CODE
++-                  WS-TAX-LOCTN
++-                  WS-TAX-DATE
++-                  WS-TAX-TYPE

++PROMPT             MGBC MGBC-DETL-TAX-CODE-F (P) FRAN CRAN
++-                  WZAZLITS-EDIT-VIEW
++-                  TPACNTRL-GL-HOLDING-CMPY
++-                  MGBC-DETL-TAX-CODE
++-                  WS-TAX-LOCTN
++-                  WS-TAX-DATE
++-                  WS-TAX-TYPE

++SECONDARY_COMMAREA CRAD
++PROMPT             MGBC MGBC-TRAN-LOCTN-F (U) FRAD CRAD
++-                  MGBC-TRAN-LOCTN

++PROMPT             MGBC MGBC-DETL-LOCTN-F (U) FRAD CRAD
++-                  MGBC-DETL-LOCTN

++SECONDARY_COMMAREA CRAE
++PROMPT             MGBC MGBC-TRAN-LOCTN-F (P) FRAE CRAE
++-                  WZAZLITS-EDIT-VIEW
++-                  MGBC-TRAN-LOCTN

++PROMPT             MGBC MGBC-DETL-LOCTN-F (P) FRAE CRAE
++-                  WZAZLITS-EDIT-VIEW
++-                  MGBC-DETL-LOCTN

++SECONDARY_COMMAREA CRAH
++PROMPT             MGBC MGBC-TRAN-TAX-TYPE-F (U) FRAH CRAH
++-                  MGBC-TRAN-TAX-TYPE
++-                  WS-PROMPT-CMPY
++-                  'G'

++PROMPT             MGBC MGBC-DETL-TAX-TYPE-F (U) FRAH CRAH
++-                  MGBC-DETL-TAX-TYPE
++-                  WS-PROMPT-CMPY
++-                  'G'

++SECONDARY_COMMAREA CRAI
++PROMPT             MGBC MGBC-TRAN-TAX-TYPE-F (P) FRAI CRAI
++-                  WZAZLITS-EDIT-VIEW
++-                  MGBC-TRAN-TAX-TYPE
++-                  WS-PROMPT-CMPY
++-                  'G'

++PROMPT             MGBC MGBC-DETL-TAX-TYPE-F (P) FRAI CRAI
++-                  WZAZLITS-EDIT-VIEW
++-                  MGBC-DETL-TAX-TYPE
++-                  WS-PROMPT-CMPY
++-                  'G'

++SECONDARY_COMMAREA CRAF
++PROMPT             MGBC MGBC-TRAN-HAND-F (U) FRAF CRAF
++-                  MGBC-TRAN-HAND

++PROMPT             MGBC MGBC-DETL-HAND-F (U) FRAF CRAF
++-                  MGBC-DETL-HAND

++SECONDARY_COMMAREA CRAG
++PROMPT             MGBC MGBC-TRAN-HAND-F (P) FRAG CRAG
++-                  WZAZLITS-EDIT-VIEW
++-                  MGBC-TRAN-HAND

++PROMPT             MGBC MGBC-DETL-HAND-F (P) FRAG CRAG
++-                  WZAZLITS-EDIT-VIEW
++-                  MGBC-DETL-HAND

++SECONDARY_COMMAREA CAKQ
++PROMPT             MGBC MGBC-MCA-F (U) FAKQ CAKQ
++-                  WS-PROMPT-CMPY
++-                  MGBC-MCA

++SECONDARY_COMMAREA CAKR
++PROMPT             MGBC MGBC-MCA-F (P) FAKR CAKR
++-                  WZAZLITS-EDIT-VIEW
++-                  WS-PROMPT-CMPY
++-                  MGBC-MCA

++SECONDARY_COMMAREA CGBY
++PROMPT             MGBC MGBC-SKEL-CODE-F (U) FGBY CGBY
++-                  CGBB-CMPY
++-                  MGBC-SKEL-CODE
++-                  WS-SKEL-TYPE

++SECONDARY_COMMAREA CGBZ
++PROMPT             MGBC MGBC-SKEL-CODE-F (P) FGBZ CGBZ
++-                  WZAZLITS-EDIT-VIEW
++-                  CGBB-CMPY
++-                  MGBC-SKEL-CODE
++-                  WS-SKEL-TYPE

++SECONDARY_COMMAREA CPAK
++PROMPT             MGBC MGBC-PYMNT-ANAL-F (U) FPAK CPAK
++-                  CGBB-CMPY
++-                  MGBC-PYMNT-ANAL

++SECONDARY_COMMAREA CPAL
++PROMPT             MGBC MGBC-PYMNT-ANAL-F (P) FPAL CPAL
++-                  WZAZLITS-EDIT-VIEW
++-                  CGBB-CMPY
++-                  MGBC-PYMNT-ANAL

++SECONDARY_COMMAREA CPAE
++PROMPT             MGBC MGBC-DSCNT-TERM-1-F (U) FPAE CPAE
++-                  CGBB-CMPY
++-                  MGBC-DSCNT-TERM-1

++SECONDARY_COMMAREA CPAF
++PROMPT             MGBC MGBC-DSCNT-TERM-1-F (P) FPAF CPAF
++-                  WZAZLITS-EDIT-VIEW
++-                  CGBB-CMPY
++-                  MGBC-DSCNT-TERM-1

++SECONDARY_COMMAREA CPAE
++PROMPT             MGBC MGBC-DSCNT-TERM-2-F (U) FPAE CPAE
++-                  CGBB-CMPY
++-                  MGBC-DSCNT-TERM-2

++SECONDARY_COMMAREA CPAF
++PROMPT             MGBC MGBC-DSCNT-TERM-2-F (P) FPAF CPAF
++-                  WZAZLITS-EDIT-VIEW
++-                  CGBB-CMPY
++-                  MGBC-DSCNT-TERM-2

++SECONDARY_COMMAREA CPAE
++PROMPT             MGBC MGBC-DSCNT-TERM-3-F (U) FPAE CPAE
++-                  CGBB-CMPY
++-                  MGBC-DSCNT-TERM-3

++SECONDARY_COMMAREA CPAF
++PROMPT             MGBC MGBC-DSCNT-TERM-3-F (P) FPAF CPAF
++-                  WZAZLITS-EDIT-VIEW
++-                  CGBB-CMPY
++-                  MGBC-DSCNT-TERM-3

++SECONDARY_COMMAREA CPAG
++PROMPT             MGBC MGBC-STLMNT-F       (U) FPAG CPAG
++-                  CGBB-CMPY
++-                  MGBC-STLMNT

++SECONDARY_COMMAREA CPAH
++PROMPT             MGBC MGBC-STLMNT-F       (P) FPAH CPAH
++-                  WZAZLITS-EDIT-VIEW
++-                  CGBB-CMPY
++-                  MGBC-STLMNT

++SECONDARY_COMMAREA CAAJ
++PROMPT             MGBC MGBC-BANK-CNTRY-F (U) FAAJ CAAJ
++-                  MGBC-BANK-CNTRY

++SECONDARY_COMMAREA CAAK
++PROMPT             MGBC MGBC-BANK-CNTRY-F (P) FAAK CAAK
++-                  WZAZLITS-EDIT-VIEW
++-                  MGBC-BANK-CNTRY

++SECONDARY_COMMAREA CAKY
++PROMPT MGBC MGBC-SRT-CODE-F (U) FAKY CAKY
++-                             MGBC-BANK-CNTRY
++-                             MGBC-SRT-CODE

++SECONDARY_COMMAREA CAKZ
++PROMPT MGBC MGBC-SRT-CODE-F (P) FAKZ CAKZ
++-                             WZAZLITS-EDIT-VIEW
++-                             MGBC-BANK-CNTRY
++-                             MGBC-SRT-CODE

++PROMPT             MGBC MGBC-OVRD-FACTOR-F (U) FPBA CPBA
++-                  CGBB-CMPY
++-                  MGBC-OVRD-FACTOR
++-                  -
++-                  -
++-                  -
++-                  TPBSUPP-ACCT-FACTOR

++PROMPT             MGBC MGBC-OVRD-FACTOR-F (U) FPBA CPBA
++-                  CGBB-CMPY
++-                  MGBC-OVRD-FACTOR
++-                  -
++-                  -
++-                  -
++-                  TPBSUPP-ACCT-FACTOR

++IF TARGET(POP=Y)
|
++SECONDARY_COMMAREA CDOA
++PROMPT             MGBC MGBC-ORDR-REF-F     (U) FDOA CDOA
++-                  CGBB-CMPY
++-                  -
++-                  MGBC-ORDR-REF

++PROMPT             MGBC MGBC-DETL-ORDR-REF-F (U) FDOA CDOA
++-                  CGBB-CMPY
++-                  -
++-                  MGBC-DETL-ORDR-REF

++SECONDARY_COMMAREA CDOC
++PROMPT             MGBC MGBC-ORDR-REF-F     (P) FDOC CDOC
++-                  WZAZLITS-EDIT-VIEW
++-                  CGBB-CMPY
++-                  MGBC-ORDR-REF

++PROMPT             MGBC MGBC-DETL-ORDR-REF-F (P) FDOC CDOC
++-                  WZAZLITS-EDIT-VIEW
++-                  CGBB-CMPY
++-                  MGBC-DETL-ORDR-REF
|
++END-IF

++SECONDARY_COMMAREA CGP0
++PROMPT             MGBC MGBC-AUTH-GRP-F (U) FGP0 CGP0
++-                  CGBB-CMPY
++-                  CGBB-TRAN-TYPE
++-                  MGBC-TRAN-STYPE
++-                  MGBC-AUTH-GRP

++IF TARGET(PT=Y)
++EPROMPT            MGBC MGBC-PROJ-F          PT_PROJ_PROMPT
++-                  WS-PROMPT-CMPY
++-                  MGBC-PROJ
++END-IF

++EPROMPT            MGBC MGBC-HDR-GL-ACCT-F   GL_ACCT_PROMPT
++-                  WS-PROMPT-CMPY
++-                  MGBC-HDR-GL-ACCT

++EPROMPT            MGBC MGBC-GL-ACCT-F   GL_ACCT_PROMPT
++-                  WS-PROMPT-CMPY
++-                  MGBC-GL-ACCT

++EPROMPT            MGBC MGBC-GL-ANAL-F   GL_ANAL_PROMPT
++-                  WS-PROMPT-CMPY
++-                  MGBC-GL-ANAL

++SECONDARY_COMMAREA CGSA
++PROMPT             MGBC MGBC-SRVC-CODE-F (U) FGSA CGSA
++-                  MGBC-CMPY
++-                  MGBC-SRVC-CODE

++SECONDARY_COMMAREA CGSC
++PROMPT             MGBC MGBC-SRVC-CHRG-TYPE-F (U) FGSC CGSC
++-                  MGBC-CMPY
++-                  MGBC-SRVC-CODE
++-                  MGBC-SRVC-CHRG-TYPE
++-                  MGBC-SRVC-REF

++SECONDARY_COMMAREA CGSC
++PROMPT             MGBC MGBC-SRVC-REF-F (U) FGSC CGSC
++-                  MGBC-CMPY
++-                  MGBC-SRVC-CODE
++-                  MGBC-SRVC-CHRG-TYPE
++-                  MGBC-SRVC-REF

++SECONDARY_COMMAREA          CPIA
++PROMPT MGBC MGBC-ITEM-F (U) FPIA CPIA
++-                           CGBB-CMPY
++-                           MGBC-ITEM
++-                           WS-SUPP
++-                           ' '
++-                           ' '
++-                           ' '
++-                           ' '
++-                           ' '
++-                           ' '
++-                           ' '
++-                           ' '
++-                           ' '
++-                           ' '
++-                           ' '
++-                           ' '
++-                           ' '
++-                           ' '
++-                           ' '
++-                           ' '
++-                           '1'

++SECONDARY_COMMAREA          CPIB
++PROMPT MGBC MGBC-ITEM-F (P) FPIB CPIB
++-                           WZAZLITS-EDIT-VIEW
++-                           CGBB-CMPY
++-                           MGBC-ITEM

++SECONDARY_COMMAREA        CAFC
++PROMPT                    MGBC MGBC-INV-OWNER-F (U) FAFC CAFC
++-                         MGBC-INV-OWNER

++SECONDARY_COMMAREA        CAFD
++PROMPT                    MGBC MGBC-INV-OWNER-F (P) FAFD CAFD
++-                         WZAZLITS-EDIT-VIEW
++-                         MGBC-INV-OWNER

++WORKING_STORAGE

       01  WS-FIELDS.
           02 WS-AUTH-LINE             PIC ZZZZ9.
           02 WS-AUTH-CNT              PIC 9(5).
           02 WS-SA-VALUE              PIC S9(16)V99 PACKED-DECIMAL.
           02 WS-BASE-AMT              PIC S9(13)V99 PACKED-DECIMAL.
           02 WS-POS-BASE-AMT          PIC S9(13)V99 PACKED-DECIMAL.
           02 WS-TOT-AMT               PIC S9(13)V99 PACKED-DECIMAL.
           02 WS-EWS-TOT-AMT           PIC S9(13)V99 PACKED-DECIMAL.
           02 WS-ST-GL-ACCT-HEAD-S     PIC X.
           02 WS-ST-GL-ANAL-HEAD-S     PIC X.
           02 WS-ST-PROJ-HEAD-S        PIC X.
           02 WS-PROMPT-CMPY           PIC XX.
           02 WS-PROMPT-CMPY-S         PIC X.
           02 WS-PROMPT-CMPY-F         PIC S9(4)     BINARY.
           02 WS-WARN-ACCPT-CNT        PIC S9(4)     BINARY.
           02 WS-SAVE-WARN-MSGS        PIC X(25).
           02 WS-ERROR-COUNT           PIC S9(4)     BINARY.
           02 WS-WARNING-COUNT         PIC S9(4)     BINARY.
           02 WS-SA-ROWS               PIC S9(4)     BINARY.
           02 WS-MAX-DECIMAL           PIC S9(11)V9(5) PACKED-DECIMAL.
           02 WS-MAX-DECIMAL2          PIC S9(13)V9(2) PACKED-DECIMAL.
           02 WS-MAX-DECIMAL3          PIC S9(13)V9(3) PACKED-DECIMAL.
           02 WS-PERC                  PIC S9(13)V9(3) PACKED-DECIMAL.
           02 WS-PERC-REMAIN           PIC S9(13)V9(3) PACKED-DECIMAL.
           02 WS-VAL                   PIC S9(13)V9(3) PACKED-DECIMAL.
           02 WS-VAL-REMAIN            PIC S9(13)V9(3) PACKED-DECIMAL.
           02 WS-SKEL-TYPE             PIC X.
           02 WS-SUPP-CHANGED          PIC X.
           02 WS-HDR-APPL.
              03 WS-HDR-APPL-NAME      PIC X(6).
              03 WS-HDR-APPL-TYPE      PIC X.
           02 WS-DTL-APPL.
              03 WS-DTL-APPL-NAME      PIC X(6).
              03 WS-DTL-APPL-TYPE      PIC X.
           02 WS-SEL-COUNT             PIC S9(4)     BINARY.
           02 WS-ORDR-REF              PIC X(20).
           02 WS-ORDR-REF-S            PIC X(1).
           02 WS-ORDR-REF-F            PIC S9(4) BINARY.
           02 WS-TXT-IND               PIC X(1).
           02 WS-MULTI-ADDR-NUM        PIC X(1).
           02 WS-SUPP-POSTCODE         PIC X(10).
           02 WS-SUPP                  PIC X(16).
           02 WS-COUNT                 PIC S9(4) BINARY.
           02 WS-SAVE-ENTRY            PIC S9(9) BINARY.
           02 WS-SAVE-ESN-ENTRY        PIC S9(9) BINARY.
           02 WS-SYSREF-FR             PIC S9(9) BINARY.
           02 WS-SYSREF-TO             PIC S9(9) BINARY.
           02 WS-MSG-LINE              PIC S9(4) BINARY.
           02 WS-CHAR-BTCH-NUM         PIC X(9).
           02 WS-CGBVOUT-COUNT         PIC S9(4) BINARY.
           02 WS-PER-YY-DEFAULT        PIC X(1).
CED032     02 WS-CLOUDTRADE-INV-LOCTN  PIC X(8).
           02 WS-SUB                   PIC S9(4) BINARY.
           02 WS-SUB-A                 PIC S9(4) BINARY.
           02 WS-SUB2                  PIC S9(4) BINARY.
           02 WS-SUB3                  PIC S9(4) BINARY.
           02 WS-ENTRIES               PIC S9(9) BINARY.
           02 WS-UPDATE-ERROR          PIC X.
           02 WS-LINE-ERROR            PIC X.
           02 WS-VALID-TEXT            PIC X.
           02 WS-LEDGR                 PIC X(2).

       01  WS-FLAGS.
           02 WS-TAX-RCVBLE-FLAG       PIC X(1).
           02 WS-TRLR-ERR-FLAG         PIC X(1).
           02 WS-AUTH-ERR-FLAG         PIC X(1).
           02 WS-INVALID-HEADER-FLAG   PIC X(1).
           02 WS-INVALID-LINE-FLAG     PIC X(1).
           02 WS-SA-ERROR-FLAG         PIC X(1).
           02 WS-SA-REQUESTED-FLAG     PIC X(1).
           02 WS-AUTH-DENIED           PIC X(1).
           02 WS-FIND-ORDER-FLAG       PIC X(1).
           02 WS-AUTH-CHRG-FLAG        PIC X(1).
           02 WS-PYMNT-ADDR-FLAG       PIC X(1).
           02 WS-UPDATE-ORDER-FLAG     PIC X(1).

           02 WS-TAX-LOCTN             PIC X(10).
           02 WS-TAX-DATE              PIC S9(7)V PACKED-DECIMAL.
           02 WS-TAX-TYPE              PIC X(3).
           02 WS-RATE-ERR-FLAG         PIC X.
              88 WS-RATE-ERR           VALUE 'Y'.

           02 WS-D-LINE-VAL-REMAIN     PIC S9(13)V99   PACKED-DECIMAL.
           02 WS-DIV                   PIC S9(10)V9(5) PACKED-DECIMAL.
           02 WS-D-LINE-VAL            PIC S9(13)V99   PACKED-DECIMAL.
           02 WS-D-LINE-PERC-REMAIN    PIC S9(03)V99   PACKED-DECIMAL.
           02 WS-D-LINE-PERC           PIC S9(03)V99   PACKED-DECIMAL.
           02 WS-D-TOT-VAL             PIC S9(13)V99   PACKED-DECIMAL.
           02 WS-D-TOT-PERC            PIC S9(03)V99   PACKED-DECIMAL.
           02 WS-D-TOT-QTY             PIC S9(13)V9(4) PACKED-DECIMAL.
           02 WS-D-LINE-QTY            PIC S9(13)V9(4) PACKED-DECIMAL.
           02 WS-D-LINE-QTY-REMAIN     PIC S9(13)V9(4) PACKED-DECIMAL.
           02 WS-D-VAT-NON-REC-VALUE   PIC S9(13)V99   PACKED-DECIMAL.
           02 WS-D-VAT-REC-VALUE       PIC S9(13)V99   PACKED-DECIMAL.

       01  WS-XUAD.
           02 WS-USR-DATA-EXISTS        PIC X(01).

       COPY WGZZCNTL.
       COPY WAZ0ANAL.

++IF TARGET(PT=Y)
       COPY WKZCMPYD.
++END-IF

++HOST_VARIABLES
          HV-DETL-SEQ-NUM              INTEGER
          HV-LOCK-USR                  CHAR(8)
          HV-ROW-EXISTS                CHAR(1)

++EXIT B-INITIALISE TYPE=ONLY

           INITIALIZE  WS-FIELDS
                       WS-FLAGS

      *--- Call SET_CURR_CMPY to get company level denials
      *--- (as they are not populated after a prompt)
           MOVE CGBB-CMPY         TO CAAI-CMPY
           MOVE THIS-PROGRAM-NAME TO CAAI-PRG
           MOVE 0                 TO CAAI-ACTION
           MOVE CGBB-INTENT       TO CAAI-INTNT
           MOVE 0                 TO CAAI-FUNCTION

           EXEC QSP CALL SET_CURR_CMPY
                         CAAI
           END-EXEC

           MOVE '1'                    TO WS-SKEL-TYPE
           MOVE 'Y'                    TO WS-PYMNT-ADDR-FLAG

           MOVE CGBB-CMPY              TO TGACNTRL-CMPY
           MOVE CGBB-CMPY              TO TPACNTRL-CMPY
           PERFORM SQL-SELECT-TGACNTRL
           PERFORM SQL-SELECT-TPACNTRL

++IF TARGET(PT=Y)
           MOVE CZAZPUBL-PT-DATA       TO WKZCMPYD-DATA
           PERFORM SKZCMPYD

           IF TPACNTRL-GL-RLTN-IND = TPACNTRL-SINGLE
              MOVE TPACNTRL-GL-HOLDING-CMPY
                                       TO TKACNTRL-CMPY
           ELSE
              MOVE CGBB-CMPY           TO TKACNTRL-CMPY
           END-IF

           PERFORM SQL-SELECT-TKACNTRL

           IF SQLCODE = WZAZSQL-OK
           AND TKACNTRL-DSBLD NOT = 'Y'
              MOVE 'Y'                 TO WKZCMPYD-PT-ON-FLAG
           ELSE
              MOVE SPACES              TO WKZCMPYD-PT-ON-FLAG
           END-IF
++END-IF

++IF TARGET(GL=Y)

           IF TPACNTRL-GL-RLTN-IND = TPACNTRL-SINGLE
              MOVE TPACNTRL-GL-HOLDING-CMPY
                                       TO TEACNTRL-CMPY
           ELSE
              MOVE CGBB-CMPY           TO TEACNTRL-CMPY
           END-IF

           PERFORM SQL-SELECT-TEACNTRL

++END-IF


++IF TARGET(OS=UNIX) OR TARGET(OS=WIN32)
|          IF CZAZSESS-TRF-FLAG NOT = WZAZLITS-TRF-NORMAL
++END-IF

      *--- INITIALIZE TAX CACHE MEMORY
              INITIALIZE CRA0IN
              INITIALIZE CRA0OUT

              MOVE CRA0IN-INIT-MEMRY   TO CRA0IN-FUNC
              MOVE CGBB-CMPY           TO CRA0IN-CMPY
              MOVE CRA0IN-PL           TO CRA0IN-SYS

              EXEC QSP CALL CALC_TAX_VAL
                   CRA0IN
                   CRA0OUT
              END-EXEC

      *--- INITIALIZE TRANSACTION VALIDATION MEMORY
              INITIALIZE CGBVIN
              INITIALIZE CGBVOUT
              MOVE CGBB-CMPY           TO CGBVIN-CMPY
              PERFORM TEACNTRL-INITIALISE
              PERFORM TPBSUPP-INITIALISE
              PERFORM TPBSCHD-INITIALISE
              PERFORM TAKICMPY-INITIALISE
              PERFORM TRACMPYL-INITIALISE

              MOVE CGBVIN-INITIALISE   TO CGBVIN-FUNC

              EXEC QSP CALL VLDTE_PL_TRAN_HDR
                   CGBVIN
                   CGBVOUT
                   TPACNTRL
                   TGACNTRL
                   TEACNTRL
                   TPBSUPP
                   TPBSCHD
                   TAKICMPY
                   TRACMPYL
              END-EXEC

      *--- INITIALIZE DETAIL LINE VALIDATION MEMORY
              INITIALIZE CGBXIN
              INITIALIZE CGBXOUT
              MOVE CGBB-CMPY           TO CGBXIN-CMPY

              MOVE CGBXIN-INITIALISE   TO CGBXIN-FUNC

              EXEC QSP CALL VLDTE_PL_DETL
                   CGBXIN
                   CGBXOUT
                   TPACNTRL
                   TGACNTRL
                   TEACNTRL
                   TPBSUPP
                   TPBSCHD
                   TAKICMPY
                   TRACMPYL
              END-EXEC

++IF TARGET(OS=UNIX) OR TARGET(OS=WIN32)
|          END-IF
++END-IF
      *--- INITIALIZE TRANSACTION ORDER VALIDATION MEMORY
++IF TARGET(POP=Y)
|
|            INITIALIZE CGBU
|            PERFORM TPBSUPP-INITIALISE
|            PERFORM TPBSCHD-INITIALISE
|            PERFORM TDADOC-INITIALISE
|            PERFORM TDOORDER-INITIALISE
|
|
++END-IF

      *--- SUPPRESS USE OF VARIOUS EDIT COMMANDS
           PERFORM VARYING CF-SUB
                   FROM 1 BY 1
                   UNTIL CF-SUB > WZTADEF-NUM-CMDS
      *-- WHEN INSERTING A FRESH BATCH OF DATA ALLLOW THE INSERT ACTION
      *-- THE INSERT ACTION MUST BE PREVENTED IN ALL OTHER CIRCUMSTANCES
      *-- BECAUSE IT WILL CAUSE SEVERE PROBLEMS WITH THE SEQUENCING OF
      *-- RECORDS ON THE BATCH HOLDING TABLES (TGBB*)
             IF CGBB-INTENT = WZAZLITS-EDIT-INSERT
                IF  CZTA1-CMD-LIT (CF-SUB) NOT = 'D'
                AND CZTA1-CMD-LIT (CF-SUB) NOT = 'DD'
                AND CZTA1-CMD-LIT (CF-SUB) NOT = 'I'
                AND CZTA1-CMD-LIT (CF-SUB) NOT = 'IP'
                AND CZTA1-CMD-LIT (CF-SUB) NOT = '"'
                    MOVE ' '              TO CZTA1-CMD-LIT  (CF-SUB)
                    MOVE '-'              TO CZTA1-REP-TYPE (CF-SUB)
                END-IF
             ELSE
                IF  CZTA1-CMD-LIT (CF-SUB) NOT = 'D'
                AND CZTA1-CMD-LIT (CF-SUB) NOT = 'DD'
                    MOVE ' '              TO CZTA1-CMD-LIT  (CF-SUB)
                    MOVE '-'              TO CZTA1-REP-TYPE (CF-SUB)
                END-IF
             END-IF
           END-PERFORM

      *--- SET UP HEADER AND DETAIL APPL NAMES
           MOVE 'TRNHDR'               TO WS-HDR-APPL-NAME
           MOVE 'TRNDTL'               TO WS-DTL-APPL-NAME

           MOVE CGBB-B-ENTRY-MODE      TO WS-HDR-APPL-TYPE
                                          WS-DTL-APPL-TYPE

           IF CZAZSTCK-APPL = CGBB-C-APPL
              CONTINUE
           ELSE
              MOVE CGBB-C-APPL         TO CZAZSTCK-APPL
              MOVE 0                   TO CZAZSTCK-FORMAT
              MOVE 'Y'                 TO CF-REFORMAT
              PERFORM SZAZSOFT-RESELECT
              IF CZAZSOFP-VARNT-SEQ = ZERO
                 MOVE CZAZSTCK-APPL    TO CZAZPUBL-TRF-MSGSUBT
                 MOVE 'ZZZ18'          TO CZAZPUBL-TRF-MSG
                 MOVE 'E'              TO CZAZPUBL-TRF-MSGTYPE
                 MOVE WZAZLITS-TRF-UP  TO CZAZSESS-TRF-FLAG
                 GO TO A-TERMINATE
              ELSE
                 MOVE 0                TO CGBB-C-FORMAT
              END-IF
           END-IF

      *--- OBTAIN TRANSACTION HEADER DETAILS FROM EGBB0, EGBB1, EGBB4
           PERFORM EGBB0-DEFINE
           MOVE CGBB-C-LOG-ENTRY       TO EGBB0P-LOG-ENTRY
           PERFORM EGBB0-GET
           PERFORM EGBB1-DEFINE

           IF EGBB0-SUND-LOG-ENTRY > ZERO
              MOVE EGBB0-SUND-LOG-ENTRY
                                       TO EGBB1P-LOG-ENTRY
              PERFORM EGBB1-GET
           ELSE
              PERFORM EGBB1-INIT-ROW
           END-IF

           PERFORM EGBB4-DEFINE
           IF EGBB0-EGBB4-LOG-ENTRY > ZERO
              MOVE EGBB0-EGBB4-LOG-ENTRY
                                       TO EGBB4P-LOG-ENTRY
              PERFORM EGBB4-GET
           ELSE
              PERFORM EGBB4-INIT-ROW
           END-IF

           MOVE 'Y'                    TO EGBB0-C-EWS-BUILT

      *---
      *--- DETERMINE IF USER HAS SECURITY :-
      *--- TO OVERRIDE QTY MISMATCH WARNINGS   (OPERATION 84)
      *--- TO OVERRIDE VALUE MISMATCH WARNINGS (OPERATION 85)
      *--- TO enter an OVERRIDE FACTOR SUPPLIER(OPERATION 86)
      *---

      *--- DETERMINE ALL DENIALS ONLY IF TRANSFERING COOP
           IF CZAZSESS-TRF-FLAG = WZAZLITS-TRF-COOP
              MOVE SPACE               TO CGBB-C-SLFASSD-TAX-DNL-FLAG
              MOVE SPACE               TO CGBB-C-AUTH-HEAD-DNL-FLAG
              MOVE SPACE               TO CGBB-C-AUTH-LINE-DNL-FLAG
              MOVE 'Y'                 TO CGBB-C-QTY-DNL-FLAG
              MOVE 'Y'                 TO CGBB-C-VAL-DNL-FLAG
              MOVE 'Y'                 TO CGBB-C-OVR-FAC-DNL-FLAG
              MOVE 'Y'                 TO CGBB-C-PYM-ADD-DNL-FLAG
              IF CZAZPUBL-FUNC-DEN-LEN > ZERO
                 MOVE CZAZPUBL-FUNC-DENIALS
                                          TO CF-DENIALS
                 COMPUTE CF-NUM-DENIALS = CF-NUM-DENIALS / 2

                 PERFORM VARYING CF-SUB
                            FROM 1 BY 1
                           UNTIL CF-SUB > CF-NUM-DENIALS
                    EVALUATE CF-DENIED-INTNT (CF-SUB)
                       WHEN 80
                          MOVE 'Y'     TO CGBB-C-SLFASSD-TAX-DNL-FLAG
                       WHEN 81
                          MOVE 'Y'     TO CGBB-C-AUTH-HEAD-DNL-FLAG
                       WHEN 82
                          MOVE 'Y'     TO CGBB-C-AUTH-LINE-DNL-FLAG
                       WHEN 84
                          MOVE SPACE   TO CGBB-C-QTY-DNL-FLAG
                       WHEN 85
                          MOVE SPACE   TO CGBB-C-VAL-DNL-FLAG
                       WHEN 86
                          MOVE SPACE   TO CGBB-C-OVR-FAC-DNL-FLAG
                       WHEN 87
                          MOVE SPACE   TO CGBB-C-PYM-ADD-DNL-FLAG
                    END-EVALUATE
                 END-PERFORM
              END-IF
           END-IF

           PERFORM TGALEDGR-INITIALISE

++EXIT C-TIDY TYPE=ONLY

           PERFORM MAINTAIN-GROSS-TOTALS

           PERFORM EGBB0-CLOSE
           PERFORM EGBB1-CLOSE
           PERFORM EGBB4-CLOSE

           INITIALIZE CAKWIN
           INITIALIZE CAKWOUT

           MOVE CAKWIN-FREE-MEMORY     TO CAKWIN-FUNC

           EXEC QSP CALL VLDTE_ICA
                CAKWIN
                CAKWOUT
           END-EXEC.

      *--- Free any acquired memory

           MOVE CGBXIN-FREE-MEMORY     TO CGBXIN-FUNC
           EXEC QSP CALL VLDTE_PL_DETL
                CGBXIN
                CGBXOUT
                TPACNTRL
                TGACNTRL
                TEACNTRL
                TPBSUPP
                TPBSCHD
                TAKICMPY
                TRACMPYL
           END-EXEC


++EXIT CA-CURSOR TYPE=ONLY

           IF CGBB-INTENT = WZAZLITS-EDIT-AMEND
                         OR WZAZLITS-EDIT-INSERT
              MOVE 'Y'                 TO CZAZSOFT-CURSOR-NOT-HERE
              MOVE MGBC-CURNT-PAGE-F   TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
           END-IF

++EXIT CB-MAP-FIELDS TYPE=ONLY

      *--- SET UP TRANSACTION RUNNING TOTALS AND UPDATE BATCH TOTALS
           MOVE EGBB0-DETL-GROSS-AMT   TO MGBC-DETL-GROSS-AMT-TOT
           MOVE 'Y'                    TO MGBC-DETL-GROSS-AMT-TOT-S
           MOVE EGBB0-DETL-TAX-AMT     TO MGBC-DETL-TAX-AMT-TOT
           MOVE 'Y'                    TO MGBC-DETL-TAX-AMT-TOT-S
           MOVE EGBB0-SLFASSD-TAX-AMT  TO MGBC-SLFASSD-TAX-AMT
           MOVE 'Y'                    TO MGBC-SLFASSD-TAX-AMT-S
           MOVE EGBB0-INV-VAT-NON-REC  TO MGBC-INV-VAT-NON-REC
           MOVE 'Y'                    TO MGBC-INV-VAT-NON-REC-S
           MOVE EGBB0-INV-VAT-REC      TO MGBC-INV-VAT-REC
           MOVE 'Y'                    TO MGBC-INV-VAT-REC-S

           IF EGBB0-TRAN-TYPE = SPACES
           AND MGBC-TRAN-TYPE = SPACES
              MOVE CGBB-TRAN-TYPE      TO MGBC-TRAN-TYPE
              MOVE 'Y'                 TO MGBC-TRAN-TYPE-S
           END-IF

      *--- HAS AMENDMENT OF THE SLFASSD-TAX-IND BEEN DENIED
           IF CGBB-C-SLFASSD-TAX-DNL-FLAG = 'Y'
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-SLFASSD-TAX-IND-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
           END-IF

           IF TGACNTRL-UNREG-TAX-CODE = SPACE
           OR TGACNTRL-UNREG-HAND = SPACE
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-TAX-REG-IND-F  TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-TAX-REG-NUM-F  TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
           END-IF

      *--- WHEN ENTERING PREVIOUSLY LOGGED INVOICES, PROTECT THE
      *--- FOLLOWING
           IF CGBB-LOG-FLAG = 'Y'
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-SUPP-F         TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-TRAN-REF-F     TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-TRAN-DATE-F    TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-RCVD-DATE-F    TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-TRAN-STYPE-F   TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-ELEM-F         TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-INV-GROSS-AMT-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-INV-TAX-AMT-F  TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-CURR-F         TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-RATE-TYPE-F    TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-EFF-DATE-F     TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-EXCH-RATE-F    TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-TRAN-TAX-CODE-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-TRAN-TAX-TYPE-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-TRAN-LOCTN-F   TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-TRAN-HAND-F    TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-TRAN-TAX-DATE-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-SLFASSD-TAX-IND-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-PYMNT-ADDR-F    TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
           END-IF
           IF  TGACNTRL-LOG-IND = TGACNTRL-LI-MIXED
           AND MGBC-SYSREF = ZERO
           AND (CGBB-INTENT = WZAZLITS-EDIT-AMEND
                        AND = WZAZLITS-EDIT-INSERT)
              MOVE 'Y'                 TO CZAZSOFT-UNPROTECT-IND
              MOVE MGBC-SUPP-F         TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-UNPROTECT-IND
              MOVE MGBC-TRAN-REF-F     TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-UNPROTECT-IND
              MOVE MGBC-TRAN-DATE-F    TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-UNPROTECT-IND
              MOVE MGBC-RCVD-DATE-F    TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-UNPROTECT-IND
              MOVE MGBC-TRAN-STYPE-F   TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-UNPROTECT-IND
              MOVE MGBC-ELEM-F         TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-UNPROTECT-IND
              MOVE MGBC-INV-GROSS-AMT-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-UNPROTECT-IND
              MOVE MGBC-INV-TAX-AMT-F  TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-UNPROTECT-IND
              MOVE MGBC-CURR-F         TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-UNPROTECT-IND
              MOVE MGBC-RATE-TYPE-F    TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-UNPROTECT-IND
              MOVE MGBC-EFF-DATE-F     TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-UNPROTECT-IND
              MOVE MGBC-EXCH-RATE-F    TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-UNPROTECT-IND
              MOVE MGBC-TRAN-TAX-CODE-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-UNPROTECT-IND
              MOVE MGBC-TRAN-TAX-TYPE-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-UNPROTECT-IND
              MOVE MGBC-TRAN-LOCTN-F   TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-UNPROTECT-IND
              MOVE MGBC-TRAN-HAND-F    TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-UNPROTECT-IND
              MOVE MGBC-TRAN-TAX-DATE-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-UNPROTECT-IND
              MOVE MGBC-SLFASSD-TAX-IND-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-UNPROTECT-IND
              MOVE MGBC-PYMNT-ADDR-F    TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
           END-IF

      *--- WHEN NOT ENTERING LOGGED INVOICES, PROTECT SYSREF
           IF  CGBB-LOG-FLAG = SPACES
           AND TGACNTRL-LOG-IND NOT = TGACNTRL-LI-MIXED
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-SYSREF-F       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
           END-IF

      *--- WHEN ICA NOT ON FOR THIS COMPANY, PROTECT ELEMENT
           IF WAZCMPYD-ICA-STRUC = SPACES
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-ELEM-F         TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
           END-IF

      *--- If AP Controls are not setup to indicate that multiple
      *--- Authorisation Groups can be defined against a Transaction
      *--- Legend protect the Authorisation Group field
           IF TGACNTRL-MULT-AUTH-GRP-FLAG NOT = 'Y'
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-AUTH-GRP-F     TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
           END-IF

      *--- SINGLE CHEQUE PROCESSING ONLY ALLOWED FOR INVOICES.
           IF CGBB-TRAN-TYPE NOT = WGZZCNTL-TYPE-INVCE
              MOVE 'Y'                  TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-SNGL-CHQ-FLAG-F TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
           END-IF

      *--- WHEN ENTERING DEBIT NOTES, PROTECT TAX FIELDS WHEN NOT ALLOWED
           IF CGBB-TRAN-TYPE        = WGZZCNTL-TYPE-DRN
           AND TGACNTRL-TAX-DRN-IND = TGACNTRL-TDRN-NONE
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-INV-TAX-AMT-F  TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL

              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-TRAN-TAX-CODE-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL

              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-TRAN-TAX-TYPE-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL

              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-TRAN-LOCTN-F   TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL

              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-TRAN-HAND-F    TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL

              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-SLFASSD-TAX-IND-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL

              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-DSCNT-TERM-1-F TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL

              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-DSCNT-TERM-2-F TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL

              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-DSCNT-TERM-3-F TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
++IF TARGET(POP=Y)
|             MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
|             MOVE MGBC-ORDR-REF-F     TO CZAZSOFT-FIELD
|             PERFORM SZAZSOFT-SET-APPL
|
|             MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
|             MOVE MGBC-ADVC-NOTE-F    TO CZAZSOFT-FIELD
|             PERFORM SZAZSOFT-SET-APPL
++END-IF
           END-IF
      *--- WHEN TRANSACTION TOTALS CORRECTION NOT ALLOWED, PROTECT GROSS
      *--- AND TAX AMOUNTS WHEN DETAIL LINES EXIST
           IF  TGACNTRL-TRAN-TOT-CORR-FLAG = SPACE
           AND EGBC0R-NENTRIES > ZERO
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-INV-GROSS-AMT-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-INV-TAX-AMT-F TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
           END-IF

      *--- If receive date flag at company level set to spaces
      *--- then protect the Receive Date Field

           IF  TGACNTRL-RCVD-DATE-FLAG = SPACE
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-RCVD-DATE-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
           END-IF

      *--- IF DETAIL LINES EXIST, PROTECT CERTAIN FIELDS
      *--- ADD TEST ON INTENT FOR 32048. SDB 6/4/94
           IF  (EGBC0R-NENTRIES > ZERO AND
                TPBSUPP-VAT-NET-FLAG = 'Y')
           AND (EGBB0-C-DETL-DISP-FLAG = 'Y' OR
                CGBB-INTENT        NOT = WZAZLITS-EDIT-INSERT)
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-DSCNT-TERM-1-F TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-DSCNT-TERM-2-F TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-DSCNT-TERM-3-F TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
           END-IF

      *--- IF DETAIL LINES EXIST, PROTECT CERTAIN FIELDS
           IF  EGBC0R-NENTRIES > ZERO
           AND EGBB0-C-DETL-DISP-FLAG = 'Y'
           AND EGBB0-STATUS-FLAG NOT  = '1'
           AND WS-INVALID-HEADER-FLAG NOT = 'Y'
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-SUPP-F         TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-TRAN-STYPE-F   TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-ELEM-F         TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-CURR-F         TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-RATE-TYPE-F    TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-EFF-DATE-F     TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-EXCH-RATE-F    TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-SLFASSD-TAX-IND-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
++IF TARGET(POP=Y)
|             MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
|             MOVE MGBC-ORDR-REF-F     TO CZAZSOFT-FIELD
|             PERFORM SZAZSOFT-SET-APPL
|
|             MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
|             MOVE MGBC-ADVC-NOTE-F    TO CZAZSOFT-FIELD
|             PERFORM SZAZSOFT-SET-APPL
|
|             MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
|             MOVE MGBC-SEL-ALL-F      TO CZAZSOFT-FIELD
|             PERFORM SZAZSOFT-SET-APPL
|
|             MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
|             MOVE MGBC-SEL-AUTO-F     TO CZAZSOFT-FIELD
|             PERFORM SZAZSOFT-SET-APPL
++END-IF
           END-IF

           IF CZAZPUBL-FLAG-POP NOT = 'Y'
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-ORDR-REF-F     TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL

              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-ADVC-NOTE-F    TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL

              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-SEL-ALL-F      TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL

              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-SEL-AUTO-F     TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
           END-IF

           MOVE CGBB-C-LOG-ENTRY       TO MGBC-CURNT-PAGE
           MOVE 'Y'                    TO MGBC-CURNT-PAGE-S
           MOVE EGBB0R-NENTRIES        TO MGBC-MAX-PAGE
           MOVE 'Y'                    TO MGBC-MAX-PAGE-S

      *--- DO NOT DISPLAY A ZERO SYSREF
           IF  MGBC-SYSREF = ZERO
           AND MGBC-SYSREF-S NOT = 'E'
              MOVE 'N'                 TO MGBC-SYSREF-S
           END-IF

           IF EGBC0R-NENTRIES       > ZERO
           OR CGBB-C-DETL-DISP-FLAG = 'Y'
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-SKEL-CODE-F    TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
           END-IF

           IF  MGBC-SA-TYPE = '0'
           AND MGBC-SA-TYPE-S NOT = 'E'
               MOVE 'N'                TO MGBC-SA-TYPE-S
           END-IF

      *--- If detail lines have been created then prepayment fields
      *--- cannot be amended unless lines are deleted and reentered
           IF EGBC0R-NENTRIES > ZERO
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-PRPYMNT-OCCUR-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-PRPYMNT-STRT-PER-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-PRPYMNT-STRT-YY-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
           ELSE
              MOVE 'Y'                 TO CZAZSOFT-UNPROTECT-IND
              MOVE MGBC-PRPYMNT-OCCUR-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-UNPROTECT-IND
              MOVE MGBC-PRPYMNT-STRT-PER-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-UNPROTECT-IND
              MOVE MGBC-PRPYMNT-STRT-YY-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
           END-IF

      *--- Once transferred from FGEN the sysref has only just been
      *--- populated, so force re-validation
           IF  CGBB-LOG-SYSREF NOT = ZERO
           AND CGBB-LOG-SUPP   NOT = SPACES
               MOVE CGBB-CMPY          TO TGBTRAN-CMPY
               MOVE CGBB-LOG-SUPP      TO TGBTRAN-SUPP
               MOVE CGBB-LOG-SYSREF    TO TGBTRAN-SYSREF
               PERFORM SQL-SELECT-TGBTRAN
               IF SQLCODE = WZAZSQL-NOT-FOUND
                  MOVE ZERO            TO CGBB-LOG-SYSREF
                  MOVE SPACES          TO CGBB-LOG-SUPP
                  GO TO +++-EXIT
               END-IF
               MOVE CGBB-LOG-SUPP      TO CGBB-SUPP
                                          MGBC-SUPP
               MOVE 'Y'                TO MGBC-SUPP-S
      *---     Reverse signs for Credit and Debit Notes
               IF TGBTRAN-CURR = WAZCMPYD-BASE-CURR
                  IF TGBTRAN-TRAN-TYPE NOT = '1'
                     MULTIPLY -1       BY TGBTRAN-GROSS-AMT
                     MULTIPLY -1       BY TGBTRAN-TAX-AMT
                  END-IF
                  MOVE TGBTRAN-GROSS-AMT
                                       TO MGBC-INV-GROSS-AMT
                  MOVE 'Y'             TO MGBC-INV-GROSS-AMT-S
                  MOVE TGBTRAN-TAX-AMT
                                       TO MGBC-INV-TAX-AMT
                  MOVE 'Y'             TO MGBC-INV-TAX-AMT-S
               ELSE
                  MOVE TGBTRAN-CMPY    TO TGBCURR-CMPY
                  MOVE TGBTRAN-SUPP    TO TGBCURR-SUPP
                  MOVE TGBTRAN-ENTRY-DATE
                                       TO TGBCURR-ENTRY-DATE
                  MOVE TGBTRAN-SYSREF  TO TGBCURR-SYSREF
                  PERFORM SQL-SELECT-TGBCURR
                  IF TGBTRAN-TRAN-TYPE NOT = '1'
                     MULTIPLY -1       BY TGBCURR-NBASE-GROSS-AMT
                     MULTIPLY -1       BY TGBCURR-NBASE-TAX-AMT
                  END-IF
                  MOVE TGBCURR-NBASE-GROSS-AMT
                                       TO MGBC-INV-GROSS-AMT
                  MOVE 'Y'             TO MGBC-INV-GROSS-AMT-S
                  MOVE TGBCURR-NBASE-TAX-AMT
                                       TO MGBC-INV-TAX-AMT
                  MOVE 'Y'             TO MGBC-INV-TAX-AMT-S
               END-IF
               MOVE TGBTRAN-TAX-CODE   TO MGBC-TRAN-TAX-CODE
               MOVE 'Y'                TO MGBC-TRAN-TAX-CODE-S
               MOVE TGBTRAN-DSCNT-AMT  TO MGBC-DSCNT-AMT
               MOVE 'Y'                TO MGBC-DSCNT-AMT-S
               MOVE TGBTRAN-DSCNT-PERC TO MGBC-DSCNT-PERC
               MOVE 'Y'                TO MGBC-DSCNT-PERC-S
               MOVE TGBTRAN-DSCNT-TERM-1
                                       TO MGBC-DSCNT-TERM-1
               MOVE 'Y'                TO MGBC-DSCNT-TERM-1-S
               MOVE TGBTRAN-DSCNT-TERM-2
                                       TO MGBC-DSCNT-TERM-2
               MOVE 'Y'                TO MGBC-DSCNT-TERM-2-S
               MOVE TGBTRAN-DSCNT-TERM-3
                                       TO MGBC-DSCNT-TERM-3
               MOVE 'Y'                TO MGBC-DSCNT-TERM-3-S
               MOVE TGBTRAN-STLMNT     TO MGBC-STLMNT-S
               MOVE TGBTRAN-CURR       TO MGBC-CURR
               MOVE 'Y'                TO MGBC-CURR-S
               MOVE TGBTRAN-ELEM       TO MGBC-ELEM
               MOVE 'Y'                TO MGBC-ELEM-S
               MOVE TGBTRAN-NCIS-EXCLD
                                       TO MGBC-NCIS-EXCLD
               MOVE 'Y'                TO MGBC-NCIS-EXCLD-S
               MOVE TGBTRAN-BANK       TO MGBC-PRE-STTLD-BANK
               MOVE 'Y'                TO MGBC-PRE-STTLD-BANK-S
               MOVE TGBTRAN-PRE-STTLD-REF
                                       TO MGBC-PRE-STTLD-REF
               MOVE 'Y'                TO MGBC-PRE-STTLD-REF-S
               IF TGBTRAN-PRPYMNT-OCCUR > 0
                  MOVE TGBTRAN-PRPYMNT-OCCUR
                                       TO MGBC-PRPYMNT-OCCUR
                  MOVE 'Y'             TO MGBC-PRPYMNT-OCCUR-S
               END-IF
               IF TGBTRAN-PRPYMNT-STRT-PER > 0
                  MOVE TGBTRAN-PRPYMNT-STRT-PER
                                       TO MGBC-PRPYMNT-STRT-PER
                  MOVE 'Y'             TO MGBC-PRPYMNT-STRT-PER-S
               END-IF
               IF TGBTRAN-PRPYMNT-STRT-YY > 0
                  MOVE TGBTRAN-PRPYMNT-STRT-YY
                                       TO MGBC-PRPYMNT-STRT-YY
                  MOVE 'Y'             TO MGBC-PRPYMNT-STRT-YY-S
               END-IF
               IF TGBTRAN-RECUR-INTRVL > 0
                  MOVE TGBTRAN-RECUR-INTRVL
                                       TO MGBC-RECUR-INTRVL
                  MOVE 'Y'             TO MGBC-RECUR-INTRVL-S
               END-IF
               IF TGBTRAN-RECUR-OCCUR > 0
                  MOVE TGBTRAN-RECUR-OCCUR
                                       TO MGBC-RECUR-OCCUR
                  MOVE 'Y'             TO MGBC-RECUR-OCCUR-S
               END-IF
               MOVE TGBTRAN-PYMNT-ADDR TO MGBC-PYMNT-ADDR
               MOVE 'Y'                TO MGBC-PYMNT-ADDR-S
               MOVE TGBTRAN-TRAN-STYPE TO MGBC-TRAN-STYPE
               MOVE 'Y'                TO MGBC-TRAN-STYPE-S
               MOVE TGBTRAN-SLFASSD-TAX-IND
                                       TO MGBC-SLFASSD-TAX-IND
               MOVE 'Y'                TO MGBC-SLFASSD-TAX-IND-S
               MOVE TGBTRAN-HAND       TO MGBC-TRAN-HAND
               MOVE 'Y'                TO MGBC-TRAN-HAND-S
               MOVE TGBTRAN-SNGL-CHQ-FLAG
                                       TO MGBC-SNGL-CHQ-FLAG
               MOVE 'Y'                TO MGBC-SNGL-CHQ-FLAG-S
               MOVE TGBTRAN-OVRD-FACTOR
                                       TO MGBC-OVRD-FACTOR
               MOVE 'Y'                TO MGBC-OVRD-FACTOR-S
               MOVE TGBTRAN-SUPP-POSTCODE
                                       TO MGBC-SUPP-POSTCODE
               MOVE 'Y'                TO MGBC-SUPP-POSTCODE-S
               MOVE ZERO               TO CGBB-SYSREF

      *--- If intent is insert we are copying a transaction and need to
      *--- initialise sysref
               IF CGBB-INTENT = WZAZLITS-EDIT-INSERT
               AND CGBB-LOG-FLAG NOT = 'Y'
                  MOVE ZERO            TO MGBC-SYSREF
                  MOVE 'N'             TO MGBC-SYSREF-S
               ELSE
                  MOVE CGBB-LOG-SYSREF TO MGBC-SYSREF
                  MOVE 'Y'             TO MGBC-SYSREF-S
               END-IF

               MOVE 'N'                TO MGBC-RATE-TYPE-S
                                          EGBB0-RATE-TYPE-S
                                          MGBC-EFF-DATE-S
                                          EGBB0-EFF-DATE-S
                                          MGBC-EXCH-RATE-S
                                          EGBB0-EXCH-RATE-S
               MOVE SPACES             TO CGBB-LOG-SUPP
                                          MGBC-RATE-TYPE
                                          EGBB0-RATE-TYPE
               MOVE ZERO               TO CGBB-LOG-SYSREF
                                          MGBC-EXCH-RATE
                                          EGBB0-EXCH-RATE
               MOVE WZAZLITS-MIN-DATE  TO MGBC-EFF-DATE
                                          EGBB0-EFF-DATE
               PERFORM H-VALIDATE-FIXED
           END-IF


++EXIT CC-ACTIONS TYPE=ONLY

      *--- EXCLUDE ACTION TO DISPLAY SCREEN WHEN THAT SCREEN IS ALREADY
      *--- DISPLAYED
           IF CGBB-C-APPL = WS-HDR-APPL
              MOVE 51                  TO CZAZSOFT-EXCL-ACTION
              PERFORM SZAZSOFT-EXCLUDE-ACTION
              MOVE 71                  TO CZAZSOFT-EXCL-ACTION
              PERFORM SZAZSOFT-EXCLUDE-ACTION
           ELSE
              MOVE 52                  TO CZAZSOFT-EXCL-ACTION
              PERFORM SZAZSOFT-EXCLUDE-ACTION
           END-IF

      *--- SUSPEND, NEW TRANSACTION AND DELETE TRANSACTION ONLY VALID
      *--- WHEN INSERTING OR AMENDING A BATCH
           IF CGBB-INTENT NOT = WZAZLITS-EDIT-AMEND
                      AND NOT = WZAZLITS-EDIT-INSERT
              MOVE 60                  TO CZAZSOFT-EXCL-ACTION
              PERFORM SZAZSOFT-EXCLUDE-ACTION
              MOVE 63                  TO CZAZSOFT-EXCL-ACTION
              PERFORM SZAZSOFT-EXCLUDE-ACTION
              MOVE 70                  TO CZAZSOFT-EXCL-ACTION
              PERFORM SZAZSOFT-EXCLUDE-ACTION
           END-IF

      *--- NEW TRANSACTION AND DELETE TRANSACTION NOT VALID WHEN SYSTEM
      *--- REFS HAVE BEEN ALLOCATED
           IF CGBB-B-SYSREF-ALLOC-FLAG = 'Y'
              MOVE 60                  TO CZAZSOFT-EXCL-ACTION
              PERFORM SZAZSOFT-EXCLUDE-ACTION
              MOVE 63                  TO CZAZSOFT-EXCL-ACTION
              PERFORM SZAZSOFT-EXCLUDE-ACTION
           END-IF

      *--- LAST TRANSACTION NOT VALID IF WE ARE DISPLAYING THE FIRST ONE
           IF CGBB-C-LOG-ENTRY = 1
              MOVE 61                  TO CZAZSOFT-EXCL-ACTION
              PERFORM SZAZSOFT-EXCLUDE-ACTION
           END-IF

      *--- NEXT TRANSACTION NOT VALID IF WE ARE DISPLAYING THE LAST ONE
           IF CGBB-C-LOG-ENTRY = EGBB0R-NENTRIES
              MOVE 62                  TO CZAZSOFT-EXCL-ACTION
              PERFORM SZAZSOFT-EXCLUDE-ACTION
           END-IF

      *--- DON'T ALLOW NEW, LAST AND NEXT TRANSACTION IF THERE
      *--- ARE ERRORS
           IF CGBB-C-ERROR-COUNT > 0
           OR CGBB-C-WARNING-COUNT > 0
           OR NOT CZAZSTCK-DATA-VALID
              MOVE 60                  TO CZAZSOFT-EXCL-ACTION
              PERFORM SZAZSOFT-EXCLUDE-ACTION
              MOVE 61                  TO CZAZSOFT-EXCL-ACTION
              PERFORM SZAZSOFT-EXCLUDE-ACTION
              MOVE 62                  TO CZAZSOFT-EXCL-ACTION
              PERFORM SZAZSOFT-EXCLUDE-ACTION
           END-IF

      *--- EXCLUDE AUTHORISATION ACTIONS DEPENDING ON CERTAIN CRITERIA
      *--- WHEN AUTHORISATION NOT REQUIRED AT ALL, EXCLUDE ACTIONS
           IF EGBB0-AUTH-CNTRL = SPACES
           OR EGBB0-AUTH-MTHD  = '0'
              MOVE 55                  TO CZAZSOFT-EXCL-ACTION
              PERFORM SZAZSOFT-EXCLUDE-ACTION
              MOVE 56                  TO CZAZSOFT-EXCL-ACTION
              PERFORM SZAZSOFT-EXCLUDE-ACTION
           END-IF

      *--- AUTHORISATION MUST BE AT EITHER HEADER OR LINE LEVEL
           IF EGBB0-AUTH-LVL = '1'
              MOVE 56                  TO CZAZSOFT-EXCL-ACTION
              PERFORM SZAZSOFT-EXCLUDE-ACTION
           ELSE
              MOVE 55                  TO CZAZSOFT-EXCL-ACTION
              PERFORM SZAZSOFT-EXCLUDE-ACTION
           END-IF

      *--- EXCLUDE HEADER AUTHORISATION ACTION WHEN VALUE OF TRANSACTION
      *--- IS LESS THAN MINIMUM AUTHORISATION VALUE
           IF EGBB0-AUTH-LVL = '1'
              IF MGBC-CURR    = WAZCMPYD-BASE-CURR
                 MOVE EGBB0-AMT-TO-AUTH
                                       TO WS-BASE-AMT
              ELSE
                 INITIALIZE CAGP
                 MOVE CAGP-CALC-VAL    TO CAGP-FUNC
                 MOVE WAZCMPYD-BASE-CURR
                                       TO CAGP-BASE-CURR
                 MOVE MGBC-CURR        TO CAGP-NON-BASE-CURR
                 MOVE EGBB0-CONV-UNITS
                                       TO CAGP-CONV-UNITS-I
                 MOVE EGBB0-CONV-DRCTN
                                       TO CAGP-CONV-DRCTN-I
                 MOVE EGBB0-AMT-TO-AUTH
                                       TO CAGP-NON-BASE-VAL-I
                 MOVE MGBC-EXCH-RATE   TO CAGP-EXCH-RATE-I
                 MOVE '0'              TO CAGP-NBASE-TOLRN-IND
                 EXEC QSP CALL VLDTE_CURR
                      CAGP
                 END-EXEC
                 MOVE CAGP-BASE-VAL-O  TO WS-BASE-AMT
              END-IF
              IF WS-BASE-AMT > 0
              OR TPBSUPP-AUTH-NEG-FLAG NOT = 'Y'
                 MOVE WS-BASE-AMT      TO WS-POS-BASE-AMT
              ELSE
                 COMPUTE WS-POS-BASE-AMT = WS-BASE-AMT * -1
              END-IF
              IF WS-POS-BASE-AMT < EGBB0-AUTH-MIN-VAL
                 MOVE 55               TO CZAZSOFT-EXCL-ACTION
                 PERFORM SZAZSOFT-EXCLUDE-ACTION
              END-IF
           END-IF

           IF CGBB-BTCH-STAT = '6'
              MOVE WZAZLITS-LINE-WARNINGS
                                       TO CZAZSOFT-EXCL-ACTION
              PERFORM SZAZSOFT-EXCLUDE-ACTION
           END-IF

++IF TARGET(POP=Y)
|
|     *--- EXCLUDE ORDERS WHEN POP NOT IN USE
|
|          IF CZAZPUBL-FLAG-POP NOT = 'Y'
|             MOVE 57                  TO CZAZSOFT-EXCL-ACTION
|             PERFORM SZAZSOFT-EXCLUDE-ACTION
|          END-IF
|
|     *--- EXCLUDE GRN WHEN POP NOT IN USE
|
|          IF CZAZPUBL-FLAG-POP NOT = 'Y'
|             MOVE 58                  TO CZAZSOFT-EXCL-ACTION
|             PERFORM SZAZSOFT-EXCLUDE-ACTION
|          END-IF

      *--- EXCLUDE TRANSACTION ORDERS IF INVOICE DETAIL LINES HAVE
      *--- ALREADY BEEN SELECTED AND BUILT
           IF EGBC0R-NENTRIES > ZERO
              MOVE 57                  TO CZAZSOFT-EXCL-ACTION
              PERFORM SZAZSOFT-EXCLUDE-ACTION
           END-IF
|
|     *--- EXCLUDE ORDER ACTION IF ORDER OR ADVICE NOTE ENTERED ON
|     *--- HEADER
|          IF  MGBC-ORDR-REF    = SPACES
|          AND MGBC-ADVC-NOTE   = SPACES
|             CONTINUE
|          ELSE
|             MOVE 57                  TO CZAZSOFT-EXCL-ACTION
|             PERFORM SZAZSOFT-EXCLUDE-ACTION
|          END-IF
|
|          IF CGBB-C-EWS-LINE-NUM = ZERO
|             ADD 1                    TO CGBB-C-EWS-LINE-NUM
|          END-IF
|
           IF CZAZSTCK-ACTION = 43
           AND WS-UPDATE-ORDER-FLAG = 'Y'
               MOVE CGBB-CMPY         TO TDOORDER-CMPY
               MOVE TDOORDER-DOC-ORDR TO TDOORDER-DOC-IND
               MOVE MGBC-ORDR-REF     TO TDOORDER-ORDR-REF
               MOVE MGBC-SUPP         TO TDOORDER-ALT-INVCE-SUPP
               PERFORM SQL-UPDATE-TDOORDER
           END-IF

|     *--- IF ACTION (52) = DETAIL LINES, THE HEADER INFORMATION
|     *--- IS VALID, THE HEADER TEXT HAS NOT BEEN SEEN
|          IF  CZAZSTCK-ACTION              = 52
|          AND (WS-INVALID-HEADER-FLAG      = SPACES
|          OR   CGBB-INTENT                 = WZAZLITS-EDIT-VIEW)
|          AND  EGBB0-HDR-TXT-SEEN-FLAG NOT = 'Y'
|              IF EGBC0R-NENTRIES > 0
|                 PERFORM CCA-DISPLAY-TEXT
|                 MOVE 'Y'             TO EGBB0-HDR-TXT-SEEN-FLAG
|              END-IF
|              MOVE SPACES             TO CGBB-C-PREV-ORDR-REF
|              MOVE ZERO               TO CGBB-C-EWS-LINE-NUM
|          END-IF
|
|     *--- IF ACTION IS DISPLAY HEADER TEXT
|          IF  CZAZSTCK-ACTION              = 64
|          AND (WS-INVALID-HEADER-FLAG      = SPACES
|          OR   CGBB-INTENT                 = WZAZLITS-EDIT-VIEW)
|              IF EGBC0R-NENTRIES > 0
|                 PERFORM CCA-DISPLAY-TEXT
|                 MOVE 'Y'             TO EGBB0-HDR-TXT-SEEN-FLAG
|              END-IF
|              MOVE SPACES             TO CGBB-C-PREV-ORDR-REF
|              MOVE ZERO               TO CGBB-C-EWS-LINE-NUM
|          END-IF
|
|     *--- IF TRANSACTION IS ORDER RELATED AND AUTHORISATIONS NOT
|     *--- REQUIRED FOR ORDER RELATED TRANSACTIONS THEN EXCLUDE
|     *--- HEADER/LINE AUTHORISATION ACTION; EXCEPT WHEN SUPPLIER
|     *--- PERMITS AUTHORISATION OF MISCELLANEOUS CHARGE LINES.
      *--- OR AN ADDITIONAL INVOICE LINE IS ADDED.
|     *    IF  EGBB0-ORDR-REF     NOT = SPACES
|     *    AND CGBVOUT-AUTH-ORDR-RLTD = SPACE
               IF EGBB0-AMT-TO-AUTH = 0
|                 MOVE 55               TO CZAZSOFT-EXCL-ACTION
|                 PERFORM SZAZSOFT-EXCLUDE-ACTION
|                 MOVE 56               TO CZAZSOFT-EXCL-ACTION
|                 PERFORM SZAZSOFT-EXCLUDE-ACTION
|              END-IF
|     *    END-IF
++END-IF

           IF CGBB-INTENT = WZAZLITS-EDIT-INSERT
           OR CGBB-INTENT = WZAZLITS-EDIT-COPY
              MOVE CGBB-CMPY           TO TAUADATA-KEY-CMPY
              MOVE CGBB-EWS-INSTANCE
                                       TO TAUADATA-KEY-INT-1
              MOVE 'N'                 TO HV-ROW-EXISTS
              PERFORM SQL-SELECT-TAUADATA-N
           ELSE
              MOVE CGBB-CMPY           TO TAUADATA-KEY-CMPY
              MOVE MGBC-SUPP           TO TAUADATA-KEY-12
              IF MGBC-ENTRY-DATE > WZAZLITS-MIN-DATE
                 MOVE MGBC-ENTRY-DATE  TO TAUADATA-KEY-DATE
              ELSE
                 MOVE WZAZLITS-MIN-DATE
                                       TO TAUADATA-KEY-DATE
              END-IF
              MOVE EGBB0-SYSREF        TO TAUADATA-KEY-INT
              MOVE 'N'                 TO HV-ROW-EXISTS
              PERFORM SQL-SELECT-TAUADATA
           END-IF
           IF HV-ROW-EXISTS = 'Y'
              MOVE 'Y'                 TO CGBB-C-USR-DATA-EXISTS
           ELSE
              MOVE SPACE               TO CGBB-C-USR-DATA-EXISTS
           END-IF

++EXIT E-BUILD TYPE=ONLY


           IF CZAZSTCK-ACTION = WZAZLITS-FETCH-RETRIEVE

              PERFORM EGBC0-CLOSE
              PERFORM E3-BUILD-FROM-KIT
              PERFORM EGBC0-DEFINE
           END-IF

           IF EGBC0R-NENTRIES NOT = ZERO
              GO TO +++-EXIT
           END-IF

      *--- ONLY BUILD FROM TGBB'S WHEN FIRST TIME IN
           IF CZAZSTCK-PREV-PRG NOT = 'FGBB'
               GO TO +++-EXIT
           END-IF

           MOVE CGBB-CMPY              TO TGBBDETL-CMPY
                                          TGBBANAL-CMPY
           MOVE CGBB-BTCH-NUM          TO TGBBDETL-BTCH-NUM
                                          TGBBANAL-BTCH-NUM
           MOVE EGBB0-TRAN-SEQ-NUM     TO TGBBDETL-TRAN-SEQ-NUM
                                          TGBBANAL-TRAN-SEQ-NUM
           MOVE EGBC0R-LOG-ENTRY       TO TGBBDETL-DETL-SEQ-NUM
                                          TGBBANAL-DETL-SEQ-NUM

++IF TARGET(POP=Y)
|          MOVE CGBB-CMPY              TO TGBBORDR-CMPY
|                                         TGBBGRN-CMPY
|          MOVE CGBB-BTCH-NUM          TO TGBBORDR-BTCH-NUM
|                                         TGBBGRN-BTCH-NUM
|          MOVE EGBB0-TRAN-SEQ-NUM     TO TGBBORDR-TRAN-SEQ-NUM
|                                         TGBBGRN-TRAN-SEQ-NUM
|          MOVE EGBC0R-LOG-ENTRY       TO TGBBORDR-DETL-SEQ-NUM
|                                         TGBBGRN-DETL-SEQ-NUM
++END-IF

           IF CZAZSTCK-SRCH-LIMIT-FLAG = 'Y'
              MOVE EGBC0R-NENTRIES     TO EGBC0P-LOG-ENTRY
              PERFORM EGBC0-GET
              MOVE EGBC0-DETL-SEQ-NUM  TO HV-DETL-SEQ-NUM
           ELSE
              MOVE ZEROES              TO HV-DETL-SEQ-NUM
           END-IF

++EXIT E-BUILD-END TYPE=ONLY

           IF CGBB-RECREATE-FLAG = 'Y'
              IF EGBC0R-NENTRIES > 0
                 INITIALIZE CGRM

                 MOVE CGRM-GRN-RCRTE      TO CGRM-FUNC

                 MOVE CGBB-CMPY           TO CGRM-CMPY
                 MOVE EGBB0-SUPP          TO CGRM-SUPP
                 MOVE CGBB-TRAN-TYPE      TO CGRM-TRAN-TYPE
                 MOVE CGBB-EWS-INSTANCE   TO CGRM-EWS-INSTANCE
                 MOVE CGBB-C-ESN          TO CGRM-C-ESN
                 MOVE CGBB-RA-ESN         TO CGRM-RA-ESN
                 MOVE CGBB-RB-ESN         TO CGRM-RB-ESN
                 MOVE CGBB-C-LOG-ENTRY    TO CGRM-B-LOG-ENTRY
                 MOVE MGBC-CURR           TO CGRM-TRAN-CURR
                 MOVE WAZCMPYD-BASE-CURR  TO CGRM-BASE-CURR

                 PERFORM EGBC0-CLOSE
                 PERFORM EGBB0-CLOSE

                 EXEC QSP CALL BUILD_EWS_PL_TRAN
                      CGRM
                 END-EXEC

                 PERFORM EGBC0-DEFINE
                 PERFORM EGBB0-DEFINE
              END-IF

           END-IF

++EXIT EA-BUILD-EWS-ROW TYPE=POST

      *--- THE FOLLOWING CODE TO BE EXECUTED AFTER THE EWS ROW HAS BEEN
      *--- BUILT AS BATCHES MAY BE SAVED WITH WARNINGS OR ERRORS
      *--- OUTSTANDING. THE PURPOSE OF THIS SECTION IS TO ENSURE THAT
      *--- WHEN BATCHES ARE AMENDED, THE RELEVANT ERROR AND WARNING
      *--- FIELDS USED BY THE MODEL ARE POPULATED

           MOVE TGBBDETL-ERR-STAT      TO EGBC0-STATUS-FLAG

           MOVE 'Y'                    TO CGBB-C-DETL-DISP-FLAG
           MOVE 'Y'                    TO EGBB0-C-DETL-DISP-FLAG

      *--- DEFAULT THE SELECTION FIELD SINCE ONLY LINES WHICH WERE
      *--- ORIGINALLY SELECTED WILL BE HAVE BEEN SAVED TO TGBBDETL
      *--- Note that this should only happen if the line has details
      *--- entered on it.

           if EGBC0-DESCR-S = 'Y'
           or EGBC0-QTY-INVCD-S = 'Y'
           or EGBC0-TAX-CODE-S = 'Y'
           or EGBC0-ITEM-PRC-S = 'Y'
           or EGBC0-ITEM-S = 'Y'
           or EGBC0-TAX-TYPE-S = 'Y'
           or EGBC0-TAX-DATE-S = 'Y'
           or EGBC0-LOCTN-S = 'Y'
           or EGBC0-HAND-S = 'Y'
           or EGBC0-DSCNT-1-S = 'Y'
           or EGBC0-DSCNT-2-S = 'Y'
           or EGBC0-DSCNT-3-S = 'Y'
           or EGBC0-QUOM-S = 'Y'
           or EGBC0-PUOM-S = 'Y'
           or EGBC0-GL-CMPY-S = 'Y'
           or EGBC0-GL-ACCT-S = 'Y'
           or EGBC0-GL-ANAL-S = 'Y'
           or EGBC0-PROJ-S = 'Y'
           or EGBC0-RECON-S = 'Y'
           or EGBC0-SRVC-CODE-S = 'Y'
           or EGBC0-SRVC-CHRG-TYPE-S = 'Y'
           or EGBC0-SRVC-REF-S = 'Y'
           or EGBC0-SRVC-FROM-DATE-S = 'Y'
           or EGBC0-SRVC-TO-DATE-S = 'Y'
           or EGBC0-SRVC-PREV-METER-S = 'Y'
           or EGBC0-SRVC-CURNT-METER-S = 'Y'
           or EGBC0-SRVC-METER-REF-S = 'Y'
           or EGBC0-SRVC-PREV-BL-TYPE-S = 'Y'
           or EGBC0-SRVC-CURNT-BL-TYPE-S = 'Y'
              MOVE 'Y'                    TO EGBC0-SEL
              MOVE 'Y'                    TO EGBC0-SEL-S
           end-if

           IF CGBB-INTENT      NOT = WZAZLITS-EDIT-DISABLE
              IF TGBBDETL-ERR-STAT = TGBBDETL-WARN
                 ADD 1                 TO WS-WARNING-COUNT
                 ADD 1                 TO CGBB-C-WARNING-COUNT
              END-IF
              IF TGBBDETL-ERR-STAT = TGBBDETL-ERR
                 ADD 1                 TO WS-ERROR-COUNT
                 ADD 1                 TO CGBB-C-ERROR-COUNT
              END-IF
           END-IF

      *--- ACCUMULATE AMOUNT TO AUTHORISE
++IF TARGET(POP=Y)
           IF TGBBDETL-PRO-RATA-IND NOT = '2'
              IF  EGBC0-ORDR-REF     NOT = SPACES
              AND EGBC0-ORDR-LINE-NUM    > 0
              AND CGBVOUT-AUTH-ORDR-RLTD = SPACE
                 CONTINUE
              ELSE
                 IF EGBC0-TAX-RCVBLE-FLAG = '1'
                    COMPUTE EGBB0-AMT-TO-AUTH =
                            EGBB0-AMT-TO-AUTH +
                            TGBBDETL-TOT-AMT
                 ELSE
                    COMPUTE EGBB0-AMT-TO-AUTH =
                            EGBB0-AMT-TO-AUTH +
                            TGBBDETL-TOT-AMT +
                            TGBBDETL-TAX-AMT +
                            TGBBDETL-SLFASSD-TAX-AMT
                 END-IF
                 IF EGBC0-TAX-RCVBLE-FLAG = '2'
                    SUBTRACT EGBC0-VAT-REC-VALUE
                        FROM EGBB0-AMT-TO-AUTH
                 END-IF
              END-IF
           END-IF
++ELSE
           IF TGBBDETL-PRO-RATA-IND NOT = '2'
              IF EGBC0-TAX-RCVBLE-FLAG = '1'
                 COMPUTE EGBB0-AMT-TO-AUTH =
                         EGBB0-AMT-TO-AUTH +
                         TGBBDETL-TOT-AMT
              ELSE
                 COMPUTE EGBB0-AMT-TO-AUTH =
                         EGBB0-AMT-TO-AUTH +
                         TGBBDETL-TOT-AMT +
                         TGBBDETL-TAX-AMT +
                         TGBBDETL-SLFASSD-TAX-AMT
              END-IF
              IF EGBC0-TAX-RCVBLE-FLAG = '2'
                 SUBTRACT EGBC0-VAT-REC-VALUE
                     FROM EGBB0-AMT-TO-AUTH
              END-IF
           END-IF
++END-IF

      *--- MAINTAIN HIGHEST SEQUENCE NUMBER FROM TGBBDETL
           MOVE TGBBDETL-DETL-SEQ-NUM  TO EGBB0-MAX-DETL-RETRIEVED

++IF TARGET(POP=Y)
|
|     *--- MAINTAIN THE LINE TYPE DESCRIPTION
|          INITIALIZE CABG
|
|          MOVE 'POPTYPE'              TO CABG-MNEM-GRP
|          MOVE TGBBDETL-ORDR-LINE-TYPE
|                                      TO CABG-MNEM
|
|          EXEC QSP CALL GET_MNEMONIC
|               CABG
|          END-EXEC
|
|          IF CABG-ERR NOT = SPACES
|             MOVE SPACES              TO EGBC0-LINE-TYPE-DESCR
|             MOVE 'N'                 TO EGBC0-LINE-TYPE-DESCR-S
|          ELSE
|             MOVE CABG-DESCR          TO EGBC0-LINE-TYPE-DESCR
|             MOVE 'Y'                 TO EGBC0-LINE-TYPE-DESCR-S
|          END-IF
|
++END-IF

      *--- BUILD THE SPLIT ANALYSIS EWS IF REQUIRED
           IF EGBC0-SA-TYPE NOT = '0'
              PERFORM EGBD0-DEFINE
              MOVE CGBB-CMPY           TO TGBBANAL-CMPY
              MOVE CGBB-BTCH-NUM       TO TGBBANAL-BTCH-NUM
              MOVE TGBBDETL-TRAN-SEQ-NUM
                                       TO TGBBANAL-TRAN-SEQ-NUM
              MOVE TGBBDETL-DETL-SEQ-NUM
                                       TO TGBBANAL-DETL-SEQ-NUM
              PERFORM SQL-CURSOR-TGBBANAL
              PERFORM SQL-FETCH-TGBBANAL

              PERFORM UNTIL SQLCODE = WZAZSQL-NOT-FOUND
                 ADD TGBBANAL-QTY      TO EGBC0-SA-QTY
                 ADD TGBBANAL-VAL      TO EGBC0-SA-VALUE
                 IF TGBBANAL-ERR-STAT = '1'
                    MOVE 'Y'           TO EGBC0-SA-ERROR
                 END-IF
                 MOVE EGBD0R-NENTRIES  TO EGBD0P-LOG-AFTER
                 PERFORM EGBD0-CREATE
                 PERFORM EGBD0-LOAD-ROW
                 MOVE TGBBANAL-ERR-STAT
                                       TO EGBD0-STATUS-FLAG
                 MOVE 'Y'              TO EGBD0-ORIG-FLAG
                                           EGBD0-EDIT-CMD-S
                 MOVE ALL '_'          TO EGBD0-EDIT-CMD
                 PERFORM SQL-FETCH-TGBBANAL
              END-PERFORM

              PERFORM EGBD0-CLOSE
           END-IF

      *--- Build the Line Text EWS
           PERFORM EGC30-DEFINE
           MOVE CGBB-CMPY              TO TGBBTEXT-CMPY
           MOVE CGBB-BTCH-NUM          TO TGBBTEXT-BTCH-NUM
           MOVE TGBBDETL-TRAN-SEQ-NUM  TO TGBBTEXT-TRAN-SEQ-NUM
           MOVE TGBBDETL-DETL-SEQ-NUM  TO TGBBTEXT-DETL-SEQ-NUM
           PERFORM SQL-CURSOR-TGBBTEXT
           PERFORM SQL-FETCH-TGBBTEXT

           PERFORM UNTIL SQLCODE = WZAZSQL-NOT-FOUND
              MOVE EGC30R-NENTRIES     TO EGC30P-LOG-AFTER
              PERFORM EGC30-CREATE
              PERFORM EGC30-LOAD-ROW
              MOVE 'Y'                 TO EGC30-ORIG-FLAG
                                          EGC30-EDIT-CMD-S
              MOVE ALL '_'             TO EGC30-EDIT-CMD
              PERFORM SQL-FETCH-TGBBTEXT
           END-PERFORM

           PERFORM EGC30-CLOSE

++IF TARGET(POP=Y)
|     *--- BUILD THE GRN EWS IF REQUIRED
|          IF ((EGBC0-QTY-REC NOT = ZEROES)
|          OR  (EGBC0-LINE-TYPE-IND = TDOOLINE-LINE-TYPE-VAL
|          AND  EGBC0-GRN-VAL  > ZERO))
|             PERFORM EGRB0-DEFINE
|             MOVE CGBB-CMPY           TO TGBBGRN-CMPY
|             MOVE CGBB-BTCH-NUM       TO TGBBGRN-BTCH-NUM
|             MOVE TGBBDETL-TRAN-SEQ-NUM
|                                      TO TGBBGRN-TRAN-SEQ-NUM
|             MOVE TGBBDETL-DETL-SEQ-NUM
|                                      TO TGBBGRN-DETL-SEQ-NUM
|             PERFORM SQL-CURSOR-TGBBGRN
|             PERFORM SQL-FETCH-TGBBGRN
|
|             PERFORM UNTIL SQLCODE = WZAZSQL-NOT-FOUND
|              IF TPLGRN-GRN-STAT-IND NOT = TPLGRN-GRN-STAT-CMPLT
|                MOVE EGRB0R-NENTRIES  TO EGRB0P-LOG-AFTER
|                PERFORM EGRB0-CREATE
|
|                ADD TGBBGRN-INVCD-QTY TO EGBC0-QTY-REC
|                MOVE 'Y'              TO EGRB0-SEL
|                                         EGRB0-SEL-S
|
|                PERFORM EGRB0-LOAD-ROW
|                MOVE TGBBGRN-CMPY     TO TPLGRN-CMPY
|                MOVE TGBBGRN-GRN      TO TPLGRN-GRN
|                PERFORM SQL-SELECT-TPLGRN
|
|                IF SQLCODE = WZAZSQL-OK
|                   MOVE TPLGRN-DLVRY-CMNT
|                                      TO EGRB0-DLVRY-CMNT
|                   MOVE 'Y'           TO EGRB0-DLVRY-CMNT-S
|                ELSE
|                   MOVE SPACES        TO EGRB0-DLVRY-CMNT
|                   MOVE 'N'           TO EGRB0-DLVRY-CMNT-S
|                END-IF
|
|                MOVE TGBBGRN-ERR-STAT TO EGRB0-STATUS-FLAG
|                MOVE 'Y'              TO EGRB0-ORIG-FLAG
|                                         EGRB0-EDIT-CMD-S
|                MOVE ALL '_'          TO EGRB0-EDIT-CMD
|                ADD +1                TO CF-LUW-COUNT
|              ELSE
|                SUBTRACT TGBBGRN-MTCH-QTY
|                                      FROM EGBC0-QTY-REC
|              END-IF
              PERFORM SQL-FETCH-TGBBGRN
|             END-PERFORM
|
|             PERFORM EGRB0-CLOSE
|          END-IF
++END-IF

      *--- Retrieve Auth Level and Type from TGOAUTHC as EGBB0 values
      *--- for these fields had not been populated yet. No checking on
      *--- SQLCODE at this stage, if the Auth Cntrl is Not Found or
      *--- disabled, we will still built EGPU0/EGPV0 or EGO70, but will
      *--- then be ignored when GGBV is called.
           IF EGBB0-AUTH-CNTRL NOT = TGOAUTHC-AUTH-CNTRL
           OR TGOAUTHC-AUTH-CNTRL  = SPACES OR LOW-VALUES
              MOVE CGBB-CMPY           TO TGOAUTHC-CMPY
              MOVE EGBB0-AUTH-CNTRL    TO TGOAUTHC-AUTH-CNTRL

              PERFORM SQL-SELECT-TGOAUTHC
           END-IF

      *--- Rebuild Header/Detail Line Authorisation EWS
      *--- from Transient Tables
           IF TGOAUTHC-AUTH-LVL = '1'
                             OR = '2'
      *---    When Summarised GL Responsibility - EGPU0 and EGPV0
              IF TGOAUTHC-TYPE = '2'
                              OR '3'
                              OR '4'
                 PERFORM EAA-PROCESS-EGPU0
              ELSE
      *---    When not Summarised GL Responsibility - EGO70
                 PERFORM EAB-PROCESS-EGO70
              END-IF
           END-IF
261788
261788*--- Indictate if any User Data Exists.
261788
261788     MOVE CGBB-CMPY              TO TAUADATA-KEY-CMPY
261788     MOVE EGBB0-SUPP             TO TAUADATA-KEY-12
261788     IF EGBB0-ENTRY-DATE > WZAZLITS-MIN-DATE
261788        MOVE EGBB0-ENTRY-DATE    TO TAUADATA-KEY-DATE
261788     ELSE
261788        MOVE WZAZLITS-MIN-DATE   TO TAUADATA-KEY-DATE
261788     END-IF
261788     MOVE EGBB0-SYSREF           TO TAUADATA-KEY-INT
261788     MOVE TGBBDETL-DETL-SEQ-NUM  TO TAUADATA-KEY-SMALL
261788
261788     MOVE 'N'           TO HV-ROW-EXISTS
261788     PERFORM SQL-SELECT-TAUADATA-L
261788     IF HV-ROW-EXISTS = 'Y'
261788        MOVE 'Y'                 TO EGBC0-XUAD-EXISTS
261788        MOVE 'Y'                 TO EGBC0-XUAD-EXISTS-S
261788     END-IF
261788
           IF CGBB-GB9-FLAG = 'Y'
           OR CGBB-GB9-FLAG = 'N'
              MOVE SPACES              TO EGBC0-WARN-MSG(1)
              MOVE SPACES              TO EGBC0-WARN-MSG(2)
              MOVE SPACES              TO EGBC0-WARN-MSG(3)
              MOVE SPACES              TO EGBC0-WARN-MSG(4)
              MOVE SPACES              TO EGBC0-WARN-MSG(5)
           END-IF


++EXIT EGBC0-INIT-ROW TYPE=POST

           ADD +1                      TO CGBB-NEXT-EGBD0-GRP
           MOVE CGBB-NEXT-EGBD0-GRP    TO EGBC0-SA-GRP

           ADD +1                      TO CGBB-NEXT-EGRB0-GRP
           MOVE CGBB-NEXT-EGRB0-GRP    TO EGBC0-GRN-GRP

           ADD +1                      TO CGBB-NEXT-EGC30-GRP
           MOVE CGBB-NEXT-EGC30-GRP    TO EGBC0-TXT-GRP

++EXIT EGBC0-COPY TYPE=POST

           ADD +1                      TO CGBB-NEXT-EGBD0-GRP
           MOVE CGBB-NEXT-EGBD0-GRP    TO EGBC0-SA-GRP

           ADD +1                      TO CGBB-NEXT-EGRB0-GRP
           MOVE CGBB-NEXT-EGRB0-GRP    TO EGBC0-GRN-GRP

           ADD +1                      TO CGBB-NEXT-EGC30-GRP
           MOVE CGBB-NEXT-EGC30-GRP    TO EGBC0-TXT-GRP

++EXIT EGBC0-LOAD-ROW TYPE=POST

           IF TGBBANAL-GL-ACCT-LEN > ZERO
              MOVE TGBBANAL-GL-ACCT-TEXT (1:TGBBANAL-GL-ACCT-LEN)
                                       TO EGBC0-GL-ACCT
           ELSE
              MOVE SPACES              TO EGBC0-GL-ACCT
           END-IF

           IF EGBC0-GL-ACCT = SPACES
              MOVE 'N'                 TO EGBC0-GL-ACCT-S
           ELSE
              MOVE 'Y'                 TO EGBC0-GL-ACCT-S
           END-IF

           IF TGBBANAL-GL-ANAL-LEN > ZERO
              MOVE TGBBANAL-GL-ANAL-TEXT (1:TGBBANAL-GL-ANAL-LEN)
                                       TO EGBC0-GL-ANAL
           ELSE
              MOVE SPACES              TO EGBC0-GL-ANAL
           END-IF

           IF EGBC0-GL-ANAL = SPACES
              MOVE 'N'                 TO EGBC0-GL-ANAL-S
           ELSE
              MOVE 'Y'                 TO EGBC0-GL-ANAL-S
           END-IF

           IF EGBC0-PROJ = SPACES
              MOVE 'N'                 TO EGBC0-PROJ-S
           ELSE
              MOVE 'Y'                 TO EGBC0-PROJ-S
           END-IF

           IF EGBC0-CRN-INV-LINE = ZEROES
              MOVE 'N'                 TO EGBC0-CRN-INV-LINE-S
           ELSE
              MOVE 'Y'                 TO EGBC0-CRN-INV-LINE-S
           END-IF

           IF EGBC0-LINE-INV-SYSREF = ZEROES
              MOVE 'N'                 TO EGBC0-LINE-INV-SYSREF-S
           ELSE
              MOVE 'Y'                 TO EGBC0-LINE-INV-SYSREF-S
           END-IF

++IF TARGET(POP=Y)
|          IF EGBC0-QTY-REC = ZEROES
|             MOVE 'N'                 TO EGBC0-QTY-REC-S
|          ELSE
|             MOVE 'Y'                 TO EGBC0-QTY-REC-S
|          END-IF
++END-IF

           MOVE EGBC0-TAX-CODE         TO EGBC0-LAST-TAX-CODE
           MOVE EGBC0-TAX-TYPE         TO EGBC0-LAST-TAX-TYPE
           MOVE EGBC0-LOCTN            TO EGBC0-LAST-LOCTN

++EXIT EGBD0-LOAD-ROW TYPE=POST

           IF TGBBANAL-GL-ACCT-LEN > ZERO
              MOVE TGBBANAL-GL-ACCT-TEXT (1:TGBBANAL-GL-ACCT-LEN)
                                       TO EGBD0-GL-ACCT
           ELSE
              MOVE SPACES              TO EGBD0-GL-ACCT
           END-IF

           IF EGBD0-GL-ACCT = SPACES
              MOVE 'N'                 TO EGBD0-GL-ACCT-S
           ELSE
              MOVE 'Y'                 TO EGBD0-GL-ACCT-S
           END-IF

           IF TGBBANAL-GL-ANAL-LEN > ZERO
              MOVE TGBBANAL-GL-ANAL-TEXT (1:TGBBANAL-GL-ANAL-LEN)
                                       TO EGBD0-GL-ANAL
           ELSE
              MOVE SPACES              TO EGBD0-GL-ANAL
           END-IF

           IF EGBD0-GL-ANAL = SPACES
              MOVE 'N'                 TO EGBD0-GL-ANAL-S
           ELSE
              MOVE 'Y'                 TO EGBD0-GL-ANAL-S
           END-IF

           IF EGBD0-LINE-PROJ = SPACES
              MOVE 'N'                 TO EGBD0-LINE-PROJ-S
           ELSE
              MOVE 'Y'                 TO EGBD0-LINE-PROJ-S
           END-IF

++EXIT FAUL-RETURN TYPE=ONLY
           MOVE 'N'                    TO CF-CONTINUE
           MOVE CAUL-ACTION-IND        TO CF-ACTION-IND
           MOVE WZAZLITS-TRF-NORMAL    TO CZAZSESS-TRF-FLAG
           MOVE 'N'                    TO EGBC0-ACTION-S
           MOVE 'Y'                    TO CGBB-C-XUAD-EXISTS
           PERFORM G-FORMAT-ROWS

++EXIT F-FORMAT-FIXED TYPE=POST

      *--- FORMAT GL ACCOUNT AND ACCOUNT HEADING FOR TRANSACTION HEADER
           PERFORM SAZEACSB-ACCT-HDGS
           MOVE MGBC-HDR-GL-ACCT-HEAD-F
                                       TO CZAZSOFT-FIELD
           PERFORM SZAZSOFT-SET-APPL
           MOVE WAZCMPYD-ACCT-HEAD     TO MGBC-HDR-GL-ACCT-HEAD
           MOVE 'Y'                    TO MGBC-HDR-GL-ACCT-HEAD-S

           PERFORM SAZEACSB-ACCT-CODE
           MOVE MGBC-HDR-GL-ACCT-F     TO CZAZSOFT-FIELD
           PERFORM SZAZSOFT-SET-APPL

      *--- FORMAT GL ANALYSIS HEADING
           PERFORM SAZEANSB-ANAL-HDGS
           MOVE MGBC-HDR-GL-ANAL-HEAD-F
                                       TO CZAZSOFT-FIELD
           PERFORM SZAZSOFT-SET-APPL
           MOVE WAZCMPYD-ANAL-HEAD     TO MGBC-HDR-GL-ANAL-HEAD
           MOVE 'Y'                    TO MGBC-HDR-GL-ANAL-HEAD-S

           PERFORM VARYING CF-WSUB
                   FROM 1 BY 1
                   UNTIL CF-WSUB > R-CGBB-C-WARN-MSG
              MOVE EGBB0-WARN-MSG-ACCPT  (CF-WSUB)
                                       TO CGBB-C-WARN-MSG (CF-WSUB)
           END-PERFORM

++EXIT G-FORMAT-ROWS TYPE=ONLY

           PERFORM LOAD-BLOB-KEY

++EXIT GA-FORMAT-ROW TYPE=ONLY

           EVALUATE EGBC0-LINE-AMND-IND
              WHEN '1'
      *--- PROTECT ALL FIELDS THAT CAME FROM KIT
                 MOVE 'Y'          TO CZAZSOFT-PROTECT-IND
                 MOVE MGBC-ITEM-F
                                   TO CZAZSOFT-FIELD
                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
                 PERFORM SZAZSOFT-SET-APPL
                 MOVE 'Y'          TO CZAZSOFT-PROTECT-IND
                 MOVE MGBC-DESCR-F
                                   TO CZAZSOFT-FIELD
                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
                 PERFORM SZAZSOFT-SET-APPL
                 MOVE 'Y'          TO CZAZSOFT-PROTECT-IND
                 MOVE MGBC-QTY-INVCD-F
                                   TO CZAZSOFT-FIELD
                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
                 PERFORM SZAZSOFT-SET-APPL
                 MOVE 'Y'          TO CZAZSOFT-PROTECT-IND
                 MOVE MGBC-QUOM-F
                                   TO CZAZSOFT-FIELD
                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
                 PERFORM SZAZSOFT-SET-APPL
                 MOVE 'Y'          TO CZAZSOFT-PROTECT-IND
                 MOVE MGBC-ITEM-PRC-F
                                   TO CZAZSOFT-FIELD
                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
                 PERFORM SZAZSOFT-SET-APPL
                 MOVE 'Y'          TO CZAZSOFT-PROTECT-IND
                 MOVE MGBC-PUOM-F
                                   TO CZAZSOFT-FIELD
                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
                 PERFORM SZAZSOFT-SET-APPL
                 MOVE 'Y'          TO CZAZSOFT-PROTECT-IND
                 MOVE MGBC-GL-ACCT-F
                                   TO CZAZSOFT-FIELD
                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
                 PERFORM SZAZSOFT-SET-APPL
                 MOVE 'Y'          TO CZAZSOFT-PROTECT-IND
                 MOVE MGBC-GL-ANAL-F
                                   TO CZAZSOFT-FIELD
                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
                 PERFORM SZAZSOFT-SET-APPL
                 MOVE 'Y'          TO CZAZSOFT-PROTECT-IND
                 MOVE MGBC-PROJ-F
                                   TO CZAZSOFT-FIELD
                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
                 PERFORM SZAZSOFT-SET-APPL
                 MOVE 'Y'          TO CZAZSOFT-PROTECT-IND
                 MOVE MGBC-RECON-F
                                   TO CZAZSOFT-FIELD
                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
                 PERFORM SZAZSOFT-SET-APPL
              WHEN '2'
      *--- PROTECT VALUE RELATED FIELDS THAT CAME FROM KIT
                 MOVE 'Y'          TO CZAZSOFT-PROTECT-IND
                 MOVE MGBC-QTY-INVCD-F
                                   TO CZAZSOFT-FIELD
                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
                 PERFORM SZAZSOFT-SET-APPL
                 MOVE 'Y'          TO CZAZSOFT-PROTECT-IND
                 MOVE MGBC-QUOM-F
                                   TO CZAZSOFT-FIELD
                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
                 PERFORM SZAZSOFT-SET-APPL
                 MOVE 'Y'          TO CZAZSOFT-PROTECT-IND
                 MOVE MGBC-ITEM-PRC-F
                                   TO CZAZSOFT-FIELD
                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
                 PERFORM SZAZSOFT-SET-APPL
                 MOVE 'Y'          TO CZAZSOFT-PROTECT-IND
                 MOVE MGBC-PUOM-F
                                   TO CZAZSOFT-FIELD
                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
                 PERFORM SZAZSOFT-SET-APPL
              WHEN '3'
      *--- PROTECT GL RELATED FIELDS THAT CAME FROM THE KIT
                 MOVE 'Y'          TO CZAZSOFT-PROTECT-IND
                 MOVE MGBC-GL-ACCT-F
                                   TO CZAZSOFT-FIELD
                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
                 PERFORM SZAZSOFT-SET-APPL
                 MOVE 'Y'          TO CZAZSOFT-PROTECT-IND
                 MOVE MGBC-GL-ANAL-F
                                   TO CZAZSOFT-FIELD
                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
                 PERFORM SZAZSOFT-SET-APPL
                 MOVE 'Y'          TO CZAZSOFT-PROTECT-IND
                 MOVE MGBC-PROJ-F
                                   TO CZAZSOFT-FIELD
                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
                 PERFORM SZAZSOFT-SET-APPL
                 MOVE 'Y'          TO CZAZSOFT-PROTECT-IND
                 MOVE MGBC-RECON-F
                                   TO CZAZSOFT-FIELD
                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
                 PERFORM SZAZSOFT-SET-APPL
              WHEN OTHER
      *--- NO PROTECTION NEEDED
                CONTINUE
           END-EVALUATE

++EXIT GC-FORMAT-ALL-ROWS TYPE=ONLY

           IF CGBB-INTENT    = WZAZLITS-EDIT-DISABLE
           OR CGBB-BTCH-STAT = '6'
      *--- Get Recoverable and Non Recoverable tax values.
              IF MGBC-SYSREF NOT = ZERO
                 MOVE CGBB-CMPY        TO TGBDETL-CMPY
                 MOVE MGBC-SUPP        TO TGBDETL-SUPP
                 MOVE MGBC-ENTRY-DATE  TO TGBDETL-ENTRY-DATE
                 MOVE MGBC-SYSREF      TO TGBDETL-SYSREF
                 MOVE EGBC0-DETL-SEQ-NUM
                                       TO TGBDETL-LINE-NUM
                 PERFORM SQL-SELECT-TGBDETL-1
                 IF SQLCODE = WZAZSQL-NOT-FOUND
                    CONTINUE
                 ELSE
                    IF MGBC-CURR = WAZCMPYD-BASE-CURR
                       MOVE TGBDETL-VAT-NON-REC-VALUE
                                       TO MGBC-VAT-NON-REC-VALUE
                       MOVE 'Y'        TO MGBC-VAT-NON-REC-VALUE-S
                       MOVE TGBDETL-VAT-REC-VALUE
                                       TO MGBC-VAT-REC-VALUE
                       MOVE 'Y'        TO MGBC-VAT-REC-VALUE-S
                    ELSE
                       MOVE TGBDETL-NBASE-NREC-VALUE
                                       TO MGBC-VAT-NON-REC-VALUE
                       MOVE 'Y'        TO MGBC-VAT-NON-REC-VALUE-S
                       MOVE TGBDETL-NBASE-REC-VALUE
                                       TO MGBC-VAT-REC-VALUE
                       MOVE 'Y'        TO MGBC-VAT-REC-VALUE-S
                    END-IF
                 END-IF
              END-IF
           END-IF

      *--- FORMAT GL ACCOUNT AND ACCOUNT HEADING
           PERFORM SAZEACSB-ACCT-CODE
           MOVE MGBC-GL-ACCT-F         TO CZAZSOFT-FIELD
           MOVE CGBB-C-MAP-LINE        TO CZAZSOFT-ROW
           PERFORM SZAZSOFT-SET-APPL

           PERFORM SAZEACSB-ACCT-HDGS
           MOVE MGBC-GL-ACCT-HEAD-F    TO CZAZSOFT-FIELD
           MOVE CGBB-C-MAP-LINE        TO CZAZSOFT-ROW
           PERFORM SZAZSOFT-SET-APPL
           MOVE WAZCMPYD-ACCT-HEAD     TO MGBC-GL-ACCT-HEAD
           MOVE 'Y'                    TO MGBC-GL-ACCT-HEAD-S

      *--- FORMAT GL ANALYSIS AND ANALYSIS HEADING
           PERFORM SAZEANSB-ANAL-CODE
           MOVE MGBC-GL-ANAL-F         TO CZAZSOFT-FIELD
           MOVE CGBB-C-MAP-LINE        TO CZAZSOFT-ROW
           PERFORM SZAZSOFT-SET-APPL

           PERFORM SAZEANSB-ANAL-HDGS
           MOVE MGBC-GL-ANAL-HEAD-F    TO CZAZSOFT-FIELD
           MOVE CGBB-C-MAP-LINE        TO CZAZSOFT-ROW
           PERFORM SZAZSOFT-SET-APPL
           MOVE WAZCMPYD-ANAL-HEAD     TO MGBC-GL-ANAL-HEAD
           MOVE 'Y'                    TO MGBC-GL-ANAL-HEAD-S


++IF TARGET(PT=Y)
           IF WKZCMPYD-PROJ-CODE-SIZE(1) = ZEROES
           OR WKZCMPYD-PT-ON-FLAG        = SPACES
               INITIALIZE CABG
               MOVE 'PTMISC'           TO CABG-MNEM-GRP
               MOVE SPACES             TO CABG-DFLT-OVRD
                                          CABG-LANG
               MOVE 'PROJHEAD'         TO CABG-MNEM
               EXEC QSP CALL GET_MNEMONIC
                    CABG
               END-EXEC
               IF CABG-ERR = CABG-OK
                   MOVE CABG-DESCR     TO WKZCMPYD-PROJ-HEAD
               ELSE
                   MOVE SPACES         TO WKZCMPYD-PROJ-HEAD
               END-IF
           END-IF
           MOVE WKZCMPYD-PROJ-HEAD     TO MGBC-PROJ-HEAD
                                          MGBC-PROJ-HEAD-HDG
           MOVE 'Y'                    TO MGBC-PROJ-HEAD-S
                                          MGBC-PROJ-HEAD-HDG-S
           PERFORM SKZPTSUB-PROJ-HDGS
           MOVE MGBC-PROJ-HEAD-F       TO CZAZSOFT-FIELD
           MOVE CGBB-C-MAP-LINE        TO CZAZSOFT-ROW
           PERFORM SZAZSOFT-SET-APPL
++END-IF
++IF TARGET(PT=Y)
           MOVE WKZCMPYD-PROJ-HEAD TO MGBC-PROJ-HEAD-HDG
           MOVE 'Y' TO MGBC-PROJ-HEAD-HDG-S

           PERFORM SKZPTSUB-PROJ-HDGS
           MOVE MGBC-PROJ-HEAD-HDG-F TO CZAZSOFT-FIELD
           PERFORM SZAZSOFT-SET-APPL

           PERFORM SKZPTSUB-PROJ-CODE
           MOVE MGBC-PROJ-F            TO CZAZSOFT-FIELD
           MOVE CGBB-C-MAP-LINE        TO CZAZSOFT-ROW
           PERFORM SZAZSOFT-SET-APPL
++END-IF

++EXIT H-VALIDATE-FIXED TYPE=ONLY

      *--- SAVE THE WARNING MESSAGES AND SKIP THE
      *--- PERFORM OF XB-CHECK-WARNINGS AS THIS IS DONE
      *--- IN THE I-VALIDATE-ROWS EXIT

           MOVE CF-WARN-MSGS           TO WS-SAVE-WARN-MSGS
           GO TO +++-EXIT

++EXIT I-VALIDATE-ROWS TYPE=PRIOR


           MOVE ZERO                   TO WS-SA-ROWS

      *--- ASSUME WARNING MESSAGE ONLY

++IF TARGET(POP=Y)
|     *--- Check to see if order details have already been built
|          IF EGBC0R-NENTRIES > 0
|          AND CZAZSTCK-DATA-VALID
|          AND CGBB-C-ORDRS-FLAG = SPACE
|          AND CGBB-C-DETL-DISP-FLAG = SPACE
|             PERFORM VARYING EGBC0P-LOG-ENTRY
|                          FROM 1 BY 1
|                          UNTIL EGBC0P-LOG-ENTRY > EGBC0R-NENTRIES
|                PERFORM EGBC0-GET
|                IF EGBC0-ORDR-REF NOT = SPACES
|                   MOVE 'Y'           TO CGBB-C-ORDRS-FLAG
|                END-IF
|             END-PERFORM
|          END-IF
|
|     *--- BUILD LINES FROM THE ORDR IF ENTERED ON THE HEADER
|          IF CZAZSTCK-DATA-INVALID
|          OR CGBB-C-ORDRS-FLAG     = 'Y'
|          OR CGBB-C-DETL-DISP-FLAG = 'Y'
|          OR (CZAZSTCK-ACTION   NOT = 52
|          AND CZAZSTCK-ACTION   NOT = 64)
|          OR (MGBC-ORDR-REF         = SPACES
|          AND MGBC-ADVC-NOTE        = SPACES)
|     *--- Put a foreground lock on the order when go details
|             IF  MGBC-ORDR-REF NOT = SPACES
|             AND CZAZSTCK-ACTION   = 52
|             AND CZAZSTCK-DATA-VALID
|     *---       remove background lock from order
|                MOVE MGBC-ORDR-REF    TO CDOZ-ORDR-REF
|                MOVE CDOZ-BGRND-UNLOCK
|                                      TO CDOZ-FUNC
|                MOVE CGBB-CMPY        TO CDOZ-CMPY
|                MOVE TDOORDER-DOC-ORDR
|                                      TO CDOZ-DOC-IND
|
|                EXEC QSP CALL ORDR_LOCK_UNLOCK
|                     CDOZ
|                END-EXEC
|
|     *---       then lock in foreground
|                MOVE MGBC-ORDR-REF    TO CDOZ-ORDR-REF
|                MOVE CDOZ-FGRND-LOCK  TO CDOZ-FUNC
|                MOVE CGBB-CMPY        TO CDOZ-CMPY
|                MOVE TDOORDER-DOC-ORDR
|                                      TO CDOZ-DOC-IND
|                MOVE CZAZPUBL-USR     TO CDOZ-LOCK-USR
|                MOVE CZAZSTCK-CURR-SESS
|                                      TO CDOZ-LOCK-SESS
|
|                EXEC QSP CALL ORDR_LOCK_UNLOCK
|                     CDOZ
|                END-EXEC
|     *---       need to display proper error from GDOZ for situation
|     *---       where same user has created a new session and is amending the s
|                IF CDOZ-ERR = 'E'
|                   MOVE 'Y'           TO WS-INVALID-HEADER-FLAG
|                   MOVE 'E'           TO CZAZSOFT-MSG-TYPE
|                   MOVE CDOZ-MSG      TO CZAZSOFT-MSG
|                   MOVE CDOZ-SUBTEXT1 TO CZAZSOFT-SUBTEXT (1:8)
|                   MOVE CDOZ-SUBTEXT2 TO CZAZSOFT-SUBTEXT (9:4)
|                   MOVE CDOZ-MSG      TO CZAZSOFT-MSG
|                   MOVE MGBC-ORDR-REF-F
|                                      TO CZAZSOFT-FIELD
|                   PERFORM SZAZSOFT-SET-APPL
|                   GO TO +++-EXIT
|                END-IF
|             END-IF
|          ELSE
|             PERFORM UE-ORDR-BUILD-LINES
|             PERFORM EGBC0-DEFINE
|             IF EGBC0R-NENTRIES > 0
|                MOVE ZERO             TO EGBB0-ORDR-VAL
|                PERFORM UI-BUILD-MAP-DETAIL
|                       VARYING EGBC0P-LOG-ENTRY
|                          FROM 1 BY 1
|                          UNTIL EGBC0P-LOG-ENTRY > EGBC0R-NENTRIES
|                MOVE 'Y'              TO CGBB-C-ORDRS-FLAG
|             END-IF
|             PERFORM EGBC0-CLOSE
|          END-IF
|
|     *--- BUILD THE DETAIL LINES FROM ORDR-REFS/ADVICE-NOTES FROM
|     *--- EGRA0
|          PERFORM EGRA0-DEFINE
|          IF CZAZSTCK-DATA-INVALID
|          OR CGBB-C-ORDRS-FLAG     = 'Y'
|          OR CGBB-C-DETL-DISP-FLAG = 'Y'
|          OR (CZAZSTCK-ACTION   NOT = 52
|          AND CZAZSTCK-ACTION   NOT = 64)
|          OR MGBC-ORDR-REF     NOT  = SPACES
|          OR MGBC-ADVC-NOTE    NOT  = SPACES
|          OR EGRA0R-NENTRIES        = ZERO
|             PERFORM EGRA0-CLOSE
|          ELSE
|             IF EGBC0R-NENTRIES NOT > ZERO
|                PERFORM EGBB0-CLOSE
|                PERFORM NAA-PROC-ORDR-EWS
|                        VARYING EGRA0P-LOG-ENTRY
|                        FROM    1 BY 1
|                        UNTIL   EGRA0P-LOG-ENTRY > EGRA0R-NENTRIES
|                PERFORM EGRA0-CLOSE
|                PERFORM EGBC0-DEFINE
|                IF EGBC0R-NENTRIES > 0
|                   PERFORM EGBB0-DEFINE
|                   MOVE CGBB-C-LOG-ENTRY  TO EGBB0P-LOG-ENTRY
|                   PERFORM EGBB0-GET
|                   MOVE ZERO          TO EGBB0-ORDR-VAL
|                   PERFORM UI-BUILD-MAP-DETAIL
|                           VARYING EGBC0P-LOG-ENTRY
|                           FROM    1 BY 1
|                           UNTIL   EGBC0P-LOG-ENTRY > EGBC0R-NENTRIES
|                   MOVE 'Y'           TO CGBB-C-ORDRS-FLAG
|                   PERFORM EGBB0-CLOSE
|                END-IF
|                PERFORM EGBC0-CLOSE
|             END-IF
|          END-IF
|
++END-IF
      *--- READ IN DEFAULTS, IF APPROPRIATE
           IF NOT CZAZSTCK-DATA-VALID
           OR EGBC0R-NENTRIES        > ZERO
           OR EGBB0-C-DETL-DISP-FLAG = 'Y'
           OR CGBB-C-DETL-DISP-FLAG = 'Y'
           OR (CZAZSTCK-ACTION   NOT = 52
           AND CZAZSTCK-ACTION   NOT = 64)
           OR MGBC-SKEL-CODE        = SPACES
              CONTINUE
           ELSE
              MOVE CGBB-CMPY           TO TGBSKDTL-CMPY
              MOVE MGBC-SKEL-CODE      TO TGBSKDTL-SKEL-CODE
              MOVE '1'                 TO TGBSKDTL-SKEL-TYPE
              PERFORM SQL-CURSOR-TGBSKDTL
              PERFORM SQL-FETCH-TGBSKDTL

              PERFORM UC-BUILD-LINES   UNTIL SQLCODE = WZAZSQL-NOT-FOUND
              MOVE 'Y'                 TO CGBB-C-SKEL-FLAG
           END-IF
           IF WS-TRLR-ERR-FLAG = 'Y'
              SET CZAZSTCK-DATA-INVALID  TO TRUE
           END-IF


           COMPUTE WS-ENTRIES = EGBC0R-NENTRIES + 1

           IF CGBB-C-PRIM-ITEM = 0
              IF CF-LAST-MAP-ROW  >    EGBC0R-NENTRIES
                  PERFORM VARYING WS-SUB-A
                  FROM WS-ENTRIES BY 1
                  UNTIL WS-SUB-A > CF-LAST-MAP-ROW
                      MOVE EGBC0R-NENTRIES TO EGBC0P-LOG-AFTER
                      PERFORM EGBC0-CREATE
                   END-PERFORM
               END-IF
           ELSE
               IF (CGBB-C-PRIM-ITEM + CF-LAST-MAP-ROW - 1) >
                   EGBC0R-NENTRIES
                   PERFORM VARYING WS-SUB-A
                   FROM WS-ENTRIES BY 1
                   UNTIL WS-SUB-A >
                       (CF-LAST-MAP-ROW + CGBB-C-PRIM-ITEM - 1)
                       MOVE EGBC0R-NENTRIES TO EGBC0P-LOG-AFTER
                       PERFORM EGBC0-CREATE
                   END-PERFORM
               END-IF
           END-IF

++EXIT I-VALIDATE-ROWS TYPE=POST

           MOVE ZERO                   TO CGBB-C-MAP-LINE
           MOVE WS-SAVE-WARN-MSGS      TO CF-WARN-MSGS

      *--- VALIDATE THE PRO-RATA SETTINGS
           IF  EGBB0-PR-LINES      > 0
           AND EGBB0-PR-RCVD-LINES = 0
              MOVE 'GBC23'             TO CZAZSOFT-MSG
              MOVE 'E'                 TO CZAZSOFT-MSG-TYPE
              PERFORM SZAZSOFT-SCREEN-LEVEL-MESS
           END-IF

      *--- ENSURE THAT SOME DETAIL LINES HAVE BEEN ENTERED
           IF (CZAZSTCK-ACTION  = WZAZLITS-UPDATE
                               OR WZAZLITS-ACCEPT-WARNINGS
                               OR WZAZLITS-CANCEL
                               OR WZAZLITS-INTERRUPT
                               OR 55
                               OR 60
                               OR 61
                               OR 62
                               OR 70)
           AND CGBB-INTENT NOT  = WZAZLITS-EDIT-DISABLE
           AND CGBB-BTCH-STAT NOT = '6'
           AND NOT CZAZSTCK-DATA-INVALID
              MOVE ZERO                TO WS-SEL-COUNT
              PERFORM VARYING EGBC0P-LOG-ENTRY
                      FROM    1 BY 1
                      UNTIL   EGBC0P-LOG-ENTRY > EGBC0R-NENTRIES
                 PERFORM EGBC0-GET
                 IF EGBC0-SEL = 'Y'
                    COMPUTE WS-SEL-COUNT = WS-SEL-COUNT + 1
                 END-IF
              END-PERFORM
              IF EGBC0R-NENTRIES  = ZERO
              OR WS-SEL-COUNT     = ZERO
                 MOVE 'E'              TO CZAZSOFT-MSG-TYPE
                 MOVE 'GBC26'          TO CZAZSOFT-MSG
                 PERFORM SZAZSOFT-SCREEN-LEVEL-MESS
                 MOVE 'Y'              TO WS-TRLR-ERR-FLAG
              ELSE
                 IF EGBB0-DETL-GROSS-AMT = ZERO
      *---          If Zero AP Invoice Allowed then no error
E52017              IF  TGACNTRL-FOC-IND NOT = '0'
E52017              AND CGBB-TRAN-TYPE       = WGZZCNTL-TYPE-INVCE
E52017              AND MGBC-INV-GROSS-AMT   = ZERO
E52017              AND MGBC-INV-TAX-AMT     = ZERO
E52017                 CONTINUE
E52017              ELSE
                       MOVE 'E'        TO CZAZSOFT-MSG-TYPE
                       MOVE 'GBC27'    TO CZAZSOFT-MSG
                       PERFORM SZAZSOFT-SCREEN-LEVEL-MESS
                       MOVE 'Y'        TO WS-TRLR-ERR-FLAG
E52017              END-IF
                 END-IF
              END-IF
           END-IF

      *--- VALIDATE THE INVOICE TRAILER WHEN UPDATE IS REQUESTED
           IF ((CZAZSTCK-ACTION  = WZAZLITS-UPDATE
                                OR WZAZLITS-ACCEPT-WARNINGS
                                OR WZAZLITS-CANCEL
                                OR WZAZLITS-INTERRUPT
                                OR 55
                                OR 60
                                OR 61
                                OR 62
                                OR 70)
           OR  CGBB-C-TRLR-WARN-FLAG = 'Y')
           AND CGBB-INTENT NOT  = WZAZLITS-EDIT-DISABLE
           AND CGBB-BTCH-STAT NOT = '6'
           AND NOT CZAZSTCK-DATA-INVALID
              INITIALIZE CGBWIN

              ++POUR MDEF MGBC CDEF CGBWIN

              MOVE CGBWIN-VLDTE-TRAILER
                                       TO CGBWIN-FUNC
              MOVE CGBB-CMPY           TO CGBWIN-CMPY
              MOVE MGBC-INV-GROSS-AMT  TO CGBWIN-GROSS-AMT
              MOVE MGBC-INV-GROSS-AMT-S
                                       TO CGBWIN-GROSS-AMT-S
              MOVE MGBC-INV-GROSS-AMT-F
                                       TO CGBWIN-GROSS-AMT-F
              MOVE MGBC-INV-TAX-AMT    TO CGBWIN-TAX-AMT
              MOVE MGBC-INV-TAX-AMT-S  TO CGBWIN-TAX-AMT-S
              MOVE MGBC-INV-TAX-AMT-F  TO CGBWIN-TAX-AMT-F
              MOVE EGBB0-DETL-GROSS-AMT
                                       TO CGBWIN-DETL-GROSS-AMT
              MOVE MGBC-DETL-GROSS-AMT-TOT-S
                                       TO CGBWIN-DETL-GROSS-AMT-S
              MOVE MGBC-DETL-GROSS-AMT-TOT-F
                                       TO CGBWIN-DETL-GROSS-AMT-F
              MOVE EGBB0-DETL-TAX-AMT  TO CGBWIN-DETL-TAX-AMT
              MOVE MGBC-DETL-TAX-AMT-TOT-S
                                       TO CGBWIN-DETL-TAX-AMT-S
              MOVE MGBC-DETL-TAX-AMT-TOT-F
                                       TO CGBWIN-DETL-TAX-AMT-F
              MOVE EGBB0-CIT-GROSS-AMT TO CGBWIN-CIT-GROSS-AMT
              MOVE EGBB0-TAX-INCL-GROSS-AMT
                                       TO CGBWIN-TAX-INCL-GROSS-AMT
              MOVE EGBB0-AUTO-TAX-FLAG TO CGBWIN-AUTO-TAX-FLAG

              IF MGBC-ORDR-REF-S = 'Y'
                 MOVE 'Y'              TO CGBWIN-ORDR-RLTD-FLAG
              ELSE
                 MOVE SPACE            TO CGBWIN-ORDR-RLTD-FLAG
              END-IF

              IF EGBC0-SRVC-CODE-S = 'Y'
                 MOVE 'Y'              TO CGBWIN-SRVC-RLTD-FLAG
              ELSE
                 MOVE SPACE            TO CGBWIN-SRVC-RLTD-FLAG
              END-IF

              EXEC QSP CALL VLDTE_PL_TRAN_TRLR
                   CGBWIN
                   CGBWOUT
                   TGACNTRL
                   TPBSUPP
                   TPBSCHD
              END-EXEC

              MOVE SPACES              TO WS-TRLR-ERR-FLAG
                                          CGBB-C-TRLR-WARN-FLAG
              PERFORM VARYING CF-SUB
                      FROM    1 BY 1
                      UNTIL   CF-SUB > CGBWOUT-COUNT
                IF CGBWOUT-FLD-NO (CF-SUB) NOT = ZERO
                   IF  CZAZSTCK-ACTION = 55
                   AND CGBWOUT-ERR (CF-SUB) = CGBWOUT-ERROR
                      MOVE 'E'         TO CZAZSOFT-MSG-TYPE
                      MOVE CGBWOUT-MSG (CF-SUB)
                                       TO CZAZSOFT-MSG
                      PERFORM SZAZSOFT-SCREEN-LEVEL-MESS
                      MOVE CGBWOUT-COUNT
                                       TO CF-SUB
                   ELSE
                      MOVE 'Y'         TO WS-TRLR-ERR-FLAG
                      IF CGBWOUT-ERR (CF-SUB) = CGBWOUT-WARN
                         MOVE 'Y'      TO CGBB-C-TRLR-WARN-FLAG
                      END-IF
                      MOVE CGBWOUT-ERR  (CF-SUB)
                                       TO CZAZSOFT-MSG-TYPE
                      MOVE CGBWOUT-MSG  (CF-SUB)
                                       TO CZAZSOFT-MSG
                      IF CGBWOUT-FLD-NO (CF-SUB) > ZERO
                         MOVE CGBWOUT-FLD-NO  (CF-SUB)
                                       TO CZAZSOFT-FIELD
                         MOVE CGBWOUT-SUBTXT  (CF-SUB)
                                       TO CZAZSOFT-SUBTEXT
                      END-IF
                      PERFORM XA-SET-WARNING
                   END-IF
                END-IF
              END-PERFORM

              IF CZAZSTCK-DATA-INVALID
                 MOVE 'Y'              TO CF-REFORMAT
              END-IF
           END-IF

      *--- CHECK TO SEE WHETHER AUTHORISATIONS ARE REQUIRED AT HEADER
      *--- LEVEL
           IF (CZAZSTCK-ACTION = WZAZLITS-UPDATE
                              OR WZAZLITS-ACCEPT-WARNINGS
                              OR WZAZLITS-CANCEL
                              OR WZAZLITS-INTERRUPT)
           OR  CZAZSTCK-ACTION = 60
           OR  CZAZSTCK-ACTION = 61
           OR  CZAZSTCK-ACTION = 62
           OR  CZAZSTCK-ACTION = 70
           OR  MGBC-CURNT-PAGE NOT = CGBB-C-LOG-ENTRY
           AND CGBB-INTENT NOT = WZAZLITS-EDIT-DISABLE
           AND CGBB-BTCH-STAT NOT = '6'
              IF  EGBB0-AUTH-MTHD = '4'
              AND EGBB0-AUTH-LVL  = '1'
                MOVE CGBB-O-NEXT-GO7-GRP TO CGBB-O-GO7-GRP
                PERFORM EGPU0-DEFINE
                MOVE CGBB-O-NEXT-GO7-GRP TO EGBC0-GO7-GRP
                PERFORM EGO70-DEFINE
                IF (EGBB0-GO7-GRP = ZERO OR
                 EGPU0R-NENTRIES + EGO70R-NENTRIES = ZERO)
                 IF MGBC-CURR = WAZCMPYD-BASE-CURR
                    MOVE EGBB0-AMT-TO-AUTH
                                       TO WS-BASE-AMT
                 ELSE
                    INITIALIZE CAGP
                    MOVE CAGP-CALC-VAL TO CAGP-FUNC
                    MOVE WAZCMPYD-BASE-CURR
                                       TO CAGP-BASE-CURR
                    MOVE MGBC-CURR     TO CAGP-NON-BASE-CURR
                    MOVE EGBB0-CONV-UNITS
                                       TO CAGP-CONV-UNITS-I
                    MOVE EGBB0-CONV-DRCTN
                                       TO CAGP-CONV-DRCTN-I
                    MOVE EGBB0-AMT-TO-AUTH
                                       TO CAGP-NON-BASE-VAL-I
                    MOVE MGBC-EXCH-RATE
                                       TO CAGP-EXCH-RATE-I
                    MOVE '0'           TO CAGP-NBASE-TOLRN-IND
                    EXEC QSP CALL VLDTE_CURR
                         CAGP
                    END-EXEC
                    MOVE CAGP-BASE-VAL-O
                                       TO WS-BASE-AMT
                 END-IF
                 IF WS-BASE-AMT > 0
                 OR TPBSUPP-AUTH-NEG-FLAG NOT = 'Y'
                    MOVE WS-BASE-AMT   TO WS-POS-BASE-AMT
                 ELSE
                    COMPUTE WS-POS-BASE-AMT = WS-BASE-AMT * -1
                 END-IF
++IF TARGET(POP=Y)
|                 IF WS-POS-BASE-AMT >= EGBB0-AUTH-MIN-VAL
|                   IF CGBVOUT-AUTH-ORDR-RLTD  = SPACE
|                      IF EGBB0-ORDR-VAL NOT   = ZERO
|                         IF WS-AUTH-CHRG-FLAG = SPACE
|                            CONTINUE
|                         ELSE
|                           IF EGBB0-ORDR-VAL = (EGBB0-INV-GROSS-AMT
|                                                - EGBB0-INV-TAX-AMT)
|                             CONTINUE
|                           ELSE
|                             MOVE 'E'        TO CZAZSOFT-MSG-TYPE
|                             MOVE 'GBC11'    TO CZAZSOFT-MSG
                              MOVE 'Y'        TO WS-INVALID-HEADER-FLAG
|                             MOVE MGBC-INV-GROSS-AMT-F
|                                             TO CZAZSOFT-FIELD
|                             PERFORM SZAZSOFT-SET-APPL
|                           END-IF
|                         END-IF
|                      ELSE
|                          MOVE 'E'        TO CZAZSOFT-MSG-TYPE
|                          MOVE 'GBC11'    TO CZAZSOFT-MSG
                           MOVE 'Y'        TO WS-INVALID-HEADER-FLAG
|                          MOVE MGBC-INV-GROSS-AMT-F
|                                          TO CZAZSOFT-FIELD
|                          PERFORM SZAZSOFT-SET-APPL
|                      END-IF
|                   ELSE
|                      MOVE 'E'        TO CZAZSOFT-MSG-TYPE
|                      MOVE 'GBC11'    TO CZAZSOFT-MSG
                       MOVE 'Y'        TO WS-INVALID-HEADER-FLAG
|                      MOVE MGBC-INV-GROSS-AMT-F
|                                      TO CZAZSOFT-FIELD
|                      PERFORM SZAZSOFT-SET-APPL
|                   END-IF
|                END-IF
++ELSE
|                IF WS-POS-BASE-AMT >= EGBB0-AUTH-MIN-VAL
|                   MOVE 'E'           TO CZAZSOFT-MSG-TYPE
|                   MOVE 'GBC11'       TO CZAZSOFT-MSG
|                   MOVE MGBC-INV-GROSS-AMT-F
                    MOVE 'Y'        TO WS-INVALID-HEADER-FLAG
|                                      TO CZAZSOFT-FIELD
|                   PERFORM SZAZSOFT-SET-APPL
|                   END-IF
|                END-IF
++END-IF
               END-IF
              END-IF
           END-IF

      *--- CHECK TO SEE WHETHER AUTHORISATIONS ARE REQUIRED AT LINE
      *--- LEVEL
           IF (CZAZSTCK-ACTION = WZAZLITS-UPDATE
                              OR WZAZLITS-ACCEPT-WARNINGS
                              OR WZAZLITS-CANCEL
                              OR WZAZLITS-INTERRUPT)
                              OR CZAZSTCK-ACTION = 60
                              OR CZAZSTCK-ACTION = 61
                              OR CZAZSTCK-ACTION = 62
           AND CGBB-INTENT NOT = WZAZLITS-EDIT-DISABLE
           AND CGBB-BTCH-STAT NOT = '6'
              IF  EGBB0-AUTH-MTHD = '4'
              AND EGBB0-AUTH-LVL  = '2'
                 MOVE SPACES           TO WS-AUTH-ERR-FLAG
                 MOVE ZERO             TO WS-AUTH-LINE
                                          WS-AUTH-CNT
                 PERFORM VARYING EGBC0P-LOG-ENTRY
                         FROM    1 BY 1
                         UNTIL   EGBC0P-LOG-ENTRY > EGBC0R-NENTRIES
                    PERFORM EGBC0-GET
                    IF EGBC0-GO7-GRP = ZERO
                       IF MGBC-CURR = WAZCMPYD-BASE-CURR
                          IF EGBC0-TAX-RCVBLE-FLAG = 'Y'
                             MOVE EGBC0-LINE-TOT-AMT
                                       TO WS-BASE-AMT
                          ELSE
                             COMPUTE WS-BASE-AMT =
                                        EGBC0-LINE-TOT-AMT +
                                        EGBC0-LINE-SLFASSD-AMT +
                                        EGBC0-LINE-TAX-AMT
                          END-IF
                       ELSE
                          INITIALIZE CAGP
                          MOVE CAGP-CALC-VAL
                                       TO CAGP-FUNC
                          MOVE WAZCMPYD-BASE-CURR
                                       TO CAGP-BASE-CURR
                          MOVE MGBC-CURR
                                       TO CAGP-NON-BASE-CURR
                          MOVE EGBB0-CONV-UNITS
                                       TO CAGP-CONV-UNITS-I
                          MOVE EGBB0-CONV-DRCTN
                                       TO CAGP-CONV-DRCTN-I
                          IF EGBC0-TAX-RCVBLE-FLAG = 'Y'
                             MOVE EGBC0-LINE-TOT-AMT
                                       TO CAGP-NON-BASE-VAL-I
                          ELSE
                             COMPUTE CAGP-NON-BASE-VAL-I  =
                                     EGBC0-LINE-TOT-AMT +
                                     EGBC0-LINE-SLFASSD-AMT +
                                     EGBC0-LINE-TAX-AMT
                          END-IF
                          MOVE MGBC-EXCH-RATE
                                       TO CAGP-EXCH-RATE-I
                          MOVE '0'     TO CAGP-NBASE-TOLRN-IND
                          EXEC QSP CALL VLDTE_CURR
                               CAGP
                          END-EXEC
                          MOVE CAGP-BASE-VAL-O
                                       TO WS-BASE-AMT
                       END-IF
                       IF WS-BASE-AMT > 0
                       OR TPBSUPP-AUTH-NEG-FLAG NOT = 'Y'
                         MOVE WS-BASE-AMT
                                       TO WS-POS-BASE-AMT
                       ELSE
                         COMPUTE WS-POS-BASE-AMT = WS-BASE-AMT * -1
                       END-IF
                       IF   WS-POS-BASE-AMT >= EGBB0-AUTH-MIN-VAL
++IF TARGET(POP=Y)
|                         IF  EGBB0-ORDR-VAL         = ZERO
|                         OR  CGBVOUT-AUTH-ORDR-RLTD = 'Y'
|                         OR (EGBC0-ORDR-LINE-NUM    = ZERO AND
|                             WS-AUTH-CHRG-FLAG      = 'Y')
|                            MOVE 'Y'    TO WS-AUTH-ERR-FLAG
|                            IF WS-AUTH-CNT  = ZERO
|                               MOVE EGBC0R-LOG-ENTRY
|                                        TO WS-AUTH-CNT
|                            END-IF
|                            IF EGBC0-STATUS-FLAG NOT = '1'
|                               MOVE '1' TO EGBC0-STATUS-FLAG
|                               ADD +1   TO CGBB-C-ERROR-COUNT
|                            END-IF
|                         END-IF
++ELSE
|                         MOVE 'Y'     TO WS-AUTH-ERR-FLAG
|                         IF WS-AUTH-CNT  = ZERO
|                            MOVE EGBC0R-LOG-ENTRY
|                                      TO WS-AUTH-CNT
|                         END-IF
|                         IF EGBC0-STATUS-FLAG NOT = '1'
|                            MOVE '1'  TO EGBC0-STATUS-FLAG
|                            ADD +1    TO CGBB-C-ERROR-COUNT
|                         END-IF
++END-IF
                       END-IF
                       IF WS-POS-BASE-AMT < EGBB0-AUTH-MIN-VAL
                          MOVE SPACES  TO EGBC0-AUTH-GRP
                                          EGBC0-AUTH-CNTRL
                                          EGBC0-QRY-AUTH
                          MOVE 0       TO CGBB-O-GO7-GRP
                                          EGBC0-MIN-AUTH
                                          EGBC0-RECALC-MIN-AUTH
                                          EGBC0-ACT-AUTH
                       END-IF
                    END-IF
                 END-PERFORM
                 IF WS-AUTH-ERR-FLAG = 'Y'
                    MOVE 'E'           TO CZAZSOFT-MSG-TYPE
                    MOVE 'GBC14'       TO CZAZSOFT-MSG
                    MOVE WS-AUTH-CNT   TO WS-AUTH-LINE
                    MOVE WS-AUTH-LINE  TO CZAZSOFT-SUBTEXT
                    PERFORM SZAZSOFT-SCREEN-LEVEL-MESS
                 END-IF
              END-IF
           END-IF

           IF CZAZSTCK-ACTION = 70
              IF WS-INVALID-HEADER-FLAG = 'Y'
              OR WS-TRLR-ERR-FLAG       = 'Y'
              OR CGBB-C-ERROR-COUNT NOT = ZERO
                 MOVE 'Y'              TO CGBB-B-INV-FLAG
              END-IF
              MOVE '0'                 TO CZAZSTCK-ERROR-SWITCH
              MOVE ZERO                TO CGBB-C-ERROR-COUNT
                                          CGBB-C-WARNING-COUNT
              MOVE 'N'                 TO CF-REFORMAT
           END-IF

           IF  CZAZSTCK-ACTION = 54
           AND WS-SA-ROWS      = ZERO
               MOVE 'E'                TO CZAZSOFT-MSG-TYPE
               MOVE 'GBC20'            TO CZAZSOFT-MSG
               PERFORM SZAZSOFT-SCREEN-LEVEL-MESS
           END-IF

      *--- XB-CHECK-WARNINGS IS PERFORMED HERE BECAUSE WARNINGS
      *--- CAN OCCUR IN GGBW

           MOVE +0                     TO CGBB-C-MAP-LINE
           PERFORM XB-CHECK-WARNINGS

      *--- ALLOW TRANSFER TO SPLIT ANALYSIS, EVEN IF THERE ARE ERRORS
      *--- ON OTHER LINES
           IF  NOT CZAZSTCK-DATA-INVALID
           AND WS-SA-REQUESTED-FLAG = 'Y'
               MOVE CGBB-C-ERROR-COUNT TO CGBB-C-SAVED-ERROR-COUNT
               MOVE ZERO               TO CGBB-C-ERROR-COUNT
           END-IF


++EXIT IA-VALIDATE-ROW TYPE=PRIOR

++IF TARGET(POP=Y)
|
|     *--- IF THE DETAIL LINES ARE NOT ORDER RELATED THEN SET THE
|     *--- SELECT FLAG TO Y
|
|          IF CZAZSTCK-LINE-INVALID
|          OR EGBC0R-NENTRIES   NOT > ZERO
|             GO TO IA-LABEL1
|          END-IF
|
|          IF EGRA0R-NENTRIES       > ZERO
|          OR MGBC-ORDR-REF     NOT = SPACES
|          OR MGBC-ADVC-NOTE    NOT = SPACES
|             IF MGBC-ORDR-LINE-NUM = ZERO
|                MOVE 'Y'              TO MGBC-SEL
|                                         MGBC-SEL-S
|                                         EGBC0-SEL
|                                         EGBC0-SEL-S
|             END-IF
|          ELSE
|              MOVE 'Y'                TO MGBC-SEL
|                                         MGBC-SEL-S
|                                         EGBC0-SEL
|                                         EGBC0-SEL-S
|          END-IF
|
|      IA-LABEL1.
++END-IF

++EXIT IA-VALIDATE-ROW TYPE=POST

           MOVE SPACE                  TO WS-VALID-TEXT
           PERFORM EGC30-DEFINE
           IF EGC30R-NENTRIES > 0
           AND CGBB-INTENT NOT = WZAZLITS-EDIT-VIEW
           AND CGBB-INTENT NOT = WZAZLITS-EDIT-DISABLE
              MOVE 'N'                 TO WS-VALID-TEXT
              PERFORM VARYING EGC30P-LOG-ENTRY
                 FROM 1 BY 1
                UNTIL EGC30P-LOG-ENTRY > EGC30R-NENTRIES
                 PERFORM EGC30-GET
                 IF EGC30-TXT-LINE NOT = SPACES
                    MOVE 'Y'           TO WS-VALID-TEXT
                 END-IF
              END-PERFORM
           END-IF
           PERFORM EGC30-CLOSE
           IF WS-VALID-TEXT = 'N'
              IF (CZAZSTCK-ACTION  = WZAZLITS-UPDATE
                                  OR WZAZLITS-ACCEPT-WARNINGS
                                  OR WZAZLITS-CANCEL
                                  OR WZAZLITS-INTERRUPT
                                  OR 55 OR 60 OR 61 OR 62 OR 70)
                 MOVE 'E'              TO CZAZSOFT-MSG-TYPE
              ELSE
                 MOVE 'I'              TO CZAZSOFT-MSG-TYPE
              END-IF
              MOVE MGBC-DESCR-F        TO CZAZSOFT-FIELD
              MOVE 'GBC72'             TO CZAZSOFT-MSG
              MOVE CGBB-C-MAP-LINE     TO CZAZSOFT-ROW
              PERFORM SZAZSOFT-SET-APPL
           END-IF

      *--- ALLOW TRANSFER TO SPLIT ANALYSIS, EVEN IF THERE ARE ERRORS
      *--- ON OTHER LINES
           IF  EGBC0-STATUS-FLAG NOT = '1'
           AND MGBC-ACTION           = 53
               MOVE 'Y'                TO WS-SA-REQUESTED-FLAG
           END-IF

           IF MGBC-ACTION = 53
              CONTINUE
           ELSE
              IF EGBC0-SA-ERROR    = 'Y'
                 MOVE MGBC-SA-TYPE-F
                                  TO CZAZSOFT-FIELD
                 MOVE 'E'
                                  TO CZAZSOFT-MSG-TYPE
                 MOVE 'GBC70'
                                  TO CZAZSOFT-MSG
                 MOVE CGBB-C-MAP-LINE
                                  TO CZAZSOFT-ROW
                 PERFORM SZAZSOFT-SET-APPL
              END-IF
           END-IF
      *--- IF ERROR OR WARNING COUNT IS LESS THAN ZERO SET IT TO ZERO

           IF CGBB-C-ERROR-COUNT < 0
              MOVE ZERO                TO CGBB-C-ERROR-COUNT
           END-IF

           IF CGBB-C-WARNING-COUNT < 0
              MOVE ZERO                TO CGBB-C-WARNING-COUNT
           END-IF

      *--- PROTECT THE MCA CODE WHEN SERVICE DETAILS ARE ENTERED
           IF MGBC-SRVC-CODE NOT = SPACES
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-MCA-F          TO CZAZSOFT-FIELD
              MOVE CGBB-C-MAP-LINE     TO CZAZSOFT-ROW
              PERFORM SZAZSOFT-SET-APPL
           ELSE
              MOVE SPACES              TO CZAZSOFT-PROTECT-IND
              MOVE 'Y'                 TO CZAZSOFT-UNPROTECT-IND
              MOVE MGBC-MCA-F          TO CZAZSOFT-FIELD
              MOVE CGBB-C-MAP-LINE     TO CZAZSOFT-ROW
              PERFORM SZAZSOFT-SET-APPL
           END-IF

++EXIT JA-ACTIONS TYPE=ONLY

           IF CZAZSTCK-ACTION = 65
              PERFORM VARYING EGBC0P-LOG-ENTRY
                           FROM 1 BY 1
                           UNTIL EGBC0P-LOG-ENTRY > EGBC0R-NENTRIES
                 PERFORM EGBC0-GET
                 IF EGBC0-SEL = SPACES
                 AND EGBC0-ORDR-REF NOT = SPACES
                 AND EGBC0-ORDR-LINE-NUM NOT = 0
                    PERFORM VBA-VLDTE-SELECTION
                 END-IF
              END-PERFORM
              MOVE 'Y' TO CF-REFORMAT
           END-IF

           IF CZAZSTCK-ACTION = 66
              PERFORM VARYING EGBC0P-LOG-ENTRY
                           FROM 1 BY 1
                           UNTIL EGBC0P-LOG-ENTRY > EGBC0R-NENTRIES
                 PERFORM EGBC0-GET
                 IF  EGBC0-SEL = 'Y'
                    PERFORM VCA-VLDTE-DESELECTION
                 END-IF
              END-PERFORM
              MOVE 'Y' TO CF-REFORMAT
           END-IF


      *--- ACTION (51) = TRANSACTION HEADER
           IF  CZAZSTCK-ACTION = 51
           AND WS-INVALID-LINE-FLAG = SPACES
              MOVE WS-HDR-APPL         TO CGBB-C-APPL
                                          CZAZSTCK-APPL
              MOVE 'Y'                 TO CF-REFORMAT
              MOVE ZERO                TO CGBB-C-FORMAT
                                          CZAZSTCK-FORMAT
                                          MGBC-HDR-CURNT-FRMAT
              MOVE 'N'                 TO MGBC-HDR-CURNT-FRMAT-S
              PERFORM SZAZSOFT-RESELECT
              MOVE CZAZSOFT-REPEATS    TO MGBC-SCROLL
           END-IF

      *--- ACTION (52) = DETAIL LINES
           IF   CZAZSTCK-ACTION        = 52
           AND (WS-INVALID-HEADER-FLAG = SPACES
           OR   CGBB-INTENT            = WZAZLITS-EDIT-VIEW)
                MOVE 'Y'               TO EGBB0-C-DETL-DISP-FLAG
                MOVE WS-DTL-APPL       TO CGBB-C-APPL
                                          CZAZSTCK-APPL
                MOVE 'Y'               TO CF-REFORMAT
                MOVE ZERO              TO CGBB-C-FORMAT
                                          CZAZSTCK-FORMAT
                                          MGBC-HDR-CURNT-FRMAT
                MOVE 'N'               TO MGBC-HDR-CURNT-FRMAT-S
                PERFORM SZAZSOFT-RESELECT
                MOVE CZAZSOFT-REPEATS  TO MGBC-SCROLL
           END-IF

           IF (MGBC-CURNT-PAGE < 1
                            OR > EGBB0R-NENTRIES)
           OR CGBB-C-ERROR-COUNT > ZERO
           OR CGBB-C-WARNING-COUNT > ZERO
           OR NOT CZAZSTCK-DATA-VALID
              MOVE CGBB-C-LOG-ENTRY    TO MGBC-CURNT-PAGE
              MOVE 'Y'                 TO MGBC-CURNT-PAGE-S
           END-IF

      *--- ACTION (61) = PREVIOUS TRANSACTION
      *--- ACTION (62) = NEXT     TRANSACTION
      *--- OBTAIN RELEVANT ROW OF EGBB0 TO GET ESN SO THAT THE CORRECT
      *--- GROUP OF EGBC0 CAN BE DEFINED IN B-INITIALIZE
           IF  CGBB-C-ERROR-COUNT = 0
           AND CGBB-C-WARNING-COUNT = 0
           AND CZAZSTCK-DATA-VALID
              IF CZAZSTCK-ACTION    = 61
              OR CZAZSTCK-ACTION    = 62
              OR MGBC-CURNT-PAGE NOT = CGBB-C-LOG-ENTRY
                 IF CZAZSTCK-ACTION = 61
                    SUBTRACT 1         FROM CGBB-C-LOG-ENTRY
                 ELSE
                    IF CZAZSTCK-ACTION = 62
                       ADD      1      TO CGBB-C-LOG-ENTRY
                    ELSE
                       MOVE MGBC-CURNT-PAGE
                                       TO CGBB-C-LOG-ENTRY
                    END-IF
                 END-IF
                 PERFORM EGBC0-CLOSE
                 PERFORM EGBB0-CLOSE
                 PERFORM EGBB1-CLOSE
                 PERFORM EGBB4-CLOSE
                 PERFORM EGBB0-DEFINE
                 PERFORM EGBB1-DEFINE
                 PERFORM EGBB4-DEFINE
                 MOVE CGBB-C-LOG-ENTRY TO EGBB0P-LOG-ENTRY
                 PERFORM EGBB0-GET
                 IF EGBB0-SUND-LOG-ENTRY > ZERO
                    MOVE EGBB0-SUND-LOG-ENTRY
                                       TO EGBB1P-LOG-ENTRY
                    PERFORM EGBB1-GET
                 ELSE
                    PERFORM EGBB1-INIT-ROW
                 END-IF
                 IF EGBB0-EGBB4-LOG-ENTRY > ZERO
                    MOVE EGBB0-EGBB4-LOG-ENTRY
                                       TO EGBB4P-LOG-ENTRY
                    PERFORM EGBB4-GET
                 ELSE
                    PERFORM EGBB4-INIT-ROW
                 END-IF
                 MOVE EGBB0R-ESN-ENTRY TO CGBB-C-ESN
                 PERFORM EGBB1-CLOSE
                 PERFORM EGBB4-CLOSE
                 MOVE ZERO             TO CGBB-C-FORMAT
                                          CGBB-C-ERROR-COUNT
                                          CGBB-C-WARNING-COUNT
                                          WS-ERROR-COUNT
                                          WS-WARNING-COUNT
                 MOVE SPACE            TO CZAZSTCK-SRCH-LIMIT-FLAG
                 MOVE ZERO             TO CZAZSTCK-ACTION
                 PERFORM SZAZSOFT-CLEAR-MAP
                 PERFORM MGBC-CLEAR-HDR
                 PERFORM EGBC0-DEFINE
                 MOVE +1               TO CGBB-C-PRIM-ITEM
                 PERFORM E-BUILD
                 IF WS-ERROR-COUNT > ZERO
                    MOVE WS-ERROR-COUNT
                                       TO CGBB-C-ERROR-COUNT
                 END-IF
                 IF WS-WARNING-COUNT > ZERO
                    MOVE WS-WARNING-COUNT
                                       TO CGBB-C-WARNING-COUNT
                 END-IF
                 PERFORM F-FORMAT-FIXED
                 PERFORM G-FORMAT-ROWS
                 PERFORM H-VALIDATE-FIXED
                 PERFORM I-VALIDATE-ROWS
              END-IF
           END-IF

      *--- ACTION (60) = CREATE NEW TRANSACTION
      *--- CREATE NEW ROW OF EGBB0 TO GET ESN SO THAT THE CORRECT GROUP
      *--- OF EGBC0 CAN BE DEFINED IN B-INITIALIZE
           IF  CGBB-C-ERROR-COUNT = 0
           AND CGBB-C-WARNING-COUNT = 0
           AND CZAZSTCK-DATA-VALID
           AND CZAZSTCK-ACTION = 60
              MOVE SPACE               TO CGBB-C-TRLR-WARN-FLAG
              MOVE EGBB0R-NENTRIES     TO EGBB0P-LOG-AFTER
              PERFORM MAINTAIN-GROSS-TOTALS
              PERFORM EGBB0-CREATE
              MOVE EGBB0R-ESN-ENTRY    TO CGBB-C-ESN
              MOVE EGBB0R-LOG-ENTRY    TO CGBB-C-LOG-ENTRY
              MOVE ZERO                TO CGBB-C-DETL-GROSS-AMT
                                          CGBB-C-DETL-TAX-AMT
              ADD  1                   TO CGBB-B-NUM-OF-TRANS-ENTRD
              PERFORM EGBC0-CLOSE
              PERFORM EGBB0-CLOSE
              PERFORM EGBB1-CLOSE
              PERFORM EGBB4-CLOSE
              MOVE  0                  TO CGBB-C-FORMAT
              MOVE +0                  TO CGBB-C-ERROR-COUNT
              MOVE +0                  TO CGBB-C-WARNING-COUNT
              MOVE SPACE               TO CGBB-C-ORDRS-FLAG
              MOVE SPACE               TO CGBB-C-DETL-DISP-FLAG
              MOVE SPACE               TO CZAZSTCK-SRCH-LIMIT-FLAG
              MOVE ZERO                TO CZAZSTCK-ACTION
              PERFORM SZAZSOFT-CLEAR-MAP
              PERFORM MGBC-CLEAR-HDR
              IF CGBB-C-APPL NOT = WS-HDR-APPL
                 MOVE WS-HDR-APPL      TO CGBB-C-APPL
                                          CZAZSTCK-APPL
                 MOVE 'Y'              TO CF-REFORMAT
                 PERFORM SZAZSOFT-RESELECT
                 MOVE 0                TO CGBB-C-FORMAT
                                          CZAZSTCK-FORMAT
                 MOVE 'N'              TO MGBC-HDR-CURNT-FRMAT-S
              END-IF
              PERFORM EGBB0-DEFINE
              MOVE CGBB-C-LOG-ENTRY    TO EGBB0P-LOG-ENTRY
              PERFORM EGBB0-GET
              PERFORM EGBB1-INIT-ROW
              PERFORM EGBB4-INIT-ROW
              PERFORM EGBC0-DEFINE
              PERFORM E-BUILD
              PERFORM F-FORMAT-FIXED
              PERFORM G-FORMAT-ROWS
           END-IF

      *--- ACTIN (63) = DELETE TRANSACTION
      *--- DELETE THE RELEVANT ROW OF EGBB0
           IF CZAZSTCK-ACTION = 63
              PERFORM EGRA0-DEFINE

              IF EGRA0R-NENTRIES > 0

                 PERFORM VARYING EGRA0P-LOG-ENTRY
                         FROM 1 BY 1
                         UNTIL EGRA0P-LOG-ENTRY > EGRA0R-NENTRIES
                    PERFORM EGRA0-GET
                    IF  EGRA0-ORDR-REF NOT = SPACES
                    AND EGRA0-SEL          = 'Y'
                       MOVE EGRA0-ORDR-REF
                                       TO CDOZ-ORDR-REF
                       MOVE CDOZ-FGRND-UNLOCK
                                       TO CDOZ-FUNC
                       MOVE CGBB-CMPY  TO CDOZ-CMPY
                       MOVE TDOORDER-DOC-ORDR
                                       TO CDOZ-DOC-IND
                       MOVE CZAZPUBL-USR
                                       TO CDOZ-LOCK-USR
                       MOVE CZAZSTCK-CURR-SESS
                                       TO CDOZ-LOCK-SESS

                       EXEC QSP CALL ORDR_LOCK_UNLOCK
                            CDOZ
                       END-EXEC

                    END-IF
                    PERFORM EGRA0-DELETE
                    COMPUTE EGRA0P-LOG-ENTRY = EGRA0P-LOG-ENTRY - 1
                 END-PERFORM
              END-IF
              PERFORM EGRA0-CLOSE

              MOVE CGBB-C-LOG-ENTRY    TO EGBB0P-LOG-ENTRY
              PERFORM EGBB0-GET

      *--- Delete all the EWS lines for the deleted transaction hdr

              IF EGBC0R-NENTRIES > ZERO
                 PERFORM VARYING EGBC0P-LOG-ENTRY
                         FROM 1 BY 1
                         UNTIL EGBC0P-LOG-ENTRY > EGBC0R-NENTRIES
                    PERFORM EGBC0-GET
                    PERFORM EGBC0-DELETE
                    COMPUTE EGBC0P-LOG-ENTRY = EGBC0P-LOG-ENTRY - 1
                 END-PERFORM
              END-IF

              SUBTRACT 1             FROM CGBB-B-NUM-OF-TRANS-ENTRD
              SUBTRACT EGBB0-INV-GROSS-AMT
                                     FROM CGBB-B-GROSS-ENTRD
              SUBTRACT EGBB0-INV-TAX-AMT
                                     FROM CGBB-B-TAX-ENTRD
              MOVE CGBB-C-LOG-ENTRY    TO EGBB0P-LOG-ENTRY
              MOVE CGBB-CMPY           TO TGBTRAN-CMPY
              MOVE MGBC-SUPP           TO TGBTRAN-SUPP
              MOVE EGBB0-SYSREF        TO TGBTRAN-SYSREF
              MOVE SPACES              TO TGBTRAN-LOCK-USR
              PERFORM SQL-UPDATE-TGBTRAN-UNLOCK
              PERFORM EGBB0-DELETE
              MOVE  0                  TO CGBB-C-FORMAT
              MOVE +0                  TO CGBB-C-ERROR-COUNT
              MOVE +0                  TO CGBB-C-WARNING-COUNT
              MOVE SPACE               TO CZAZSTCK-SRCH-LIMIT-FLAG
              MOVE ZERO                TO CZAZSTCK-ACTION
              MOVE 'Y'                 TO CGBB-LIST-CONTINUE
              MOVE 'GBC15'             TO CZAZPUBL-TRF-MSG
              MOVE 'I'                 TO CZAZPUBL-TRF-MSGTYPE
              SET CZAZSTCK-DATA-VALID  TO TRUE
              PERFORM JAB-RETURN-PREV-PRG
           END-IF


      *--- ACTION (64) = GO HEADER TEXT
           IF CZAZSTCK-ACTION = 64
              MOVE WS-HDR-APPL         TO CGBB-C-APPL
                                          CZAZSTCK-APPL
              MOVE 'Y'                 TO CF-REFORMAT
              MOVE ZERO                TO CGBB-C-FORMAT
                                          CZAZSTCK-FORMAT
                                          MGBC-HDR-CURNT-FRMAT
              MOVE 'N'                 TO MGBC-HDR-CURNT-FRMAT-S
              PERFORM SZAZSOFT-RESELECT
              MOVE CZAZSOFT-REPEATS    TO MGBC-SCROLL
           END-IF

           IF CZAZSTCK-ACTION = 71
              MOVE CGBB-CMPY           TO TPBSUPP-CMPY
              MOVE MGBC-SUPP           TO TPBSUPP-SUPP
              PERFORM SQL-SELECT-EXACT-SUPP
              IF TPBSUPP-EXACT-MTCH-FLAG NOT = 'Y'
                 MOVE 'GBC68'          TO CZAZSOFT-MSG
                 MOVE 'E'              TO CZAZSOFT-MSG-TYPE
                 PERFORM SZAZSOFT-SCREEN-LEVEL-MESS
              ELSE
                 PERFORM VARYING EGBC0P-LOG-ENTRY
                           FROM 1 BY 1
                           UNTIL EGBC0P-LOG-ENTRY > EGBC0R-NENTRIES
                  PERFORM EGBC0-GET
                  IF  EGBC0-SEL = 'Y'
                    INITIALIZE CGRM
                    MOVE 'Y'              TO CGRM-EXACT-MTCH-FLAG

                    MOVE CGRM-EXACT-MATCH    TO CGRM-FUNC

                    MOVE CGBB-CMPY           TO CGRM-CMPY
                    MOVE CGBB-TRAN-TYPE      TO CGRM-TRAN-TYPE
                    MOVE CGBB-EWS-INSTANCE   TO CGRM-EWS-INSTANCE
                    MOVE CGBB-C-ESN          TO CGRM-C-ESN
                    MOVE CGBB-RA-ESN         TO CGRM-RA-ESN
                    MOVE CGBB-RB-ESN         TO CGRM-RB-ESN
                    MOVE CGBB-C-LOG-ENTRY    TO CGRM-B-LOG-ENTRY
                    MOVE EGBC0P-LOG-ENTRY    TO CGRM-C-LOG-ENTRY
                    MOVE CGBB-RB-TRAN-SEQ-NUM
                                             TO CGRM-RB-TRAN-SEQ-NUM

                    MOVE EGBC0-QTY-INVCD     TO CGRM-C-QTY-INVCD
                    MOVE EGBC0-TAX-RCVBLE-FLAG
                                             TO CGRM-C-TAX-RCVBLE-FLAG
                    MOVE EGBC0-LINE-TOT-AMT  TO CGRM-C-LINE-TOT-AMT
                    MOVE EGBC0-LINE-TAX-AMT  TO CGRM-C-LINE-TAX-AMT
                    MOVE EGBC0-LINE-TYPE-IND
                                             TO CGRM-C-LINE-TYPE-IND
                    MOVE EGBC0-SA-VALUE      TO CGRM-C-SA-VALUE
                    MOVE EGBC0-ITEM-PRC      TO CGRM-C-ITEM-PRC
                    MOVE EGBC0-QTY-REC       TO CGRM-C-QTY-REC
                    MOVE EGBC0-SA-GRP        TO CGRM-C-SA-GRP
                    MOVE EGBC0-DSCNT-1       TO CGRM-C-DSCNT-1
                    MOVE EGBC0-DSCNT-2       TO CGRM-C-DSCNT-2
                    MOVE EGBC0-DSCNT-3       TO CGRM-C-DSCNT-3
                    MOVE EGBC0-HAND          TO CGRM-C-HAND
                    MOVE EGBC0-TAX-CODE      TO CGRM-C-TAX-CODE
                    MOVE EGBC0-TAX-TYPE      TO CGRM-C-TAX-TYPE
                    MOVE EGBC0-LOCTN         TO CGRM-C-LOCTN

                    MOVE MGBC-CURR           TO CGRM-TRAN-CURR
                    MOVE WAZCMPYD-BASE-CURR  TO CGRM-BASE-CURR

                    PERFORM EGBC0-CLOSE
                    PERFORM EGBB0-CLOSE

                    EXEC QSP CALL BUILD_EWS_PL_TRAN
                         CGRM
                    END-EXEC
                    PERFORM EGBC0-DEFINE
                    PERFORM EGBB0-DEFINE
                    MOVE CGRM-C-LOG-ENTRY TO EGBC0P-LOG-ENTRY
                  END-IF
                 END-PERFORM

                MOVE 'Y' TO CF-REFORMAT
              END-IF
           END-IF




++EXIT JAD-RESTORE TYPE=ONLY

           MOVE ZERO                   TO EGBB0-DETL-GROSS-AMT
                                          EGBB0-DETL-TAX-AMT
                                          EGBB0-PR-RCVD-LINES
                                          EGBB0-PR-LINES
                                          EGBB0-SA-LINES
                                          EGBB0-CIT-GROSS-AMT
                                          EGBB0-TAX-INCL-GROSS-AMT
                                          EGBB0-AMT-TO-AUTH
                                          EGBB0-INV-VAT-NON-REC
                                          EGBB0-INV-VAT-REC

           IF EGBC0R-NENTRIES > ZERO
              PERFORM VARYING EGBC0P-LOG-ENTRY
                      FROM    1 BY 1
                      UNTIL   EGBC0P-LOG-ENTRY > EGBC0R-NENTRIES
                 PERFORM EGBC0-GET
      *--- THIS SECTION INCREMENTS THE TRANSACTION TOTAL FIELDS
                 ADD EGBC0-LINE-TOT-AMT
                                       TO EGBB0-DETL-GROSS-AMT

                 ADD EGBC0-LINE-TAX-AMT
                                       TO EGBB0-DETL-TAX-AMT
                 ADD EGBC0-VAT-NON-REC-VALUE
                                       TO EGBB0-INV-VAT-NON-REC
                 ADD EGBC0-VAT-REC-VALUE
                                       TO EGBB0-INV-VAT-REC
                 IF MGBC-TAX-ONLY-FLAG NOT = 'Y'
                    ADD EGBC0-LINE-TAX-AMT
                                       TO EGBB0-DETL-GROSS-AMT
                 END-IF

                 IF EGBC0-PRO-RATA-IND = '0'
                    ADD 1              TO EGBB0-PR-RCVD-LINES
                 END-IF

                 IF EGBC0-PRO-RATA-IND = '2'
                    ADD +1             TO EGBB0-PR-LINES
                 END-IF

                 IF EGBC0-SA-TYPE NOT = '0'
                    ADD +1             TO EGBB0-SA-LINES
                 END-IF

                 IF EGBC0-WHOLD-USE-IND = '1'
                    EVALUATE TGACNTRL-WHOLD-TYPE-IND
                       WHEN TGACNTRL-CIT
                          COMPUTE EGBB0-CIT-GROSS-AMT =
                                  EGBB0-CIT-GROSS-AMT +
                                  EGBC0-LINE-TOT-AMT
                       WHEN TGACNTRL-1099
                          COMPUTE EGBB0-CIT-GROSS-AMT =
                                  EGBB0-CIT-GROSS-AMT +
                                  EGBC0-LINE-TOT-AMT   +
                                  EGBC0-LINE-TAX-AMT
                       WHEN TGACNTRL-PPS
                          COMPUTE EGBB0-CIT-GROSS-AMT =
                                  EGBB0-CIT-GROSS-AMT +
                                  EGBC0-LINE-TOT-AMT
                    END-EVALUATE
                 END-IF

                 IF EGBC0-TAX-INCL-FLAG = 'Y'
                    COMPUTE EGBB0-TAX-INCL-GROSS-AMT =
                            EGBB0-TAX-INCL-GROSS-AMT +
                            EGBC0-LINE-TOT-AMT        +
                            EGBC0-LINE-TAX-AMT
                 END-IF

++IF TARGET(POP=Y)
                 IF EGBC0-PRO-RATA-IND NOT = '2'
                    IF  EGBC0-ORDR-REF     NOT = SPACES
                    AND EGBC0-ORDR-LINE-NUM    > 0
                    AND CGBVOUT-AUTH-ORDR-RLTD = SPACE
                       CONTINUE
                    ELSE
                       IF EGBC0-TAX-RCVBLE-FLAG = '1'
                          COMPUTE EGBB0-AMT-TO-AUTH =
                                  EGBB0-AMT-TO-AUTH +
                                  EGBC0-LINE-TOT-AMT
                       ELSE
                          COMPUTE EGBB0-AMT-TO-AUTH =
                                  EGBB0-AMT-TO-AUTH +
                                  EGBC0-LINE-TOT-AMT +
                                  EGBC0-LINE-TAX-AMT +
                                  EGBC0-LINE-SLFASSD-AMT
                       END-IF
                       IF EGBC0-TAX-RCVBLE-FLAG = '2'
                          SUBTRACT EGBC0-VAT-REC-VALUE
                              FROM EGBB0-AMT-TO-AUTH
                       END-IF
                    END-IF
                 END-IF
++ELSE
                 IF EGBC0-PRO-RATA-IND NOT = '2'
                    IF EGBC0-TAX-RCVBLE-FLAG = '1'
                       COMPUTE EGBB0-AMT-TO-AUTH =
                               EGBB0-AMT-TO-AUTH +
                               EGBC0-LINE-TOT-AMT
                    ELSE
                       COMPUTE EGBB0-AMT-TO-AUTH =
                               EGBB0-AMT-TO-AUTH +
                               EGBC0-LINE-TOT-AMT +
                               EGBC0-LINE-TAX-AMT +
                               EGBC0-LINE-SLFASSD-AMT
                    END-IF
                    IF EGBC0-TAX-RCVBLE-FLAG = '2'
                       SUBTRACT EGBC0-VAT-REC-VALUE
                           FROM EGBB0-AMT-TO-AUTH
                    END-IF
                 END-IF
++END-IF
              END-PERFORM
           END-IF

++EXIT K-PROMPT TYPE=ONLY

      *--- DO NOT ALLOW PROMPT ON MINI CHART CODE WHEN NEITHER OLAS GL
      *--- OR USER'S GL IS NOT IN USE
           IF  CZAZSTCK-FLDNO       = MGBC-MCA-F
           AND CZAZPUBL-FLAG-GL     = SPACE
           AND CZAZPUBL-FLAG-USR-GL = SPACE
               GO TO +++-END
           END-IF

      *--- DO NOT ALLOW PROMPT ON GL ACCOUNT OR ANALYSIS WHEN OLAS GL
      *--- IS NOT IN USE
           IF (CZAZSTCK-FLDNO = MGBC-GL-ACCT-F
           OR  CZAZSTCK-FLDNO = MGBC-GL-ANAL-F)
           AND CZAZPUBL-FLAG-GL = SPACE
               GO TO +++-END
           END-IF

++IF TARGET(PT=Y)
           IF CZAZSTCK-FLDNO = MGBC-PROJ-F
              IF WKZCMPYD-PROJ-CODE-SIZE(1) = ZEROES
              OR WKZCMPYD-PT-ON-FLAG        = SPACES
                 MOVE 'ZZZ04'           TO CZAZSOFT-MSG
                 MOVE 'E'               TO CZAZSOFT-MSG-TYPE
                 MOVE MGBC-PROJ-F       TO CZAZSOFT-FIELD
                 MOVE CGBB-C-MAP-LINE   TO CZAZSOFT-ROW
                 PERFORM SZAZSOFT-SET-APPL
                 GO TO +++-EXIT
              END-IF
           END-IF
++END-IF

      *--- DO NOT ALLOW PROMPT ON ORDER REFERENCE WHEN OLAS POP
      *--- IS NOT IN USE
++IF TARGET(POP=Y)
|          IF  CZAZSTCK-FLDNO    = MGBC-ORDR-REF-F
|          AND CZAZPUBL-FLAG-POP = SPACE
|              GO TO +++-END
|          END-IF
++END-IF

           IF CZAZSTCK-FLDNO = MGBC-SYSREF-F
              IF MGBC-SYSREF-S = 'Y'
                 MOVE MGBC-SYSREF      TO WS-SYSREF-FR
                                          WS-SYSREF-TO
              ELSE
                 MOVE ZERO             TO WS-SYSREF-FR
                 MOVE +99999999        TO WS-SYSREF-TO
              END-IF
           END-IF

      *--- SET UP WS-PROMPT-CMPY
           MOVE MGBC-HDR-CMPY-S        TO WS-PROMPT-CMPY-S
           MOVE MGBC-HDR-CMPY-F        TO WS-PROMPT-CMPY-F

           MOVE MGBC-SUPP-POSTCODE     TO WS-SUPP-POSTCODE
           MOVE MGBC-SUPP              TO WS-SUPP

           EVALUATE TPACNTRL-GL-RLTN-IND
              WHEN TPACNTRL-NORMAL
                 MOVE CGBB-CMPY        TO WS-PROMPT-CMPY
              WHEN TPACNTRL-SINGLE
                 MOVE TPACNTRL-GL-HOLDING-CMPY
                                       TO WS-PROMPT-CMPY
              WHEN OTHER
                 IF MGBC-GL-CMPY NOT = SPACES
                    MOVE MGBC-GL-CMPY  TO WS-PROMPT-CMPY
                 ELSE
                    MOVE CGBB-CMPY     TO WS-PROMPT-CMPY
                 END-IF
           END-EVALUATE

      *--- FOR PROMPT ON TAX CODE (USE GRA0 TO FIND RATE)

           IF (CGBB-INTENT = WZAZLITS-EDIT-VIEW  OR
                          = WZAZLITS-EDIT-PURGE) AND
              MGBC-TRAN-TAX-CODE-S = 'Y'
              IF CZAZSTCK-FLDNO = MGBC-TRAN-TAX-CODE-F
                 INITIALIZE CRA0IN
                 MOVE CRA0IN-CALC-PL-INCL
                                       TO CRA0IN-FUNC
                 MOVE CRA0IN-PL        TO CRA0IN-SYS
                 MOVE CGBB-CMPY        TO CRA0IN-CMPY
                 MOVE MGBC-TRAN-TAX-CODE
                                       TO CRA0IN-TAX-CODE
                 MOVE MGBC-TRAN-LOCTN  TO CRA0IN-LOCTN
                 MOVE MGBC-TRAN-TAX-TYPE
                                       TO CRA0IN-TAX-TYPE
                 MOVE MGBC-TRAN-DATE   TO CRA0IN-EFF-DATE
                 MOVE MGBC-TRAN-HAND   TO CRA0IN-HAND
                 MOVE TPACNTRL-GL-HOLDING-CMPY
                                       TO CRA0IN-GL-CMPY
                 MOVE ZERO             TO CRA0IN-GROSS-VALUE
                 MOVE ZERO             TO CRA0IN-DSCNT-VALUE
                 MOVE ZERO             TO CRA0IN-DSCNT-PERC
                 MOVE ZERO             TO CRA0IN-TAX-VALUE
                 MOVE ZERO             TO CRA0IN-ITEM-VALUE
                 MOVE ZERO             TO CRA0IN-NETT-VALUE
                 MOVE SPACES           TO CRA0IN-PL-VAT-NET-FLAG
                 MOVE SPACES           TO CRA0IN-PL-TAKE-DSCNT-IND
                 MOVE SPACES           TO CRA0IN-PL-DSCNT-1
                 MOVE ZERO             TO CRA0IN-PL-TOT-AMT
                 MOVE SPACES           TO CRA0IN-LEDGR
                 MOVE MGBC-SUPP        TO CRA0IN-TRADER
                 MOVE MGBC-TRAN-TAX-CODE
                                       TO CRA0IN-TRADER-TAX-CODE
                 MOVE MGBC-TRAN-TAX-CODE-S
                                       TO CRA0IN-TAX-CODE-S
                 MOVE MGBC-TRAN-LOCTN-S
                                       TO CRA0IN-LOCTN-S
                 MOVE MGBC-TRAN-TAX-TYPE-S
                                       TO CRA0IN-TAX-TYPE-S
                 MOVE 'N'              TO CRA0IN-TAX-VALUE-S
                 MOVE MGBC-TRAN-TAX-CODE-F
                                       TO CRA0IN-TAX-CODE-F
                 MOVE MGBC-TRAN-LOCTN-F
                                       TO CRA0IN-LOCTN-F
                 MOVE MGBC-TRAN-TAX-TYPE-F
                                       TO CRA0IN-TAX-TYPE-F
                 MOVE ZERO             TO CRA0IN-TAX-VALUE-F
              ELSE
                 IF CZAZSTCK-FLDNO = MGBC-DETL-TAX-CODE-F AND
                    MGBC-DETL-TAX-CODE-S = 'Y'
                    INITIALIZE CRA0IN
                    MOVE CRA0IN-CALC-PL-INCL
                                       TO CRA0IN-FUNC
                    MOVE CRA0IN-PL     TO CRA0IN-SYS
                    MOVE CGBB-CMPY     TO CRA0IN-CMPY
                    MOVE MGBC-DETL-TAX-CODE
                                       TO CRA0IN-TAX-CODE
                    MOVE MGBC-DETL-LOCTN
                                       TO CRA0IN-LOCTN
                    MOVE MGBC-DETL-TAX-TYPE
                                       TO CRA0IN-TAX-TYPE
                    MOVE MGBC-TRAN-DATE
                                       TO CRA0IN-EFF-DATE
                    MOVE MGBC-DETL-HAND
                                       TO CRA0IN-HAND
                    MOVE TPACNTRL-GL-HOLDING-CMPY
                                       TO CRA0IN-GL-CMPY
                    MOVE ZERO          TO CRA0IN-GROSS-VALUE
                    MOVE ZERO          TO CRA0IN-DSCNT-VALUE
                    MOVE ZERO          TO CRA0IN-DSCNT-PERC
                    MOVE ZERO          TO CRA0IN-TAX-VALUE
                    MOVE ZERO          TO CRA0IN-ITEM-VALUE
                    MOVE ZERO          TO CRA0IN-NETT-VALUE
                    MOVE SPACES        TO CRA0IN-PL-VAT-NET-FLAG
                    MOVE SPACES        TO CRA0IN-PL-TAKE-DSCNT-IND
                    MOVE SPACES        TO CRA0IN-PL-DSCNT-1
                    MOVE ZERO          TO CRA0IN-PL-TOT-AMT
                    MOVE SPACES        TO CRA0IN-LEDGR
                    MOVE MGBC-SUPP     TO CRA0IN-TRADER
                    MOVE MGBC-DETL-TAX-CODE
                                       TO CRA0IN-TRADER-TAX-CODE
                    MOVE MGBC-DETL-TAX-CODE-S
                                       TO CRA0IN-TAX-CODE-S
                    MOVE MGBC-DETL-LOCTN-S
                                       TO CRA0IN-LOCTN-S
                    MOVE MGBC-DETL-TAX-TYPE-S
                                       TO CRA0IN-TAX-TYPE-S
                    MOVE 'N'           TO CRA0IN-TAX-VALUE-S
                    MOVE MGBC-DETL-TAX-CODE-F
                                       TO CRA0IN-TAX-CODE-F
                    MOVE MGBC-DETL-LOCTN-F
                                       TO CRA0IN-LOCTN-F
                    MOVE MGBC-DETL-TAX-TYPE-F
                                       TO CRA0IN-TAX-TYPE-F
                    MOVE ZERO          TO CRA0IN-TAX-VALUE-F
                 END-IF
              END-IF

              EXEC QSP CALL CALC_TAX_VAL
                   CRA0IN
                   CRA0OUT
              END-EXEC

              MOVE SPACES              TO WS-RATE-ERR-FLAG

              IF CRA0OUT-ERR-CNT > ZERO
                 PERFORM VARYING CF-SUB  FROM 1 BY 1
                   UNTIL CF-SUB > CRA0OUT-ERR-CNT
                   IF CRA0OUT-ERR (CF-SUB) = CRA0OUT-ERROR
                      MOVE 'Y'         TO WS-RATE-ERR-FLAG
                      MOVE CRA0OUT-ERR (CF-SUB)
                                       TO CZAZSOFT-MSG-TYPE
                      MOVE CRA0OUT-MSG (CF-SUB)
                                       TO CZAZSOFT-MSG
                      PERFORM SZAZSOFT-SCREEN-LEVEL-MESS
                   END-IF
                 END-PERFORM
              END-IF

              IF NOT WS-RATE-ERR
                 MOVE CRA0OUT-LOCTN    TO WS-TAX-LOCTN
                 MOVE CRA0OUT-TAX-TYPE TO WS-TAX-TYPE
                 MOVE CRA0OUT-RATE-DATE
                                       TO WS-TAX-DATE
              ELSE
                 MOVE SPACES           TO WS-TAX-LOCTN
                 MOVE SPACES           TO WS-TAX-TYPE
                 MOVE WZAZLITS-MIN-DATE
                                       TO WS-TAX-DATE
              END-IF
           END-IF

      *--- Edit Mode Prompt for Payment Address Number

           IF CZAZSTCK-FLDNO = MGBC-PYMNT-ADDR-F
              MOVE CZAZSTCK-FLDNO      TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-QUERY-FIELD
              IF CZAZSOFT-PROTECTED = 'Y'
                 CONTINUE
              ELSE
                 PERFORM PROMPT-FPBG
              END-IF
           END-IF

++EXIT L-INVOKE TYPE=ONLY

      *--- IF ACTION IS SUSPEND, RETURN TO COOP MAJOR
           IF CZAZSTCK-ACTION = 70
      *--- Custom User Data will be lost if Reqsn Suspended
              IF CGBB-C-XUAD-EXISTS = 'Y'
                 MOVE 'W'              TO CZAZSOFT-MSG-TYPE
                 MOVE 'GBC58'          TO CZAZSOFT-MSG
                 PERFORM XA-SET-WARNING
                 MOVE SPACE            TO CGBB-C-XUAD-EXISTS
                 GO TO +++-EXIT
              END-IF
              PERFORM LAA-SUSPEND
              IF CGBB-C-EWS-CHANGED = 'Y'
                 MOVE 'Y'              TO CGBB-BATCH-CHANGED
              END-IF
              MOVE CZAZSTCK-ACTION     TO CGBB-COOP-REQUEST
              MOVE CGBB-STCK-PRG (1)   TO CZAZPUBL-TRF-NEXT-PRG
              PERFORM LA-INVOKE-COOP
           END-IF

      *--- ACTION (53) = SPLIT ANALYSIS
      *--- INVOKE FGBD
           IF CF-FIRST-ACTION-ROW > 0
              IF MGBC-ACTION      = 53 AND
                 EGBC0-SEL        = 'Y'
                 MOVE 'Y'              TO CGBB-LIST-CONTINUE
                 MOVE '*'              TO EGBC0-LAST-ACTION
                 MOVE 'Y'              TO EGBC0-LAST-ACTION-S
                 MOVE 'N'              TO EGBC0-ACTION-S
                 MOVE ZERO             TO CGBB-D-PRIM-ITEM

      *--- NOW MOVE ANY DETAIL FIELDS TO BE DISPLAYED ON SPLIT ANALYSIS
      *--- SCREEN FROM EWS TO COMMAREA
                 MOVE EGBB0-ELEM       TO CGBB-C-ELEM
                 MOVE EGBC0-SA-GRP     TO CGBB-D-SA-GRP
                 MOVE EGBB0-SUPP       TO CGBB-D-SUPP
                 MOVE EGBB0-CURR       TO CGBB-D-CURR
                 MOVE EGBC0R-LOG-ENTRY
                                       TO CGBB-D-TRAN-SEQ-NUM
                 MOVE EGBC0-MCA        TO CGBB-D-MCA-HEAD
                 MOVE EGBC0-GL-CMPY    TO CGBB-D-GL-CMPY
                 IF EGBC0-SRVC-CODE NOT = SPACES
                    MOVE 'Y'           TO CGBB-D-SRVC-RLTD-FLAG
                 ELSE
                    MOVE SPACES        TO CGBB-D-SRVC-RLTD-FLAG
                 END-IF
++IF TARGET(POP=Y)
|
|                IF EGBC0-ORDR-REF NOT = SPACES
|                   MOVE EGBC0-ORDR-REF
|                                      TO CGBB-TRAN-REF
|                ELSE
|                  MOVE EGBB0-TRAN-REF TO CGBB-TRAN-REF
|                END-IF
++ELSE
|                MOVE EGBB0-TRAN-REF   TO CGBB-TRAN-REF
|
++END-IF
                 MOVE EGBC0-ORDR-LINE-NUM
                                       TO CGBB-D-ORDR-LINE-NUM
                 MOVE EGBC0-DESCR      TO CGBB-D-DESCR
                 MOVE EGBC0-SA-TYPE    TO CGBB-D-SA-TYPE
                 MOVE EGBB0-SYSREF     TO CGBB-SYSREF
                 MOVE EGBB0-AUTH-CNTRL TO CGBB-D-AUTH-CNTRL
                 MOVE EGBB0-AUTH-TYPE  TO CGBB-D-AUTH-TYPE

                 MOVE EGBC0-QTY-INVCD  TO CGBB-D-QTY-INVCD
                                          CGBB-D-LINE-QTY
                                          CGBB-D-LINE-QTY-REMAIN
                 MOVE 100              TO CGBB-D-LINE-PERC
                                          CGBB-D-LINE-PERC-REMAIN
                 IF MGBC-DETL-ORDR-REF = SPACES
                    IF EGBC0-TAX-RCVBLE-FLAG = '1' OR '2'
                       MOVE EGBC0-LINE-TOT-AMT
                                          TO CGBB-D-VAL
                                             CGBB-D-LINE-VAL
                                             CGBB-D-LINE-VAL-REMAIN
                    ELSE
                       COMPUTE CGBB-D-VAL =  EGBC0-LINE-TOT-AMT +
                                             EGBC0-LINE-TAX-AMT +
                                             EGBC0-LINE-SLFASSD-AMT
                       MOVE CGBB-D-VAL    TO CGBB-D-LINE-VAL
                                             CGBB-D-LINE-VAL-REMAIN
                    END-IF
                 ELSE
                    IF EGBC0-TAX-INCL-FLAG = 'Y'
                    COMPUTE CGBB-D-VAL =  EGBC0-LINE-TOT-AMT +
                                          EGBC0-LINE-TAX-AMT +
                                          EGBC0-LINE-SLFASSD-AMT
                    ELSE
                       MOVE EGBC0-LINE-TOT-AMT
                                          TO CGBB-D-VAL
                    END-IF
                    MOVE CGBB-D-VAL    TO CGBB-D-LINE-VAL
                                          CGBB-D-LINE-VAL-REMAIN
                 END-IF
                 EVALUATE EGBC0-SA-TYPE
                    WHEN '1'
                       MOVE 'PERC    ' TO CGBB-D-APPL
                    WHEN '2'
                       MOVE 'QUANT   ' TO CGBB-D-APPL
                    WHEN OTHER
                       MOVE 'VALUE   ' TO CGBB-D-APPL
                 END-EVALUATE
      *--- In the event that tax rates have changed, the split needs to be
      *--- rebuild to cater for any change in value for order related invoices.
                 IF MGBC-DETL-ORDR-REF NOT = SPACES
                    INITIALIZE CGRM

                    MOVE CGRM-UPDATE-D       TO CGRM-FUNC

                    MOVE CGBB-CMPY           TO CGRM-CMPY
                    MOVE CGBB-TRAN-TYPE      TO CGRM-TRAN-TYPE
                    MOVE CGBB-EWS-INSTANCE   TO CGRM-EWS-INSTANCE
                    MOVE CGBB-C-ESN          TO CGRM-C-ESN
                    MOVE CGBB-RA-ESN         TO CGRM-RA-ESN
                    MOVE CGBB-RB-ESN         TO CGRM-RB-ESN
                    MOVE CGBB-C-LOG-ENTRY    TO CGRM-B-LOG-ENTRY
                    MOVE EGBC0P-LOG-ENTRY    TO CGRM-C-LOG-ENTRY
                    MOVE CGBB-RB-TRAN-SEQ-NUM
                                             TO CGRM-RB-TRAN-SEQ-NUM

                    MOVE EGBC0-QTY-INVCD     TO CGRM-C-QTY-INVCD
                    MOVE EGBC0-TAX-RCVBLE-FLAG
                                             TO CGRM-C-TAX-RCVBLE-FLAG
                    MOVE EGBC0-LINE-TOT-AMT  TO CGRM-C-LINE-TOT-AMT
                    MOVE EGBC0-LINE-TAX-AMT  TO CGRM-C-LINE-TAX-AMT
                    MOVE EGBC0-LINE-TYPE-IND
                                             TO CGRM-C-LINE-TYPE-IND
                    MOVE EGBC0-SA-VALUE      TO CGRM-C-SA-VALUE
                    MOVE EGBC0-ITEM-PRC      TO CGRM-C-ITEM-PRC
                    MOVE EGBC0-QTY-REC       TO CGRM-C-QTY-REC
                    MOVE EGBC0-SA-GRP        TO CGRM-C-SA-GRP
                    MOVE EGBC0-DSCNT-1       TO CGRM-C-DSCNT-1
                    MOVE EGBC0-DSCNT-2       TO CGRM-C-DSCNT-2
                    MOVE EGBC0-DSCNT-3       TO CGRM-C-DSCNT-3
                    MOVE EGBC0-HAND          TO CGRM-C-HAND
                    MOVE EGBC0-TAX-CODE      TO CGRM-C-TAX-CODE
                    MOVE EGBC0-TAX-TYPE      TO CGRM-C-TAX-TYPE
                    MOVE EGBC0-LOCTN         TO CGRM-C-LOCTN

                    MOVE MGBC-CURR           TO CGRM-TRAN-CURR
                    MOVE WAZCMPYD-BASE-CURR  TO CGRM-BASE-CURR

                    PERFORM EGBC0-CLOSE
                    PERFORM EGBB0-CLOSE

                    EXEC QSP CALL BUILD_EWS_PL_TRAN
                         CGRM
                    END-EXEC

                    PERFORM EGBB0-DEFINE
                    MOVE CGRM-B-LOG-ENTRY    TO EGBB0P-LOG-ENTRY
                    PERFORM EGBB0-GET
                    PERFORM EGBC0-DEFINE
                    MOVE CGRM-C-LOG-ENTRY    TO EGBC0P-LOG-ENTRY
                    PERFORM EGBC0-GET

                    PERFORM VARYING CF-SUB
                            FROM 1 BY 1
                            UNTIL CF-SUB > CGRM-COUNT
                      MOVE CGRM-ERR (CF-SUB) TO CZAZSOFT-MSG-TYPE
                      MOVE CGRM-MSG  (CF-SUB)
                                             TO CZAZSOFT-MSG
                      MOVE CGRM-MAND (CF-SUB)
                                             TO CZAZSOFT-MANDATORY
                      IF CGRM-FLD-NO (CF-SUB) = -2
                         MOVE MGBC-QTY-INVCD-F
                                             TO CZAZSOFT-FIELD
                      ELSE
                         MOVE CGRM-FLD-NO  (CF-SUB)
                                             TO CZAZSOFT-FIELD
                      END-IF

                      MOVE CGRM-SUBTXT  (CF-SUB)
                                             TO CZAZSOFT-SUBTEXT
                      MOVE CGRM-SUBFIELD-IDX  (CF-SUB)
                                             TO CZAZSOFT-SUBFIELD-IDX

                      IF CGRM-MSG (CF-SUB) = SPACES
                         CONTINUE
                      ELSE
                         IF CGRM-ERR (CF-SUB) = 'E'
                            MOVE 'Y'         TO WS-INVALID-HEADER-FLAG
                            MOVE MGBC-ORDR-REF-F
                                             TO CZAZSOFT-FIELD
                            PERFORM SZAZSOFT-SET-APPL
                            IF MGBC-ORDR-REF NOT = SPACES
                               MOVE MGBC-ORDR-REF
                                             TO CDOZ-ORDR-REF
                               MOVE CDOZ-FGRND-UNLOCK
                                             TO CDOZ-FUNC
                               MOVE CGBB-CMPY
                                             TO CDOZ-CMPY
                               MOVE TDOORDER-DOC-ORDR
                                             TO CDOZ-DOC-IND
                               MOVE CZAZPUBL-USR
                                             TO CDOZ-LOCK-USR
                               MOVE CZAZSTCK-CURR-SESS
                                             TO CDOZ-LOCK-SESS

                               EXEC QSP CALL ORDR_LOCK_UNLOCK
                                   CDOZ
                               END-EXEC

                            END-IF
                         GO TO +++-EXIT
                         END-IF
                         MOVE CGBB-C-MAP-LINE
                                             TO CZAZSOFT-ROW
                         PERFORM XA-SET-WARNING

                         IF CGRM-MSG (CF-SUB) = 'GBX78' OR 'GBX79'
                                           OR 'GBX80'
                            MOVE MGBC-ITEM-PRC-F
                                             TO CZAZSOFT-FIELD
                            MOVE CGRM-ERR (CF-SUB)
                                             TO CZAZSOFT-MSG-TYPE
                            MOVE CGRM-MSG  (CF-SUB)
                                             TO CZAZSOFT-MSG
                            MOVE CGBB-C-MAP-LINE
                                             TO CZAZSOFT-ROW

                            PERFORM XA-SET-WARNING
                         END-IF

                      END-IF
                    END-PERFORM
                 END-IF
                 MOVE SPACES           TO EGBC0-SA-ERROR
                 MOVE 'FGBD'           TO CZAZPUBL-TRF-NEXT-PRG
                 PERFORM LA-INVOKE-COOP
              END-IF
           END-IF

      *--- ACTION (56) = LINE AUTHORISATION
      *--- INVOKE FGO7
           IF CF-FIRST-ACTION-ROW > 0
              IF MGBC-ACTION      = 56
              AND (EGBC0-AUTH-DENIED = '0'
                                  OR = '3')
                 MOVE 'Y'              TO CGBB-LIST-CONTINUE
                 MOVE '*'              TO EGBC0-LAST-ACTION
                 MOVE 'Y'              TO EGBC0-LAST-ACTION-S
                 MOVE 'N'              TO EGBC0-ACTION-S
                 MOVE EGBB0-TRAN-SEQ-NUM
                                       TO CGBB-C-TRAN-SEQ
                 MOVE EGBB0-AUTH-CNTRL TO CGBB-O-AUTH-CNTRL
                 MOVE EGBB0-AUTH-GRP   TO CGBB-O-AUTH-GRP
                 MOVE EGBB0-QRY-AUTH   TO CGBB-O-QRY-AUTH
                 MOVE EGBB0-SEQ-AUTH-FLAG
                                       TO CGBB-O-SEQ-AUTH-FLAG
                 MOVE EGBB0-TRAN-REF   TO CGBB-O-TRAN-REF
                 MOVE EGBB0-CURR       TO CGBB-O-CURR
                 MOVE EGBB0-RATE-TYPE  TO CGBB-O-RATE-TYPE
                 MOVE EGBB0-EFF-DATE   TO CGBB-O-EFF-DATE
                 MOVE EGBB0-EXCH-RATE  TO CGBB-O-EXCH-RATE
                 MOVE EGBB0-CONV-DRCTN TO CGBB-O-CONV-DRCTN
                 MOVE EGBB0-CONV-UNITS TO CGBB-O-CONV-UNITS
                 MOVE EGBC0-MIN-AUTH   TO CGBB-O-MIN-AUTH
                 MOVE EGBC0-RECALC-MIN-AUTH
                                       TO CGBB-O-RECALC-MIN-AUTH
                 MOVE EGBC0R-LOG-ENTRY TO CGBB-O-LOG-ENTRY
                 MOVE EGBC0-TAX-RCVBLE-FLAG
                                       TO CGBB-O-TAX-RCVBLE-FLAG

                 IF MGBC-SLFASSD-TAX-IND = '0'
                    COMPUTE CGBB-O-GROSS-AMT =
                            EGBC0-LINE-TOT-AMT +
                            EGBC0-LINE-TAX-AMT
                    MOVE EGBC0-LINE-TAX-AMT
                                       TO CGBB-O-TAX-AMT
                 ELSE
                    COMPUTE CGBB-O-GROSS-AMT =
                            EGBC0-LINE-TOT-AMT +
                            EGBC0-LINE-SLFASSD-AMT
                    MOVE EGBC0-LINE-SLFASSD-AMT
                                       TO CGBB-O-TAX-AMT
                 END-IF

                 IF EGBB0-AUTH-TYPE  = '2'
                 OR EGBB0-AUTH-TYPE  = '3'
                 OR EGBB0-AUTH-TYPE  = '4'
                    IF EGBC0-AUTH-CNTRL NOT = EGBB0-AUTH-CNTRL
                    OR EGBC0-AUTH-GRP   NOT = EGBB0-AUTH-GRP
                    OR EGBC0-GO7-GRP        = ZERO
                       ADD +1          TO CGBB-O-NEXT-GO7-GRP
                       MOVE CGBB-O-NEXT-GO7-GRP
                                       TO CGBB-O-GO7-GRP
                                          EGBC0-GO7-GRP
                    ELSE
                       MOVE EGBC0-GO7-GRP
                                       TO CGBB-O-GO7-GRP
                    END-IF

                    MOVE EGBB0-TRAN-TYPE
                                       TO CGBB-O-TRAN-TYPE
                    MOVE EGBB0-TRAN-STYPE
                                       TO CGBB-O-TRAN-STYPE

                    MOVE 'FGPU'        TO CZAZPUBL-TRF-NEXT-PRG
                 ELSE
                    IF EGBC0-AUTH-CNTRL NOT = EGBB0-AUTH-CNTRL
                    OR EGBC0-AUTH-GRP   NOT = EGBB0-AUTH-GRP
                    OR EGBC0-GO7-GRP        = ZERO
                    OR EGBC0-GO6-GRP        = ZERO
                       ADD +1          TO CGBB-O-NEXT-GO7-GRP
                       MOVE CGBB-O-NEXT-GO7-GRP
                                       TO CGBB-O-GO7-GRP
                                          CGBB-O-GO6-GRP
                                          EGBC0-GO7-GRP
                                          EGBC0-GO6-GRP
                    ELSE
                       MOVE EGBC0-GO7-GRP
                                       TO CGBB-O-GO7-GRP
                       MOVE EGBC0-GO6-GRP
                                       TO CGBB-O-GO6-GRP
                    END-IF

                    MOVE EGBB0-TRAN-TYPE
                                       TO CGBB-O-TRAN-TYPE
                    MOVE EGBB0-TRAN-STYPE
                                       TO CGBB-O-TRAN-STYPE

                    MOVE 'FGO7'        TO CZAZPUBL-TRF-NEXT-PRG
                 END-IF

                 PERFORM LA-INVOKE-COOP
              END-IF
           END-IF

      *--- ACTION (55) = HEADER AUTHORISATION
      *--- INVOKE FGO7
           IF   CZAZSTCK-ACTION   = 55
           AND (EGBB0-AUTH-DENIED = '0'
                               OR = '3')
              MOVE 'Y'                 TO CGBB-LIST-CONTINUE
              MOVE '*'                 TO EGBC0-LAST-ACTION
              MOVE 'Y'                 TO EGBC0-LAST-ACTION-S
              MOVE 'N'                 TO EGBC0-ACTION-S
              MOVE EGBB0-TRAN-SEQ-NUM
                                       TO CGBB-C-TRAN-SEQ
              MOVE EGBB0-AUTH-CNTRL    TO CGBB-O-AUTH-CNTRL
              MOVE EGBB0-AUTH-GRP      TO CGBB-O-AUTH-GRP
              MOVE EGBB0-QRY-AUTH      TO CGBB-O-QRY-AUTH
              MOVE EGBB0-SEQ-AUTH-FLAG TO CGBB-O-SEQ-AUTH-FLAG
              MOVE EGBB0-TRAN-REF      TO CGBB-O-TRAN-REF
              MOVE EGBB0-CURR          TO CGBB-O-CURR
              MOVE EGBB0-RATE-TYPE     TO CGBB-O-RATE-TYPE
              MOVE EGBB0-EFF-DATE      TO CGBB-O-EFF-DATE
              MOVE EGBB0-EXCH-RATE     TO CGBB-O-EXCH-RATE
              MOVE EGBB0-CONV-DRCTN    TO CGBB-O-CONV-DRCTN
              MOVE EGBB0-CONV-UNITS    TO CGBB-O-CONV-UNITS
              MOVE EGBB0-MIN-AUTH      TO CGBB-O-MIN-AUTH
              MOVE EGBB0-RECALC-MIN-AUTH
                                       TO CGBB-O-RECALC-MIN-AUTH
              MOVE EGBB0-TAX-RCVBLE-FLAG
                                       TO CGBB-O-TAX-RCVBLE-FLAG
              MOVE EGBB0-INV-GROSS-AMT TO CGBB-O-GROSS-AMT
              MOVE EGBB0-AMT-TO-AUTH   TO CGBB-O-AMT-TO-AUTH

              IF MGBC-SLFASSD-TAX-IND = '0'
                 MOVE EGBB0-INV-TAX-AMT
                                       TO CGBB-O-TAX-AMT
              END-IF

              IF EGBB0-AUTH-TYPE  = '2'
              OR EGBB0-AUTH-TYPE  = '3'
              OR EGBB0-AUTH-TYPE  = '4'
                 IF EGBB0-QRY-AUTH = SPACES
                 OR EGBB0-GO7-GRP = ZERO
                    ADD +1             TO CGBB-O-NEXT-GO7-GRP
                    MOVE CGBB-O-NEXT-GO7-GRP
                                       TO CGBB-O-GO7-GRP
                                          EGBB0-GO7-GRP
                 ELSE
                    MOVE EGBB0-GO7-GRP TO CGBB-O-GO7-GRP
                 END-IF

                 MOVE EGBB0-TRAN-TYPE  TO CGBB-O-TRAN-TYPE
                 MOVE EGBB0-TRAN-STYPE TO CGBB-O-TRAN-STYPE

                 MOVE 'FGPU'           TO CZAZPUBL-TRF-NEXT-PRG
              ELSE
                 IF EGBB0-QRY-AUTH = SPACES
                 OR EGBB0-GO7-GRP = ZERO
                 OR EGBB0-GO6-GRP = ZERO
                    ADD +1             TO CGBB-O-NEXT-GO7-GRP
                    MOVE CGBB-O-NEXT-GO7-GRP
                                       TO CGBB-O-GO7-GRP
                                          CGBB-O-GO6-GRP
                                          EGBB0-GO7-GRP
                                          EGBB0-GO6-GRP
                 ELSE
                    MOVE EGBB0-GO7-GRP TO CGBB-O-GO7-GRP
                    MOVE EGBB0-GO6-GRP TO CGBB-O-GO6-GRP
                 END-IF

                 MOVE EGBB0-TRAN-TYPE  TO CGBB-O-TRAN-TYPE
                 MOVE EGBB0-TRAN-STYPE TO CGBB-O-TRAN-STYPE

                 MOVE 'FGO7'           TO CZAZPUBL-TRF-NEXT-PRG
              END-IF

              PERFORM LA-INVOKE-COOP
           END-IF

      *--- Edit/Line Text
           IF CF-FIRST-ACTION-ROW > 0
              IF MGBC-ACTION = 72
                 MOVE 'Y'              TO CGBB-LIST-CONTINUE
                 MOVE '*'              TO EGBC0-LAST-ACTION
                 MOVE 'Y'              TO EGBC0-LAST-ACTION-S
                 MOVE 'N'              TO EGBC0-ACTION-S
                 MOVE EGBB0-TRAN-REF   TO CGBB-TRAN-REF
                 MOVE EGBC0-DESCR      TO CGBB-DESCR
                 MOVE EGBC0-TXT-GRP    TO CGBB-3-TXT-GRP
                 MOVE 'FGC3'           TO CZAZPUBL-TRF-NEXT-PRG
                 PERFORM LA-INVOKE-COOP
              END-IF
           END-IF

      *--- IF ACTION IS GO TO TRANSACTION ORDER INVOKE FGRA
      *--- IF ACTION IS GO TO TRANSACTION GRN'S INVOKE FGRB
++IF TARGET(POP=Y)
|          IF CZAZSTCK-ACTION = 57
|             IF  EGBB0-ORDR-REF  = SPACES
|             AND EGBB0-ADVC-NOTE = SPACES
|                 MOVE 'Y'                 TO CGBB-LIST-CONTINUE
|                 MOVE '*'                 TO EGBC0-LAST-ACTION
|                 MOVE 'Y'                 TO EGBC0-LAST-ACTION-S
|                 MOVE 'N'                 TO EGBC0-ACTION-S
|                 MOVE EGBB0-ORDR-REF      TO CGBB-ORDR-REF
|                 MOVE EGBB0-ADVC-NOTE     TO CGBB-ADVC-NOTE
|                 MOVE EGBB0-SUPP          TO CGBB-SUPP
|                 MOVE EGBB0-TRAN-REF      TO CGBB-TRAN-REF
|                 MOVE EGBB0-SYSREF        TO CGBB-SYSREF
|
|                 MOVE 'FGRA'              TO CZAZPUBL-TRF-NEXT-PRG
|                 PERFORM LA-INVOKE-COOP
|             ELSE
|                 MOVE 57                  TO CZAZSOFT-EXCL-ACTION
|                 PERFORM SZAZSOFT-EXCLUDE-ACTION
|             END-IF
|          END-IF
|
|     *--- ACTION (58) = GRN'S
|     *--- INVOKE FGRB
|          IF CF-FIRST-ACTION-ROW > 0
|             IF MGBC-ACTION = 58 AND
|                EGBC0-SEL   = 'Y'
|                MOVE 'Y'              TO CGBB-LIST-CONTINUE
|                MOVE '*'              TO EGBC0-LAST-ACTION
|                MOVE 'Y'              TO EGBC0-LAST-ACTION-S
|                MOVE 'N'              TO EGBC0-ACTION-S
|                MOVE EGBB0-ORDR-REF   TO CGBB-ORDR-REF
|                MOVE EGBB0-ADVC-NOTE  TO CGBB-ADVC-NOTE
|                MOVE EGBB0-SUPP       TO CGBB-SUPP
|                MOVE EGBB0-TRAN-REF   TO CGBB-TRAN-REF
|                MOVE EGBB0-SYSREF     TO CGBB-SYSREF
|                MOVE EGBC0-GRN-GRP    TO CGBB-RB-GRN-GRP
|                MOVE EGBC0-DESCR      TO CGBB-DESCR
|                MOVE EGBC0-ITEM       TO CGBB-ITEM
|                MOVE EGBC0P-LOG-ENTRY TO CGBB-RB-TRAN-SEQ-NUM
|                EVALUATE EGBC0-LINE-TYPE-IND
|                   WHEN TDOOLINE-LINE-TYPE-VAL
|                      MOVE 'VALUE   ' TO CGBB-RB-APPL
|                   WHEN OTHER
|                      MOVE 'QUANTITY' TO CGBB-RB-APPL
|                END-EVALUATE
|
|                MOVE 'FGRB'           TO CZAZPUBL-TRF-NEXT-PRG
|                PERFORM LA-INVOKE-COOP
|             END-IF
|          END-IF
|
|     *--- LINE TEXT DISPLAY
|          IF CF-FIRST-ACTION-ROW > 0
|             IF MGBC-ACTION = 59 AND
|                EGBC0-SEL   = 'Y'
|                MOVE MGBC-ACTION   TO CGBB-C-LAST-ACTION
|                MOVE ZERO          TO MGBC-ACTION
|                                      EGBC0-ACTION
|                MOVE 'N'           TO MGBC-ACTION-S
|                                      EGBC0-ACTION-S
|     *---       READ TDOORDER
|                MOVE CGBB-CMPY        TO TDOOLINE-CMPY
|                MOVE TDOOLINE-DOC-ORDR
|                                      TO TDOOLINE-DOC-IND
|                MOVE EGBC0-ORDR-REF   TO TDOOLINE-ORDR-REF
|                MOVE EGBC0-ORDR-LINE-NUM
|                                      TO TDOOLINE-LINE-NUM
|                PERFORM SQL-SELECT-TDOOLINE-9
|
|                IF TDOOLINE-TXT-NUM NOT = ZERO
|                   INITIALIZE CPX5
|                   COMPUTE CPX5-LENGTH = LENGTH OF CPX5
|                                       - LENGTH OF CPX5-LENGTH
|                   INITIALIZE CPM3
|                   MOVE CGBB-CMPY     TO CPM3-CMPY
|                   MOVE TDOOLINE-TXT-NUM
|                                      TO CPM3-ORDR-TXT-NUM
|                   MOVE CPM3-FUNC-INVC
|                                      TO CPM3-FUNC-IND
|                   EXEC QSP CALL GRN_GET_TRGT_TXT
|                        CPM3
|                   END-EXEC
|                   MOVE CPM3-TRGT  TO CPX5-DOC-TRGT
|
|                   IF CPM3-TXT-IND  = CPM3-TXT-TRGT
|                   OR (CPM3-TXT-IND  = CPM3-TXT-ORDR
|                   AND TPACNTRL-TRGT-TXT-FLAG = 'Y')
|                      MOVE CGBB-CMPY  TO CPX5-CMPY
|                      MOVE TDOORDER-DOC-ORDR
|                                      TO CPX5-DOC-IND
|                      MOVE SPACES     TO CPX5-DOC-DESC
|                      MOVE EGBC0-ORDR-REF
|                                      TO CPX5-DOC-REF
|                      MOVE ZERO       TO CPX5-DOC-REVN
|                      MOVE EGBC0-ORDR-LINE-NUM
|                                      TO CPX5-DOC-LINE
|                      IF TPACNTRL-TRGT-TXT-FLAG = 'Y'
|                         MOVE SPACES  TO CPX5-DOC-TRGT
|                         MOVE CPX5-TRGT-TXT-INVCE
|                                      TO CPX5-TRGT-TXT-IND
|                      ELSE
|                         MOVE CPX5-TRGT-TXT-NO
|                                      TO CPX5-TRGT-TXT-IND
|                      END-IF
|                      PERFORM INVOKE-DOWN-FPX5
|                   ELSE
|                      MOVE 'I'        TO CZAZSOFT-MSG-TYPE
|                      MOVE 'GBC41'    TO CZAZSOFT-MSG
|                      PERFORM SZAZSOFT-SCREEN-LEVEL-MESS
|                   END-IF
|                ELSE
|                   MOVE 'I'           TO CZAZSOFT-MSG-TYPE
|                   MOVE 'GBC41'       TO CZAZSOFT-MSG
|                   PERFORM SZAZSOFT-SCREEN-LEVEL-MESS
|                END-IF
|             END-IF
|          END-IF
|
++END-IF

      *--- Invoke User Data Screen
           if CZAZSTCK-ACTION = 41
              IF CGBB-C-USR-DATA-EXISTS = 'Y'
                 INITIALIZE CAUL
                 COMPUTE CAUL-LENGTH = LENGTH OF CAUL - CAUL-LENGTH
261788           IF CGBB-INTENT = WZAZLITS-EDIT-VIEW
261788              MOVE WZAZLITS-EDIT-VIEW
261788                                  TO CAUL-INTENT
261788           ELSE
                    MOVE WZAZLITS-EDIT-AMEND
                                        TO CAUL-INTENT
261788           END-IF
                 MOVE 'G1'              TO CAUL-UAD-TYPE
                 MOVE CGBB-CMPY         TO CAUL-KEY-CMPY
                 MOVE MGBC-SUPP         TO CAUL-MASK(1)

                 MOVE CGBB-TRAN-TYPE    TO CAUL-MASK(2)
                 MOVE MGBC-TRAN-STYPE   TO CAUL-MASK(3)
                 MOVE MGBC-TRAN-REF     TO CAUL-MASK(4)

                 IF CGBB-INTENT = WZAZLITS-EDIT-INSERT
                 OR CGBB-INTENT = WZAZLITS-EDIT-COPY
                    MOVE CGBB-EWS-INSTANCE
                                        TO CAUL-KEY-INT-1
261788           ELSE
261788              MOVE MGBC-SUPP      TO CAUL-KEY-12
261788              MOVE MGBC-ENTRY-DATE
261788                                  TO CAUL-KEY-DATE
261788              MOVE EGBB0-SYSREF   TO CAUL-KEY-INT
                 END-IF
                 PERFORM INVOKE-DOWN-FAUL
              ELSE
                 INITIALIZE CAUL
                 COMPUTE CAUL-LENGTH = LENGTH OF CAUL - CAUL-LENGTH
                 MOVE WZAZLITS-EDIT-INSERT
                                       TO CAUL-INTENT
                 MOVE 'G1'             TO CAUL-UAD-TYPE
                 MOVE CGBB-CMPY        TO CAUL-KEY-CMPY
                 MOVE MGBC-SUPP        TO CAUL-KEY-12
                                          CAUL-MASK(1)
                 MOVE MGBC-ENTRY-DATE  TO CAUL-KEY-DATE
                 MOVE EGBB0-SYSREF     TO CAUL-KEY-INT

                 MOVE CGBB-TRAN-TYPE   TO CAUL-MASK(2)
                 MOVE MGBC-TRAN-STYPE  TO CAUL-MASK(3)
                 MOVE MGBC-TRAN-REF    TO CAUL-MASK(4)

261788*          MOVE CGBB-EWS-INSTANCE
261788*                                TO CAUL-KEY-INT-1
                 PERFORM INVOKE-DOWN-FAUL
              END-IF
           END-IF

      *--- Invoke Line User Data Screen
           IF CF-FIRST-ACTION-ROW > 0
              IF MGBC-ACTION = 42
                 IF CGBB-INTENT = WZAZLITS-EDIT-INSERT
                 OR CGBB-INTENT = WZAZLITS-EDIT-COPY
                    MOVE CGBB-CMPY     TO TAUADATA-KEY-CMPY
                    MOVE CGBB-EWS-INSTANCE
                                       TO TAUADATA-KEY-INT-1
                    MOVE EGBC0R-ESN-ENTRY
                                       TO TAUADATA-KEY-SMALL
                    MOVE 'N'           TO HV-ROW-EXISTS
                    PERFORM SQL-SELECT-TAUADATA-L-N
                 ELSE
                    MOVE CGBB-CMPY     TO TAUADATA-KEY-CMPY
                    MOVE MGBC-SUPP     TO TAUADATA-KEY-12
                    IF MGBC-ENTRY-DATE > WZAZLITS-MIN-DATE
                       MOVE MGBC-ENTRY-DATE
                                       TO TAUADATA-KEY-DATE
                    ELSE
                       MOVE WZAZLITS-MIN-DATE
                                       TO TAUADATA-KEY-DATE
                    END-IF
                    MOVE EGBB0-SYSREF  TO TAUADATA-KEY-INT
261788*             MOVE CGBB-C-MAP-LINE
261788              MOVE EGBC0-DETL-SEQ-NUM
                                       TO TAUADATA-KEY-SMALL

                    MOVE 'N'           TO HV-ROW-EXISTS
                    PERFORM SQL-SELECT-TAUADATA-L
                 END-IF
                 IF HV-ROW-EXISTS = 'Y'
                    MOVE 'Y'           TO WS-USR-DATA-EXISTS
                 ELSE
                    MOVE SPACE         TO WS-USR-DATA-EXISTS
                 END-IF

                 IF WS-USR-DATA-EXISTS = 'Y'
                    INITIALIZE CAUL
                    COMPUTE CAUL-LENGTH = LENGTH OF CAUL - CAUL-LENGTH
261788              IF CGBB-INTENT = WZAZLITS-EDIT-VIEW
261788                 MOVE WZAZLITS-EDIT-VIEW
261788                                  TO CAUL-INTENT
261788              ELSE
                       MOVE WZAZLITS-EDIT-AMEND
                                        TO CAUL-INTENT
261788              END-IF
                    MOVE 'G2'           TO CAUL-UAD-TYPE
                    MOVE CGBB-CMPY      TO CAUL-KEY-CMPY
261788              MOVE MGBC-SUPP      TO CAUL-MASK(1)

                    MOVE CGBB-TRAN-TYPE TO CAUL-MASK(2)
                    MOVE MGBC-TRAN-STYPE
                                        TO CAUL-MASK(3)
                    MOVE MGBC-TRAN-REF  TO CAUL-MASK(4)
                    MOVE MGBC-DESCR     TO CAUL-MASK(5)
                    MOVE MGBC-DETL-ORDR-REF
                                        TO CAUL-MASK(6)

                    IF CGBB-INTENT = WZAZLITS-EDIT-INSERT
                    OR CGBB-INTENT = WZAZLITS-EDIT-COPY
                       MOVE CGBB-EWS-INSTANCE
                                        TO CAUL-KEY-INT-1
                       MOVE EGBC0R-ESN-ENTRY
                                        TO CAUL-KEY-SMALL
                    ELSE
                       MOVE MGBC-SUPP   TO CAUL-KEY-12
                       MOVE MGBC-ENTRY-DATE
                                        TO CAUL-KEY-DATE
                       MOVE MGBC-SYSREF TO CAUL-KEY-INT
261788*                MOVE CGBB-C-MAP-LINE
261788                 MOVE EGBC0-DETL-SEQ-NUM
                                        TO CAUL-KEY-SMALL
                    END-IF
                    PERFORM INVOKE-DOWN-FAUL
                 ELSE
                    INITIALIZE CAUL
                    COMPUTE CAUL-LENGTH = LENGTH OF CAUL - CAUL-LENGTH
                    MOVE WZAZLITS-EDIT-INSERT
                                       TO CAUL-INTENT
                    MOVE 'G2'          TO CAUL-UAD-TYPE
                    MOVE CGBB-CMPY     TO CAUL-KEY-CMPY
261788*             MOVE MGBC-SUPP     TO CAUL-KEY-12
261788              MOVE MGBC-SUPP     TO CAUL-MASK(1)
261788*             MOVE MGBC-ENTRY-DATE
261788*                                TO CAUL-KEY-DATE
261788*             MOVE EGBB0-SYSREF  TO CAUL-KEY-INT

                    MOVE CGBB-TRAN-TYPE
                                       TO CAUL-MASK(2)
                    MOVE MGBC-TRAN-STYPE
                                       TO CAUL-MASK(3)
                    MOVE MGBC-TRAN-REF TO CAUL-MASK(4)
                    MOVE MGBC-DESCR    TO CAUL-MASK(5)
                    MOVE MGBC-DETL-ORDR-REF
                                       TO CAUL-MASK(6)

261788*             MOVE CGBB-EWS-INSTANCE
261788*                                TO CAUL-KEY-INT-1
261788*             MOVE EGBC0R-ESN-ENTRY
261788*                                TO CAUL-KEY-SMALL
261788*
261788              IF CGBB-INTENT = WZAZLITS-EDIT-INSERT
261788              OR CGBB-INTENT = WZAZLITS-EDIT-COPY
261788                 MOVE CGBB-EWS-INSTANCE
261788                                  TO CAUL-KEY-INT-1
261788                 MOVE EGBC0R-ESN-ENTRY
261788                                  TO CAUL-KEY-SMALL
261788              ELSE
261788                 MOVE MGBC-SUPP   TO CAUL-KEY-12
261788                 MOVE MGBC-ENTRY-DATE
261788                                  TO CAUL-KEY-DATE
261788                 MOVE MGBC-SYSREF TO CAUL-KEY-INT
261788                 MOVE EGBC0-DETL-SEQ-NUM
261788                                  TO CAUL-KEY-SMALL
261788              END-IF
261788*
                    PERFORM INVOKE-DOWN-FAUL
                 END-IF
              END-IF
           END-IF

++IF TARGET(POP=Y)
|
++EXIT FPX5-RETURN TYPE=ONLY
|
|          IF CGBB-C-LAST-ACTION = 59
|             MOVE ZERO             TO MGBC-ACTION
|                                      EGBC0-ACTION
|             MOVE 'N'              TO MGBC-ACTION-S
|                                      EGBC0-ACTION-S
|          END-IF
|
|
++END-IF
++EXIT MGBC-CHECK-ROW-EMPTY TYPE=PRIOR

           MOVE MGBC-GL-ACCT-HEAD-S    TO WS-ST-GL-ACCT-HEAD-S
           MOVE MGBC-GL-ANAL-HEAD-S    TO WS-ST-GL-ANAL-HEAD-S
           MOVE MGBC-PROJ-HEAD-S       TO WS-ST-PROJ-HEAD-S
           MOVE 'N'                    TO MGBC-GL-ANAL-HEAD-S
           MOVE 'N'                    TO MGBC-GL-ACCT-HEAD-S
           MOVE 'N'                    TO MGBC-PROJ-HEAD-S

++EXIT MGBC-CHECK-ROW-EMPTY TYPE=POST

           MOVE WS-ST-GL-ACCT-HEAD-S   TO MGBC-GL-ACCT-HEAD-S
           MOVE WS-ST-GL-ANAL-HEAD-S   TO MGBC-GL-ANAL-HEAD-S
           MOVE WS-ST-PROJ-HEAD-S      TO MGBC-PROJ-HEAD-S

++EXIT MGBC-LOAD-HDR TYPE=POST

           IF MGBC-SUPP-S = 'N'
              MOVE 'N'                 TO MGBC-SUPP-NAME-S
                                          MGBC-SUPP-ADDR-S (1)
                                          MGBC-SUPP-ADDR-S (2)
              PERFORM CLEAR-SUPP-FIELDS
           END-IF

           IF MGBC-TRAN-STYPE-S = 'N'
              MOVE 'N'                 TO MGBC-STYPE-DESCR-S
           END-IF

           MOVE EGBB0-PER-S            TO MGBC-PER-S
           MOVE EGBB0-YY-S             TO MGBC-YY-S
           MOVE EGBB0-EXCH-RATE-S      TO MGBC-EXCH-RATE-S
           MOVE EGBB0-INV-GROSS-AMT-S  TO MGBC-INV-GROSS-AMT-S
           MOVE EGBB0-INV-TAX-AMT-S    TO MGBC-INV-TAX-AMT-S
           MOVE EGBB0-DSCNT-AMT-S      TO MGBC-DSCNT-AMT-S
           MOVE EGBB0-DSCNT-PERC-S     TO MGBC-DSCNT-PERC-S
           MOVE EGBB0-DSCNT-TERM-1-S   TO MGBC-DSCNT-TERM-1-S
           MOVE EGBB0-DSCNT-TERM-2-S   TO MGBC-DSCNT-TERM-2-S
           MOVE EGBB0-DSCNT-TERM-3-S   TO MGBC-DSCNT-TERM-3-S
           MOVE EGBB0-STLMNT-S         TO MGBC-STLMNT-S
           MOVE EGBB0-DETL-GROSS-AMT-S TO MGBC-DETL-GROSS-AMT-TOT-S
           MOVE EGBB0-DETL-TAX-AMT-S   TO MGBC-DETL-TAX-AMT-TOT-S
           MOVE EGBB0-INV-VAT-NON-REC-S
                                       TO MGBC-INV-VAT-NON-REC-S
           MOVE EGBB0-INV-VAT-REC-S    TO MGBC-INV-VAT-REC-S
           MOVE EGBB0-RECUR-OCCUR-S    TO MGBC-RECUR-OCCUR-S
           MOVE EGBB0-PRPYMNT-OCCUR-S  TO MGBC-PRPYMNT-OCCUR-S
           MOVE EGBB0-PRPYMNT-STRT-PER-S
                                       TO MGBC-PRPYMNT-STRT-PER-S
           MOVE EGBB0-PRPYMNT-STRT-YY-S
                                       TO MGBC-PRPYMNT-STRT-YY-S
           MOVE EGBB0-SLFASSD-TAX-AMT-S
                                       TO MGBC-SLFASSD-TAX-AMT-S
           MOVE EGBB0-SNGL-CHQ-FLAG-S  TO MGBC-SNGL-CHQ-FLAG-S
++IF TARGET(POP=Y)
|          MOVE EGBB0-ORDR-REF-S       TO MGBC-ORDR-REF-S
|          MOVE EGBB0-SEL-ALL-S        TO MGBC-SEL-ALL-S
|          MOVE EGBB0-SEL-AUTO-S       TO MGBC-SEL-AUTO-S
|          MOVE EGBB0-TEXT-MNEM-S      TO MGBC-TEXT-MNEM-S
|          MOVE EGBB0-ALT-INVCE-SUPP-S TO MGBC-ALT-INVCE-SUPP-S
++END-IF

           PERFORM VARYING CF-SUB
                   FROM 1 BY 1
                   UNTIL CF-SUB > R-EGBB0-USR-NUMERIC
              MOVE EGBB0-USR-NUMERIC-S (CF-SUB)
                TO MGBC-HDR-USR-NUMERIC-S (CF-SUB)
           END-PERFORM

++EXIT MGBC-ROW-COMPARE-SRC TYPE=POST

           IF  MGBC-LINE-TOT-AMT-S NOT = EGBC0-LINE-TOT-AMT-S
           OR (MGBC-LINE-TOT-AMT-S     = 'Y'
           AND MGBC-LINE-TOT-AMT NOT   = EGBC0-LINE-TOT-AMT)
              ADD +1                   TO CF-CHANGES-MADE
           END-IF

           IF  MGBC-LINE-TAX-AMT-S NOT = EGBC0-LINE-TAX-AMT-S
           OR (MGBC-LINE-TAX-AMT-S     = 'Y'
           AND MGBC-LINE-TAX-AMT NOT   = EGBC0-LINE-TAX-AMT)
              ADD +1                   TO CF-CHANGES-MADE
           END-IF

           IF  MGBC-LINE-SLFASSD-AMT-S NOT = EGBC0-LINE-SLFASSD-AMT-S
           OR (MGBC-LINE-SLFASSD-AMT-S     = 'Y'
           AND MGBC-LINE-SLFASSD-AMT   NOT = EGBC0-LINE-SLFASSD-AMT)
              ADD +1                   TO CF-CHANGES-MADE
           END-IF

++EXIT MGBC-ROW-TO-SRC TYPE=POST

           MOVE MGBC-LINE-TYPE-IND     TO EGBC0-LINE-TYPE-IND
           MOVE MGBC-LINE-TYPE-IND-S   TO EGBC0-LINE-TYPE-IND-S
           MOVE MGBC-LINE-TOT-AMT      TO EGBC0-LINE-TOT-AMT
           MOVE MGBC-LINE-TOT-AMT-S    TO EGBC0-LINE-TOT-AMT-S
           MOVE MGBC-LINE-TAX-AMT      TO EGBC0-LINE-TAX-AMT
           MOVE MGBC-LINE-TAX-AMT-S    TO EGBC0-LINE-TAX-AMT-S
           MOVE MGBC-LINE-SLFASSD-AMT  TO EGBC0-LINE-SLFASSD-AMT
           MOVE MGBC-LINE-SLFASSD-AMT-S
                                       TO EGBC0-LINE-SLFASSD-AMT-S
           MOVE MGBC-DETL-TAX-DATE     TO EGBC0-TAX-DATE
           MOVE MGBC-DETL-TAX-DATE-S   TO EGBC0-TAX-DATE-S

++EXIT MGBC-ROW-PROTECTION TYPE=POST
      *--- PROTECT SERVICE LEDGER FIELD
      *--- WHEN NOT SWITCHED ON FOR THIS COMPANY

           IF TGACNTRL-SRVC-LEDGR NOT = 'Y'

              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-SRVC-CODE-F    TO CZAZSOFT-FIELD
              MOVE CGBB-C-MAP-LINE     TO CZAZSOFT-ROW
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-SRVC-CHRG-TYPE-F
                                       TO CZAZSOFT-FIELD
              MOVE CGBB-C-MAP-LINE     TO CZAZSOFT-ROW
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-SRVC-REF-F     TO CZAZSOFT-FIELD
              MOVE CGBB-C-MAP-LINE     TO CZAZSOFT-ROW
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-SRVC-FROM-DATE-F
                                       TO CZAZSOFT-FIELD
              MOVE CGBB-C-MAP-LINE     TO CZAZSOFT-ROW
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-SRVC-TO-DATE-F TO CZAZSOFT-FIELD
              MOVE CGBB-C-MAP-LINE     TO CZAZSOFT-ROW
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-SRVC-PREV-METER-F
                                       TO CZAZSOFT-FIELD
              MOVE CGBB-C-MAP-LINE     TO CZAZSOFT-ROW
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-SRVC-CURNT-METER-F
                                       TO CZAZSOFT-FIELD
              MOVE CGBB-C-MAP-LINE     TO CZAZSOFT-ROW
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-SRVC-METER-REF-F
                                       TO CZAZSOFT-FIELD
              MOVE CGBB-C-MAP-LINE     TO CZAZSOFT-ROW
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-SRVC-PREV-BL-TYPE-F
                                       TO CZAZSOFT-FIELD
              MOVE CGBB-C-MAP-LINE     TO CZAZSOFT-ROW
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-SRVC-CURNT-BL-TYPE-F
                                       TO CZAZSOFT-FIELD
              MOVE CGBB-C-MAP-LINE     TO CZAZSOFT-ROW
              PERFORM SZAZSOFT-SET-APPL

           END-IF

      *--- PROTECT ANALYSIS CODE FIELD WHEN ANALYSIS CODES NOT ALLOWED
      *--- FOR THIS COMPANY
           IF WAZCMPYD-ANAL-CODE-SIZE (1) = ZERO
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-GL-ANAL-F      TO CZAZSOFT-FIELD
              MOVE CGBB-C-MAP-LINE     TO CZAZSOFT-ROW
              PERFORM SZAZSOFT-SET-APPL
           END-IF

      *--- PROTECT GL COMPANY WHEN NOT MULTI GL
           IF TPACNTRL-GL-RLTN-IND NOT = TPACNTRL-MULTI
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-GL-CMPY-F      TO CZAZSOFT-FIELD
              MOVE CGBB-C-MAP-LINE     TO CZAZSOFT-ROW
              PERFORM SZAZSOFT-SET-APPL
           END-IF

      *--- WHEN ENTERING A DEBIT NOTE, OR TAX NOT ENTERED ON DETAIL LINE
      *--- PROTECT TAX CODE
           IF TGACNTRL-DETL-TAX-FLAG NOT = 'Y'
           OR (CGBB-TRAN-TYPE            = WGZZCNTL-TYPE-DRN
           AND TGACNTRL-TAX-DRN-IND      = TGACNTRL-TDRN-NONE)
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-DETL-TAX-CODE-F
                                       TO CZAZSOFT-FIELD
              MOVE CGBB-C-MAP-LINE     TO CZAZSOFT-ROW
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-DETL-TAX-TYPE-F
                                       TO CZAZSOFT-FIELD
              MOVE CGBB-C-MAP-LINE     TO CZAZSOFT-ROW
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-DETL-LOCTN-F   TO CZAZSOFT-FIELD
              MOVE CGBB-C-MAP-LINE     TO CZAZSOFT-ROW
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
              MOVE MGBC-DETL-HAND-F    TO CZAZSOFT-FIELD
              MOVE CGBB-C-MAP-LINE     TO CZAZSOFT-ROW
              PERFORM SZAZSOFT-SET-APPL
           END-IF

      *--- WHEN ORDER REF AND ADVICE NOTE NOT ENTERED ON THE
      *--- HEADER PROTECT ORDER RELATED DETAIL FIELDS
++IF TARGET(POP=Y)
|             IF  MGBC-ORDR-REF-S  NOT = 'Y'
|             AND MGBC-ADVC-NOTE-S NOT = 'Y'
|             AND EGRA0R-NENTRIES      = ZERO
|                 MOVE 'Y'             TO CZAZSOFT-PROTECT-IND
|                 MOVE MGBC-DETL-ORDR-REF-F
|                                      TO CZAZSOFT-FIELD
|                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
|                 PERFORM SZAZSOFT-SET-APPL
|                 MOVE 'Y'             TO CZAZSOFT-PROTECT-IND
|                 MOVE MGBC-SEL-F      TO CZAZSOFT-FIELD
|                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
|                 PERFORM SZAZSOFT-SET-APPL
|             END-IF
|
|     *--- PROTECT FIELDS ON DETAIL LINE
|             MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
|             MOVE MGBC-ORDR-LINE-NUM-F
|                                      TO CZAZSOFT-FIELD
|             MOVE CGBB-C-MAP-LINE     TO CZAZSOFT-ROW
|             PERFORM SZAZSOFT-SET-APPL
|             MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
|             MOVE MGBC-QTY-REC-F      TO CZAZSOFT-FIELD
|             MOVE CGBB-C-MAP-LINE     TO CZAZSOFT-ROW
|             PERFORM SZAZSOFT-SET-APPL
|             MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
|             MOVE MGBC-ORDR-PRC-F     TO CZAZSOFT-FIELD
|             MOVE CGBB-C-MAP-LINE     TO CZAZSOFT-ROW
|             PERFORM SZAZSOFT-SET-APPL
|
|     *--- PROTECT FIELDS ON DETAIL LINE IF ORDER RELATED
|     *--- AND NOT A MISCELLANEOUS LINE
|
|             IF  MGBC-ORDR-LINE-NUM > ZEROS
|                 MOVE 'Y'             TO CZAZSOFT-PROTECT-IND
|                 MOVE MGBC-DETL-ORDR-REF-F
|                                      TO CZAZSOFT-FIELD
|                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
|                 PERFORM SZAZSOFT-SET-APPL
|                 MOVE 'Y'             TO CZAZSOFT-PROTECT-IND
|
|     *---        Protect Item Code for order-related lines
|                 MOVE MGBC-ITEM-F     TO CZAZSOFT-FIELD
|                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
|                 PERFORM SZAZSOFT-SET-APPL
|                 MOVE 'Y'             TO CZAZSOFT-PROTECT-IND
|                 MOVE MGBC-ORDR-LINE-NUM-F
|                                      TO CZAZSOFT-FIELD
|                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
|                 PERFORM SZAZSOFT-SET-APPL
|                 MOVE 'Y'             TO CZAZSOFT-PROTECT-IND
|                 MOVE MGBC-QTY-REC-F  TO CZAZSOFT-FIELD
|                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
|                 PERFORM SZAZSOFT-SET-APPL
|                 MOVE 'Y'             TO CZAZSOFT-PROTECT-IND
|                 MOVE MGBC-ORDR-PRC-F TO CZAZSOFT-FIELD
|                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
|                 PERFORM SZAZSOFT-SET-APPL
|     *           MOVE 'Y'             TO CZAZSOFT-PROTECT-IND
|     *           MOVE MGBC-SEL-F      TO CZAZSOFT-FIELD
|     *           MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
|     *           PERFORM SZAZSOFT-SET-APPL
|                 MOVE 'Y'             TO CZAZSOFT-PROTECT-IND
|                 MOVE MGBC-GL-ACCT-F  TO CZAZSOFT-FIELD
|                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
|                 PERFORM SZAZSOFT-SET-APPL
|                 MOVE 'Y'             TO CZAZSOFT-PROTECT-IND
|                 MOVE MGBC-GL-ANAL-F  TO CZAZSOFT-FIELD
|                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
|                 PERFORM SZAZSOFT-SET-APPL
|                 MOVE 'Y'             TO CZAZSOFT-PROTECT-IND
|                 MOVE MGBC-SA-TYPE-F  TO CZAZSOFT-FIELD
|                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
|                 PERFORM SZAZSOFT-SET-APPL
|                 MOVE 'Y'             TO CZAZSOFT-PROTECT-IND
|                 MOVE MGBC-QUOM-F     TO CZAZSOFT-FIELD
|                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
|                 PERFORM SZAZSOFT-SET-APPL
|             END-IF
|
|          IF MGBC-LINE-TYPE-IND = '2'
|             MOVE 'Y'                 TO CZAZSOFT-PROTECT-IND
|             MOVE MGBC-QTY-INVCD-F    TO CZAZSOFT-FIELD
|             MOVE CGBB-C-MAP-LINE     TO CZAZSOFT-ROW
|             PERFORM SZAZSOFT-SET-APPL
|          END-IF
|
++END-IF

++EXIT M-HANDLE-UP TYPE=ONLY

      *--- Handle return from prompt on Payment Address Number

           IF  CZAZSTCK-ACTION = WZAZLITS-PROMPT
           AND CZAZSTCK-PREV-PRG = 'FPBG'
           AND CZAZSTCK-FLDNO = MGBC-PYMNT-ADDR-F
              MOVE CZAZSTCK-FLDNO      TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-QUERY-FIELD
              IF CZAZSOFT-PROTECTED = 'Y'
                 CONTINUE
              ELSE
                 PERFORM RETURN-PROMPT-FPBG
              END-IF
           END-IF

           IF  CZAZSTCK-ACTION = WZAZLITS-PROMPT
           AND CZAZSTCK-PREV-PRG = 'FAKY'
           AND CZAZSTCK-FLDNO = MGBC-BANK-CNTRY-F
              MOVE CZAZSTCK-FLDNO      TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-QUERY-FIELD
              IF CZAZSOFT-PROTECTED = 'Y'
                 CONTINUE
              ELSE
                 PERFORM RETURN-PROMPT-FAKY
              END-IF
           END-IF

++EXIT NA-COOP-ENTRY TYPE=PRIOR

           IF  (CZAZSTCK-PREV-PRG = 'FGBD'
           OR   CZAZSTCK-PREV-PRG = 'FGC3')
           AND (CGBB-COOP-REQUEST = WZAZLITS-UPDATE
                                 OR WZAZLITS-ACCEPT-WARNINGS
                                 OR 70)
               IF CGBB-COOP-REQUEST = WZAZLITS-ACCEPT-WARNINGS
                  MOVE WZAZLITS-UPDATE TO CZAZSTCK-ACTION
                                          CF-SAVED-ACTION
               ELSE
                  MOVE CGBB-COOP-REQUEST
                                       TO CZAZSTCK-ACTION
                                          CF-SAVED-ACTION
               END-IF
           END-IF

      *--- WHEN WE HAVE COME BACK FROM SPLIT ANALYSIS, UPDATE LINE EWS
      *--- WITH SPLIT ANALYSIS VALUE AND QUANTITY AND RESTORE THE
      *--- SAVED ERROR COUNT TO THE CORRECT FIELD
           IF CZAZSTCK-PREV-PRG = 'FGBD'
              MOVE CGBB-C-SAVED-ERROR-COUNT
                                       TO CGBB-C-ERROR-COUNT
              MOVE CGBB-D-TRAN-SEQ-NUM TO EGBC0P-LOG-ENTRY
              PERFORM EGBC0-GET
              MOVE CGBB-D-TOT-VAL      TO EGBC0-SA-VALUE
              MOVE CGBB-D-TOT-QTY      TO EGBC0-SA-QTY
              IF CGBB-D-EWS-CHANGED = 'Y'
                 IF EGBB0-AUTH-LVL  = '1'
                    MOVE 0             TO EGBB0-GO6-GRP
                                          EGBB0-GO7-GRP
                                          EGBB0-MIN-AUTH
                                          EGBB0-RECALC-MIN-AUTH
                                          EGBB0-ACT-AUTH
                    MOVE SPACES        TO EGBB0-QRY-AUTH
                 ELSE
                    IF EGBB0-AUTH-LVL = '2'
                       MOVE 0          TO EGBC0-GO7-GRP
                                          EGBC0-MIN-AUTH
                                          EGBC0-RECALC-MIN-AUTH
                                          EGBC0-ACT-AUTH
                       MOVE SPACES     TO EGBC0-QRY-AUTH
                                          EGBC0-AUTH-GRP
                                          EGBC0-AUTH-CNTRL
                    END-IF
                 END-IF
              END-IF
              MOVE SPACES              TO EGBC0-MCA
           END-IF

++IF TARGET(POP=Y)
|          IF CZAZSTCK-PREV-PRG = 'FGRA'
|             MOVE CGBB-B-SUPP-TRM-DFLT-FLAG
|                                      TO EGBB0-SUPP-TRM-DFLT-FLAG
|          END-IF
|
|          IF  CZAZSTCK-PREV-PRG = 'FGRA'
|          AND (CGBB-COOP-REQUEST = WZAZLITS-UPDATE
|                                OR WZAZLITS-ACCEPT-WARNINGS
|                                OR 70)
|              IF CGBB-COOP-REQUEST = WZAZLITS-ACCEPT-WARNINGS
|                 MOVE WZAZLITS-UPDATE TO CZAZSTCK-ACTION
|                                         CF-SAVED-ACTION
|              ELSE
|                 MOVE CGBB-COOP-REQUEST
|                                      TO CZAZSTCK-ACTION
|                                         CF-SAVED-ACTION
|              END-IF
|          END-IF
|
|     *--- WHEN WE HAVE COME BACK FROM TRANSACTION GRN, UPDATE LINE EWS
|     *--- WITH GRN VALUE AND QUANTITY AND RESTORE THE
|     *--- SAVED ERROR COUNT TO THE CORRECT FIELD
|          IF CZAZSTCK-PREV-PRG = 'FGRB'
|          AND (CGBB-COOP-REQUEST = WZAZLITS-UPDATE
|                                OR 70)
|             MOVE CGBB-RB-TRAN-SEQ-NUM
|                                      TO EGBC0P-LOG-ENTRY
|             PERFORM EGBC0-GET
|
|             PERFORM S2-DECREMENT-TOTALS
|
|             IF CGBB-RB-APPL = 'VALUE   '
|                MOVE CGBB-RB-TOT-VAL-MTCH
|                                      TO EGBC0-GRN-VAL
|                                         EGBC0-ITEM-PRC
|                                         EGBC0-ORDR-PRC
|                                         EGBC0-LINE-TOT-AMT
                 MOVE 'Y'              TO EGBC0-ORDR-PRC-S
|             ELSE
|                MOVE CGBB-RB-TOT-QTY-MTCH
|                                      TO EGBC0-QTY-REC
|                                         EGBC0-QTY-INVCD
|                IF EGBC0-QTY-REC = ZEROES
|                   MOVE 'N'           TO EGBC0-QTY-REC-S
|                                         EGBC0-QTY-INVCD-S
|                ELSE
|                   MOVE 'Y'           TO EGBC0-QTY-REC-S
|                                         EGBC0-QTY-INVCD-S
|                END-IF
|             END-IF
|
|             INITIALIZE CGRM
|
|             MOVE CGRM-UPDATE-D       TO CGRM-FUNC
|
|             MOVE CGBB-CMPY           TO CGRM-CMPY
|             MOVE CGBB-TRAN-TYPE      TO CGRM-TRAN-TYPE
|             MOVE CGBB-EWS-INSTANCE   TO CGRM-EWS-INSTANCE
|             MOVE CGBB-C-ESN          TO CGRM-C-ESN
|             MOVE CGBB-RA-ESN         TO CGRM-RA-ESN
|             MOVE CGBB-RB-ESN         TO CGRM-RB-ESN
|             MOVE CGBB-C-LOG-ENTRY    TO CGRM-B-LOG-ENTRY
|             MOVE EGBC0P-LOG-ENTRY    TO CGRM-C-LOG-ENTRY
|             MOVE CGBB-RB-TRAN-SEQ-NUM
|                                      TO CGRM-RB-TRAN-SEQ-NUM
|
|             MOVE EGBC0-QTY-INVCD     TO CGRM-C-QTY-INVCD
|             MOVE EGBC0-TAX-RCVBLE-FLAG
|                                      TO CGRM-C-TAX-RCVBLE-FLAG
|             MOVE EGBC0-LINE-TOT-AMT  TO CGRM-C-LINE-TOT-AMT
|             MOVE EGBC0-LINE-TAX-AMT  TO CGRM-C-LINE-TAX-AMT
|             MOVE EGBC0-LINE-TYPE-IND
|                                      TO CGRM-C-LINE-TYPE-IND
|             MOVE EGBC0-SA-VALUE      TO CGRM-C-SA-VALUE
|             MOVE EGBC0-ITEM-PRC      TO CGRM-C-ITEM-PRC
|             MOVE EGBC0-QTY-REC       TO CGRM-C-QTY-REC
|             MOVE EGBC0-SA-GRP        TO CGRM-C-SA-GRP
|             MOVE EGBC0-DSCNT-1       TO CGRM-C-DSCNT-1
|             MOVE EGBC0-DSCNT-2       TO CGRM-C-DSCNT-2
|             MOVE EGBC0-DSCNT-3       TO CGRM-C-DSCNT-3
|             MOVE EGBC0-HAND          TO CGRM-C-HAND
|             MOVE EGBC0-TAX-CODE      TO CGRM-C-TAX-CODE
|             MOVE EGBC0-TAX-TYPE      TO CGRM-C-TAX-TYPE
|             MOVE EGBC0-LOCTN         TO CGRM-C-LOCTN
|
|             MOVE MGBC-CURR           TO CGRM-TRAN-CURR
|             MOVE WAZCMPYD-BASE-CURR  TO CGRM-BASE-CURR
|
|             PERFORM EGBC0-CLOSE
|             PERFORM EGBB0-CLOSE
|
|             EXEC QSP CALL BUILD_EWS_PL_TRAN
|                  CGRM
|             END-EXEC
|
|             PERFORM EGBB0-DEFINE
|             MOVE CGRM-B-LOG-ENTRY    TO EGBB0P-LOG-ENTRY
|             PERFORM EGBB0-GET
|             PERFORM EGBC0-DEFINE
|             MOVE CGRM-C-LOG-ENTRY    TO EGBC0P-LOG-ENTRY
|             PERFORM EGBC0-GET
|
|             PERFORM VARYING CF-SUB
|                     FROM 1 BY 1
|                     UNTIL CF-SUB > CGRM-COUNT
|               MOVE CGRM-ERR (CF-SUB) TO CZAZSOFT-MSG-TYPE
|               MOVE CGRM-MSG  (CF-SUB)
|                                      TO CZAZSOFT-MSG
|               MOVE CGRM-MAND (CF-SUB)
|                                      TO CZAZSOFT-MANDATORY
|               IF CGRM-FLD-NO (CF-SUB) = -2
|                  MOVE MGBC-QTY-INVCD-F
|                                      TO CZAZSOFT-FIELD
|               ELSE
|                  MOVE CGRM-FLD-NO  (CF-SUB)
|                                      TO CZAZSOFT-FIELD
|               END-IF
|
|               MOVE CGRM-SUBTXT  (CF-SUB)
|                                      TO CZAZSOFT-SUBTEXT
|               MOVE CGRM-SUBFIELD-IDX  (CF-SUB)
|                                      TO CZAZSOFT-SUBFIELD-IDX
|
|               IF CGRM-MSG (CF-SUB) = SPACES
|                  CONTINUE
|               ELSE
|                  IF CGRM-ERR (CF-SUB) = 'E'
|                     MOVE 'Y'         TO WS-INVALID-HEADER-FLAG
|                     MOVE MGBC-ORDR-REF-F
|                                      TO CZAZSOFT-FIELD
|                     PERFORM SZAZSOFT-SET-APPL
|                     IF MGBC-ORDR-REF NOT = SPACES
|                        MOVE MGBC-ORDR-REF
|                                      TO CDOZ-ORDR-REF
|                        MOVE CDOZ-FGRND-UNLOCK
|                                      TO CDOZ-FUNC
|                        MOVE CGBB-CMPY
|                                      TO CDOZ-CMPY
|                        MOVE TDOORDER-DOC-ORDR
|                                      TO CDOZ-DOC-IND
|                        MOVE CZAZPUBL-USR
|                                      TO CDOZ-LOCK-USR
|                        MOVE CZAZSTCK-CURR-SESS
|                                      TO CDOZ-LOCK-SESS
|
|                        EXEC QSP CALL ORDR_LOCK_UNLOCK
|                             CDOZ
|                        END-EXEC
|
|                     END-IF
|                     GO TO +++-EXIT
|                  END-IF
|                  MOVE CGBB-C-MAP-LINE
|                                      TO CZAZSOFT-ROW
|                  PERFORM XA-SET-WARNING
|
|                  IF CGRM-MSG (CF-SUB) = 'GBX78' OR 'GBX79'
|                                      OR 'GBX80'
|                     MOVE MGBC-ITEM-PRC-F
|                                      TO CZAZSOFT-FIELD
|                     MOVE CGRM-ERR (CF-SUB)
|                                      TO CZAZSOFT-MSG-TYPE
|                     MOVE CGRM-MSG  (CF-SUB)
|                                      TO CZAZSOFT-MSG
|                     MOVE CGBB-C-MAP-LINE
|                                      TO CZAZSOFT-ROW
|                     PERFORM XA-SET-WARNING
|                  END-IF
|
|               END-IF
|             END-PERFORM
|
|             PERFORM S3-INCREMENT-TOTALS-EWS
|
|          END-IF
|          PERFORM SZAZSOFT-PARM-INIT
|     *--- IF NO INVOICE LINES BUILD FROM AN ORDER OR ADVICE NOTE LIST
|          IF EGBC0R-NENTRIES NOT > ZERO
|             PERFORM EGRA0-DEFINE
|             IF EGRA0R-NENTRIES = ZERO
|                MOVE 0                TO CGBB-RA-PRIM-ITEM
|                MOVE -1               TO CZAZSTCK-CURSOR-ROW
|             ELSE
|               PERFORM VARYING EGRA0P-LOG-ENTRY
|                       FROM    1 BY 1
|                       UNTIL   EGRA0P-LOG-ENTRY   > EGRA0R-NENTRIES
|                       OR      EGRA0-SEL = 'Y'
|                  PERFORM EGRA0-GET
|               END-PERFORM
|               IF EGRA0-SEL = 'Y'
|                  MOVE 'Y'            TO CZAZSOFT-PROTECT-IND
|                  MOVE MGBC-SUPP-F    TO CZAZSOFT-FIELD
|                  PERFORM SZAZSOFT-SET-APPL
|               END-IF
|             END-IF
|             PERFORM EGRA0-CLOSE
|          END-IF
++END-IF

      *--- WHEN WE HAVE COME BACK FROM AUTHORISATIONS, UPDATE THE
      *--- TRANSACTION HEADER EWS WITH AUTHORISATION EWS GROUP NUMBERS
           IF (CZAZSTCK-PREV-PRG = 'FGO7'
           OR  CZAZSTCK-PREV-PRG = 'FGPU')
           AND EGBB0-AUTH-LVL    = '1'
               MOVE CGBB-O-AUTH-CNTRL  TO EGBB0-AUTH-CNTRL
                                          MGBC-AUTH-CNTRL
               MOVE CGBB-O-AUTH-GRP    TO EGBB0-AUTH-GRP
                                          MGBC-AUTH-GRP
               MOVE CGBB-O-SEQ-AUTH-FLAG
                                       TO EGBB0-SEQ-AUTH-FLAG

               IF CGBB-O-AUTH-CNTRL NOT = SPACES
                  MOVE 'Y'             TO MGBC-AUTH-CNTRL-S
               END-IF

               IF CGBB-O-AUTH-GRP   NOT = SPACES
                  MOVE 'Y'             TO MGBC-AUTH-GRP-S
               END-IF

               MOVE CGBB-O-GO6-GRP     TO EGBB0-GO6-GRP
               MOVE CGBB-O-GO7-GRP     TO EGBB0-GO7-GRP
               MOVE CGBB-O-MIN-AUTH    TO EGBB0-MIN-AUTH
               MOVE CGBB-O-RECALC-MIN-AUTH
                                       TO EGBB0-RECALC-MIN-AUTH
               MOVE CGBB-O-ACT-AUTH    TO EGBB0-ACT-AUTH
               MOVE CGBB-O-QRY-AUTH    TO EGBB0-QRY-AUTH
           END-IF

++EXIT NA-COOP-ENTRY TYPE=POST

           IF WS-ERROR-COUNT > 0
              ADD  WS-ERROR-COUNT      TO CGBB-C-ERROR-COUNT
           END-IF

           IF WS-WARNING-COUNT > 0
              ADD  WS-WARNING-COUNT    TO CGBB-C-WARNING-COUNT
           END-IF

           IF  CZAZSTCK-PREV-PRG = 'FGBD'
           AND (CGBB-COOP-REQUEST = WZAZLITS-UPDATE
                                 OR WZAZLITS-ACCEPT-WARNINGS)
               MOVE WZAZLITS-UPDATE    TO CZAZSTCK-ACTION
                                          CF-SAVED-ACTION
               PERFORM P-UPDATE
           END-IF

           IF (CZAZSTCK-PREV-PRG = 'FGBD'
           OR  CZAZSTCK-PREV-PRG = 'FGC3')
           AND CGBB-COOP-REQUEST = 70
               MOVE CGBB-COOP-REQUEST  TO CZAZSTCK-ACTION
                                          CF-SAVED-ACTION
               PERFORM L-INVOKE
           END-IF

++EXIT P-UPDATE TYPE=ONLY
      *-- Is User Data Mandatory and has it been entered
           INITIALIZE CAUM
           COMPUTE CAUM-LENGTH = LENGTH OF CAUM - CAUM-LENGTH
           MOVE 'G1'                   TO CAUM-UAD-TYPE
           MOVE CAUM-MAND              TO CAUM-FUNC
           MOVE CGBB-CMPY              TO CAUM-KEY-CMPY
           MOVE MGBC-SUPP              TO CAUM-KEY-12
                                          CAUM-MASK(1)
           MOVE MGBC-ENTRY-DATE        TO CAUM-KEY-DATE
           MOVE EGBB0-SYSREF           TO CAUM-KEY-INT

           MOVE CGBB-TRAN-TYPE         TO CAUM-MASK(2)
           MOVE MGBC-TRAN-STYPE        TO CAUM-MASK(3)
           MOVE MGBC-TRAN-REF          TO CAUM-MASK(4)

           MOVE CGBB-EWS-INSTANCE      TO CAUM-KEY-INT-1

           EXEC QSP CALL GET_UAD_MAND
              CAUM
           END-EXEC

      *--- Mand-Flag is only set if the Mandatory Control is set
      *--- and no user data exists for the key passed
           IF CAUM-MAND-FLAG = 'Y'
              INITIALIZE CAUL
              COMPUTE CAUL-LENGTH = LENGTH OF CAUL - CAUL-LENGTH
              MOVE WZAZLITS-EDIT-INSERT
                                       TO CAUL-INTENT
              MOVE 'G1'                TO CAUL-UAD-TYPE
              MOVE CGBB-CMPY           TO CAUL-KEY-CMPY
              MOVE MGBC-SUPP           TO CAUL-KEY-12
                                          CAUL-MASK(1)
              MOVE MGBC-ENTRY-DATE     TO CAUL-KEY-DATE
              MOVE EGBB0-SYSREF        TO CAUL-KEY-INT

              MOVE CGBB-TRAN-TYPE      TO CAUL-MASK(2)
              MOVE MGBC-TRAN-STYPE     TO CAUL-MASK(3)
              MOVE MGBC-TRAN-REF       TO CAUL-MASK(4)

              MOVE CGBB-EWS-INSTANCE   TO CAUL-KEY-INT-1
              PERFORM INVOKE-DOWN-FAUL
           END-IF

           MOVE SPACES                 TO WS-PER-YY-DEFAULT

      *--- VALIDATE EACH LINE TO MAKE SURE S/A HAS BEEN ENTERED
           PERFORM VARYING EGBC0P-LOG-ENTRY
                      FROM 1
                        BY 1
                     UNTIL EGBC0P-LOG-ENTRY > EGBC0R-NENTRIES

              PERFORM EGBC0-GET
              IF EGBC0-SA-TYPE-S = 'Y'
              AND EGBC0-SA-TYPE NOT = '0'
                 PERFORM EGBD0-DEFINE
                 PERFORM EGBD0-GET
                 IF EGBD0R-NENTRIES = ZERO
                    MOVE 'E'           TO CZAZSOFT-MSG-TYPE
                    MOVE 'GBC57'       TO CZAZSOFT-MSG
                    PERFORM SZAZSOFT-SCREEN-LEVEL-MESS
                    MOVE '1'           TO CZAZSTCK-LINE-ERROR
                 END-IF
                 PERFORM EGBD0-CLOSE
              END-IF

      *--- if the line is from an Item Kit, then we need to validate
      *--- as the line may not have been viewed online
              MOVE SPACES              TO WS-UPDATE-ERROR
              IF EGBC0-LINE-AMND-IND NOT = SPACES
                 MOVE CZAZSTCK-LINE-ERROR TO WS-LINE-ERROR
                 PERFORM MGBC-LOAD-ROW
                 PERFORM PA-KIT-VALIDATE
                 PERFORM MGBC-ROW-TO-SRC

                 IF WS-UPDATE-ERROR = 'Y'
                    MOVE 'E'           TO CZAZSOFT-MSG-TYPE
                    MOVE 'GBC71'       TO CZAZSOFT-MSG
                    PERFORM SZAZSOFT-SCREEN-LEVEL-MESS
                    MOVE '1'           TO CZAZSTCK-LINE-ERROR
      *--- SIMULATE SCROLL AS IN PF-FIND-EXCEPTION
      *--- NOTE THAT TRF-FLAG IS STILL NORMAL AT THIS STAGE
                    MOVE EGBC0P-LOG-ENTRY TO MGBC-CURNT-ITEM
                    MOVE 'Y'              TO MGBC-CURNT-ITEM-S
                    MOVE 'Y'              TO CF-REFORMAT
                    MOVE 0 TO CZAZSTCK-ACTION
                    PERFORM JD-SCROLL
                    PERFORM G-FORMAT-ROWS
                    PERFORM I-VALIDATE-ROWS
                    GO TO +++-EXIT
                 END-IF
              END-IF

      *--- Are there Service Ledger lines, and if so can we default
      *--- the period and year from the charge from date.
              IF EGBC0-SRVC-CODE NOT = SPACES

                 INITIALIZE CEZ4

                 MOVE CEZ4-VLDTE-DATE  TO CEZ4-FUNC
                 MOVE CEZ4-SRCE-ONL    TO CEZ4-SRCE

                 IF TPACNTRL-GL-RLTN-IND = TPACNTRL-SINGLE
                    MOVE TPACNTRL-GL-HOLDING-CMPY
                                       TO CEZ4-CMPY
                 ELSE
                    MOVE CGBB-CMPY     TO CEZ4-CMPY
                 END-IF

                 MOVE EGBC0-SRVC-FROM-DATE
                                       TO CEZ4-DATE

                 EXEC QSP CALL VLDTE_PER_AND_YEAR
                      CEZ4
                 END-EXEC

                 IF CEZ4-ERR-GEN NOT = CEZ4-OK
                    MOVE CEZ4-ERR-GEN  TO CZAZSOFT-MSG-TYPE
                    MOVE CEZ4-MSG-GEN  TO CZAZSOFT-MSG
                    PERFORM SZAZSOFT-SCREEN-LEVEL-MESS
                    MOVE '1'           TO CZAZSTCK-LINE-ERROR
                 END-IF

                 IF CEZ4-DATE-ERR NOT = CEZ4-OK
                    MOVE CEZ4-DATE-ERR TO CZAZSOFT-MSG-TYPE
                    MOVE CEZ4-DATE-MSG TO CZAZSOFT-MSG
                    PERFORM SZAZSOFT-SCREEN-LEVEL-MESS
                    MOVE '1'           TO CZAZSTCK-LINE-ERROR
                 END-IF

                 IF WS-PER-YY-DEFAULT NOT = 'Y'
                    MOVE CEZ4-PER-O       TO EGBB0-PER
                    MOVE CEZ4-YY-O        TO EGBB0-YY
                    MOVE 'Y'              TO WS-PER-YY-DEFAULT
                 END-IF
              END-IF

      *-- Is Line User Data Mandatory and has it been entered
              INITIALIZE CAUM
              COMPUTE CAUM-LENGTH = LENGTH OF CAUM - CAUM-LENGTH
              MOVE 'G2'                TO CAUM-UAD-TYPE
              MOVE CAUM-MAND           TO CAUM-FUNC
              MOVE CGBB-CMPY           TO CAUM-KEY-CMPY
261788*       MOVE MGBC-SUPP           TO CAUM-KEY-12
261788        MOVE MGBC-SUPP           TO CAUM-MASK(1)
261788*       MOVE MGBC-ENTRY-DATE     TO CAUM-KEY-DATE
261788*       MOVE EGBB0-SYSREF        TO CAUM-KEY-INT

              MOVE CGBB-TRAN-TYPE      TO CAUM-MASK(2)
              MOVE MGBC-TRAN-STYPE     TO CAUM-MASK(3)
              MOVE MGBC-TRAN-REF       TO CAUM-MASK(4)
              MOVE MGBC-DESCR          TO CAUM-MASK(5)
              MOVE MGBC-DETL-ORDR-REF  TO CAUM-MASK(6)

              IF CGBB-INTENT = WZAZLITS-EDIT-INSERT
              OR CGBB-INTENT = WZAZLITS-EDIT-COPY
                 MOVE CGBB-EWS-INSTANCE
                                       TO CAUM-KEY-INT-1
                 MOVE EGBC0R-ESN-ENTRY TO CAUM-KEY-SMALL
              ELSE
261788           MOVE MGBC-SUPP        TO CAUM-KEY-12
261788           MOVE MGBC-ENTRY-DATE  TO CAUM-KEY-DATE
                 MOVE MGBC-SYSREF      TO CAUM-KEY-INT
261788*          MOVE CGBB-C-MAP-LINE  TO CAUM-KEY-SMALL
261788           MOVE EGBC0-DETL-SEQ-NUM
261788                                  TO CAUL-KEY-SMALL
              END-IF

              EXEC QSP CALL GET_UAD_MAND
                 CAUM
              END-EXEC

      *--- Mand-Flag is only set if the Mandatory Control is set
      *--- and no user data exists for the key passed
              IF CAUM-MAND-FLAG = 'Y'
                 MOVE EGBC0P-LOG-ENTRY TO WS-MSG-LINE
                 MOVE WS-MSG-LINE      TO CZAZSOFT-SUBTEXT
                 MOVE 'E'              TO CZAZSOFT-MSG-TYPE
                 MOVE 'GBC56'          TO CZAZSOFT-MSG
                 PERFORM SZAZSOFT-SCREEN-LEVEL-MESS
                 MOVE '1'              TO CZAZSTCK-LINE-ERROR
              END-IF
              MOVE CAUM-DATA-EXISTS    TO MGBC-XUAD-EXISTS
                                          EGBC0-XUAD-EXISTS
              MOVE 'Y'                 TO MGBC-XUAD-EXISTS-S
                                          EGBC0-XUAD-EXISTS-S
           END-PERFORM

           IF CZAZSTCK-LINE-INVALID
              MOVE EGBC0P-LOG-ENTRY TO MGBC-CURNT-ITEM
              MOVE 'Y'              TO MGBC-CURNT-ITEM-S
              MOVE 'Y'              TO CF-REFORMAT
              MOVE 0                TO CZAZSTCK-ACTION
              PERFORM JD-SCROLL
              PERFORM F-FORMAT-FIXED
              PERFORM G-FORMAT-ROWS
              PERFORM H-VALIDATE-FIXED
              PERFORM I-VALIDATE-ROWS
              GO TO +++-EXIT
           END-IF

++EXIT U-VALIDATE-FIXED TYPE=ONLY


           IF CZAZSTCK-WINDOW-4 = 'Y'
              PERFORM UJ-VALIDATE-KIT-CODE
              PERFORM UK-VALIDATE-QUANTITY
           END-IF


      *--- DO NOT VALIDATE WHEN ACTION IS 'DELETE TRANSACTION'
           IF CZAZSTCK-ACTION = 63
           OR CGBB-C-TRANS-INSERT = 'Y'
              MOVE SPACE               TO CGBB-C-TRANS-INSERT
              GO TO +++-EXIT
           END-IF

           IF  MGBC-CRN-INV-REF NOT = EGBB0-CRN-INV-REF
           AND MGBC-CRN-INV-SYSREF  = EGBB0-CRN-INV-SYSREF
               MOVE ZERO               TO MGBC-CRN-INV-SYSREF
           END-IF


      *--- CHECK IF HEADER HAS CHANGED
           MOVE 0                      TO CF-CHANGES-MADE
           PERFORM S4-HDR-COMPARE-SRC
           IF CF-CHANGES-MADE > 0
              PERFORM S5-MOVE-HDR-TO-SRC
              MOVE 'Y'                 TO CGBB-B-EWS-CHANGED
                                          CGBB-C-EWS-CHANGED
                                          CGBB-B-CHANGED
                                          CGBB-BATCH-CHANGED
           END-IF

      *--- WHEN INTENT IS DISABLE, OR BATCH STATUS IS PROCESSED, DO
      *--- NOT VALIDATE
           IF CGBB-INTENT    = WZAZLITS-EDIT-DISABLE
           OR CGBB-BTCH-STAT = '6'
      *--- Get Recoverable and Non Recoverable tax values.
              IF MGBC-SYSREF NOT = ZERO
                 MOVE CGBB-CMPY        TO TGBTRAN-CMPY
                                          TGBCURR-CMPY
                 MOVE MGBC-SUPP        TO TGBTRAN-SUPP
                                          TGBCURR-SUPP
                 MOVE MGBC-ENTRY-DATE  TO TGBTRAN-ENTRY-DATE
                                          TGBCURR-ENTRY-DATE
                 MOVE MGBC-SYSREF      TO TGBTRAN-SYSREF
                                          TGBCURR-SYSREF
                 IF MGBC-CURR = WAZCMPYD-BASE-CURR
                    PERFORM SQL-SELECT-TGBTRAN-1
                    IF SQLCODE = WZAZSQL-NOT-FOUND
                       CONTINUE
                    ELSE
                       MOVE TGBTRAN-VAT-NON-REC-VALUE
                                       TO EGBB0-INV-VAT-NON-REC
                       MOVE 'Y'        TO EGBB0-INV-VAT-NON-REC-S
                       MOVE TGBTRAN-VAT-REC-VALUE
                                       TO EGBB0-INV-VAT-REC
                       MOVE 'Y'        TO EGBB0-INV-VAT-REC-S
                    END-IF
                 ELSE
                    PERFORM SQL-SELECT-TGBCURR-1
                    IF SQLCODE = WZAZSQL-NOT-FOUND
                       CONTINUE
                    ELSE
                       MOVE TGBCURR-NBASE-NREC-VALUE
                                       TO EGBB0-INV-VAT-NON-REC
                       MOVE 'Y'        TO EGBB0-INV-VAT-NON-REC-S
                       MOVE TGBCURR-NBASE-REC-VALUE
                                       TO EGBB0-INV-VAT-REC
                       MOVE 'Y'        TO EGBB0-INV-VAT-REC-S
                    END-IF
                 END-IF
              END-IF

      *--- GET SETTLEMENT TERMS DESCRIPTION
              MOVE SPACES              TO MGBC-STLMNT-DESCR
              MOVE 'N'                 TO MGBC-STLMNT-DESCR-S

              IF MGBC-STLMNT NOT = SPACES
                 PERFORM TPASETTL-INITIALISE
                 MOVE CGBB-CMPY        TO TPASETTL-CMPY
                 MOVE MGBC-STLMNT      TO TPASETTL-STLMNT
                 PERFORM SQL-SELECT-TPASETTL
                 IF TPASETTL-DESCR NOT = SPACES
                    MOVE TPASETTL-DESCR
                                       TO MGBC-STLMNT-DESCR
                    MOVE 'Y'           TO MGBC-STLMNT-DESCR-S
                 END-IF
              END-IF

      *--- GET DISCOUNT TERMS DESCRIPTION
              MOVE SPACES              TO MGBC-DSCNT-DESCR-1
              MOVE 'N'                 TO MGBC-DSCNT-DESCR-1-S

              IF MGBC-DSCNT-TERM-1 NOT = SPACES
                 PERFORM TPADSCNT-INITIALISE
                 MOVE CGBB-CMPY        TO TPADSCNT-CMPY
                 MOVE MGBC-DSCNT-TERM-1
                                       TO TPADSCNT-DSCNT
                 PERFORM SQL-SELECT-TPADSCNT
                 IF TPADSCNT-DESCR NOT = SPACES
                    MOVE TPADSCNT-DESCR
                                       TO MGBC-DSCNT-DESCR-1
                    MOVE 'Y'           TO MGBC-DSCNT-DESCR-1-S
                 END-IF
              END-IF

      *--- GET DISCOUNT TERMS DESCRIPTION
              MOVE SPACES              TO MGBC-DSCNT-DESCR-2
              MOVE 'N'                 TO MGBC-DSCNT-DESCR-2-S

              IF MGBC-DSCNT-TERM-2 NOT = SPACES
                 PERFORM TPADSCNT-INITIALISE
                 MOVE CGBB-CMPY        TO TPADSCNT-CMPY
                 MOVE MGBC-DSCNT-TERM-2
                                       TO TPADSCNT-DSCNT
                 PERFORM SQL-SELECT-TPADSCNT
                 IF TPADSCNT-DESCR NOT = SPACES
                    MOVE TPADSCNT-DESCR
                                       TO MGBC-DSCNT-DESCR-2
                    MOVE 'Y'           TO MGBC-DSCNT-DESCR-2-S
                 END-IF
              END-IF

      *--- GET DISCOUNT TERMS DESCRIPTION
              MOVE SPACES              TO MGBC-DSCNT-DESCR-3
              MOVE 'N'                 TO MGBC-DSCNT-DESCR-3-S

              IF MGBC-DSCNT-TERM-3 NOT = SPACES
                 PERFORM TPADSCNT-INITIALISE
                 MOVE CGBB-CMPY        TO TPADSCNT-CMPY
                 MOVE MGBC-DSCNT-TERM-3
                                       TO TPADSCNT-DSCNT
                 PERFORM SQL-SELECT-TPADSCNT
                 IF TPADSCNT-DESCR NOT = SPACES
                    MOVE TPADSCNT-DESCR
                                       TO MGBC-DSCNT-DESCR-3
                    MOVE 'Y'           TO MGBC-DSCNT-DESCR-3-S
                 END-IF
              END-IF

      *--- GET 0 ADDRESS
              MOVE MGBC-SUPP              TO TPBADDR-SUPP
              MOVE CGBB-CMPY              TO TPBADDR-CMPY
              MOVE 0                      TO TPBADDR-ADDR-NUM
              PERFORM SQL-SELECT-TPBADDR
      *--- SET UP 0 ADDRESS ON SCREEN
              MOVE CGBB-CMPY              TO TPBSUPP-CMPY
              MOVE MGBC-SUPP              TO TPBSUPP-SUPP
              PERFORM SQL-SELECT-TPBSUPP-1

              IF SQLCODE = WZAZSQL-NOT-FOUND
                 MOVE 'Y'                 TO WS-INVALID-HEADER-FLAG
                 MOVE 'E'                 TO CZAZSOFT-MSG-TYPE
                 MOVE 'TPB01'             TO CZAZSOFT-MSG
                 MOVE MGBC-SUPP-F         TO CZAZSOFT-FIELD
                 PERFORM SZAZSOFT-SET-APPL
                 GO TO +++-EXIT
              END-IF

              IF TPBSUPP-DSBLD = 'Y'
                 MOVE 'Y'                 TO WS-INVALID-HEADER-FLAG
                 MOVE 'E'                 TO CZAZSOFT-MSG-TYPE
                 MOVE 'TPB02'             TO CZAZSOFT-MSG
                 MOVE MGBC-SUPP-F         TO CZAZSOFT-FIELD
                 PERFORM SZAZSOFT-SET-APPL
                 GO TO +++-EXIT
              END-IF
              MOVE TPBSUPP-NAME           TO MGBC-SUPP-NAME
                                             CGBB-NAME
              MOVE 'Y'                    TO MGBC-SUPP-NAME-S
              MOVE TPBADDR-ADDR-LINE1     TO MGBC-SUPP-ADDR   (1)
              MOVE 'Y'                    TO MGBC-SUPP-ADDR-S (1)
              MOVE TPBADDR-ADDR-LINE2     TO MGBC-SUPP-ADDR   (2)
              MOVE 'Y'                    TO MGBC-SUPP-ADDR-S (2)
              PERFORM ADDITIONAL-DETAILS
              GO TO +++-EXIT
           END-IF

      *--- BLANK OUT SUPPLIER ADDRESS AND SUBTYPE DESCRIPTION
           MOVE SPACES                 TO MGBC-SUPP-NAME
           MOVE 'N'                    TO MGBC-SUPP-NAME-S
           MOVE SPACES                 TO MGBC-SUPP-ADDR   (1)
           MOVE 'N'                    TO MGBC-SUPP-ADDR-S (1)
           MOVE SPACES                 TO MGBC-SUPP-ADDR   (2)
           MOVE 'N'                    TO MGBC-SUPP-ADDR-S (2)
           PERFORM CLEAR-SUPP-FIELDS
           MOVE SPACES                 TO MGBC-STYPE-DESCR
           MOVE 'N'                    TO MGBC-STYPE-DESCR-S

      *--- VALIDATE THE BATCH HEADER
           MOVE SPACES                 TO WS-INVALID-HEADER-FLAG
                                          CGBB-C-FIRST-ENTRY

      *--- NOTE: IN EACH OF THE TWO FOLLOWING SECTIONS, IF AN ERROR
      *--- IS FOUND, WS-INVALID-HEADER-FLAG IS SET TO 'Y'
           PERFORM UA-SYSREF

           IF WS-INVALID-HEADER-FLAG = 'Y'
              GO TO +++-EXIT
           END-IF

           PERFORM UB-SUPPLIER

           IF WS-INVALID-HEADER-FLAG = 'Y'
              GO TO +++-EXIT
           END-IF

           IF CZAZSTCK-FORMAT-ERROR = 'Y'
              MOVE 'Y'                 TO WS-INVALID-HEADER-FLAG
              GO TO +++-EXIT
           END-IF

++IF TARGET(POP=Y)
|          MOVE TPBSUPP-AUTH-CHRG-FLAG TO WS-AUTH-CHRG-FLAG
++END-IF

      *--- NOW VALIDATE THE REST OF THE TRANSACTION HEADER
           INITIALIZE CGBVIN


           ++POUR MDEF MGBC CDEF CGBVIN

           MOVE MGBC-HDR-USR-DATA      TO CGBVIN-USR-DATA


      *--- PASS LAST TAX DETAILS TO VALIDATION ROUTINE

           MOVE EGBB0-LAST-TAX-CODE    TO CGBVIN-LAST-TRAN-TAX-CODE
           MOVE EGBB0-LAST-TAX-TYPE    TO CGBVIN-LAST-TRAN-TAX-TYPE
           MOVE EGBB0-LAST-LOCTN       TO CGBVIN-LAST-TRAN-LOCTN
           MOVE EGBB0-LAST-DSCNT-TERM-1
                                       TO CGBVIN-LAST-DSCNT-TERM-1
           MOVE EGBB0-LAST-DSCNT-TERM-2
                                       TO CGBVIN-LAST-DSCNT-TERM-2
           MOVE EGBB0-LAST-DSCNT-TERM-3
                                       TO CGBVIN-LAST-DSCNT-TERM-3

           PERFORM VARYING CF-SUB
                   FROM 1 BY 1
                   UNTIL CF-SUB > 6
              COMPUTE CGBVIN-ADDR-LINE-F (CF-SUB) =
                      MGBC-ADDR-LINE-F + CF-SUB - 1
           END-PERFORM

           MOVE CGBVIN-VLDTE-TRAN      TO CGBVIN-FUNC
           MOVE CGBVIN-SRCE-ONL        TO CGBVIN-SRCE

           IF CGBB-LOG-FLAG = SPACES
              MOVE CGBVIN-ENTRY-ONLY   TO CGBVIN-BTCH-SRC
           ELSE
              MOVE CGBVIN-LOG-ENTRY    TO CGBVIN-BTCH-SRC
           END-IF

           MOVE CGBB-CMPY              TO CGBVIN-CMPY
           MOVE MGBC-PYMNT-DUE-DATE    TO CGBVIN-DUE-DATE
           MOVE MGBC-PYMNT-DUE-DATE-S  TO CGBVIN-DUE-DATE-S
           MOVE MGBC-PYMNT-DUE-DATE-F  TO CGBVIN-DUE-DATE-F
           MOVE MGBC-INV-GROSS-AMT     TO CGBVIN-GROSS-AMT
           MOVE MGBC-INV-GROSS-AMT-S   TO CGBVIN-GROSS-AMT-S
           MOVE MGBC-INV-GROSS-AMT-F   TO CGBVIN-GROSS-AMT-F
           MOVE MGBC-INV-TAX-AMT       TO CGBVIN-TAX-AMT
           MOVE MGBC-INV-TAX-AMT-S     TO CGBVIN-TAX-AMT-S
           MOVE MGBC-INV-TAX-AMT-F     TO CGBVIN-TAX-AMT-F
           PERFORM ENCODE-USR-DATA
           MOVE MGBC-HDR-USR-DATA-S    TO CGBVIN-USR-DATA-S
           MOVE MGBC-HDR-USR-DATA-F    TO CGBVIN-USR-DATA-F
           MOVE EGBB0-DSCNT-DFLT-1     TO CGBVIN-DSCNT-DFLT-1
           MOVE EGBB0-DSCNT-DFLT-2     TO CGBVIN-DSCNT-DFLT-2
           MOVE EGBB0-DSCNT-DFLT-3     TO CGBVIN-DSCNT-DFLT-3
           MOVE EGBB0-DUE-CALC-FLAG    TO CGBVIN-DUE-CALC-FLAG
           MOVE EGBB0-USR-DUE-DATE-FLAG
                                       TO CGBVIN-USR-DUE-DATE-FLAG
           MOVE EGBB0-DUE-DATE-OLD     TO CGBVIN-DUE-DATE-OLD
           MOVE CGBB-TRAN-TYPE         TO CGBVIN-TRAN-TYPE
           MOVE 'Y'                    TO CGBVIN-TRAN-TYPE-S
           MOVE MGBC-TRAN-TYPE-F       TO CGBVIN-TRAN-TYPE-F
           MOVE CGBB-B-SYSREF-ALLOC-FLAG
                                       TO CGBVIN-SYSREF-ALLOC-FLAG
           MOVE MGBC-HDR-GL-CMPY       TO CGBVIN-GL-CMPY
           MOVE MGBC-HDR-GL-CMPY-S     TO CGBVIN-GL-CMPY-S
           MOVE MGBC-HDR-GL-CMPY-F     TO CGBVIN-GL-CMPY-F
           MOVE MGBC-HDR-GL-ACCT       TO CGBVIN-GL-ACCT
           MOVE MGBC-HDR-GL-ACCT-S     TO CGBVIN-GL-ACCT-S
           MOVE MGBC-HDR-GL-ACCT-F     TO CGBVIN-GL-ACCT-F
           MOVE SPACES                 TO CGBVIN-MCA
           MOVE 'N'                    TO CGBVIN-MCA-S
           MOVE CGBB-C-OVR-FAC-DNL-FLAG
                                       TO CGBVIN-OVRD-FACTOR-FLAG
           MOVE CGBB-C-PYM-ADD-DNL-FLAG
                                       TO CGBVIN-PYMNT-ADDR-FLAG

      *--- MAKE SURE THAT THE SINGLE CHEQUE FLAG WILL NOT
      *--- RE DEFAULT ON THE TRANSACTION HEADER.
      *--- EGBB0-SNGL-CHQ-DFLT : THIS FLAG WILL INDICATE WHETHER
      *---                       THE DEFAULT HAS ALREADY BEEN TAKEN
      *---                       FOR THE SINGLE CHEQUE FALG.
           MOVE EGBB0-SNGL-CHQ-DFLT    TO CGBVIN-SNGL-CHQ-DFLT
           MOVE MGBC-ORDR-REF          TO CGBVIN-ORDR-REF

           IF EGBC0R-NENTRIES > ZERO
              MOVE 'Y'                 TO CGBVIN-DETL-LINES
           END-IF


           EXEC QSP CALL VLDTE_PL_TRAN_HDR
                CGBVIN
                CGBVOUT
                TPACNTRL
                TGACNTRL
                TEACNTRL
                TPBSUPP
                TPBSCHD
                TAKICMPY
                TRACMPYL
           END-EXEC

      *--- DEFAULTS FOR CERTAIN FIELDS CAN BE ADDED IN THE VALIDATION
      *--- ROUTINE HENCE THE ++POUR & MOVING OF DATA FROM CGBVIN

           MOVE CGBVIN-SNGL-CHQ-DFLT   TO EGBB0-SNGL-CHQ-DFLT
           MOVE CGBVIN-SNGL-CHQ-FLAG   TO EGBB0-SNGL-CHQ-FLAG
                                          MGBC-SNGL-CHQ-FLAG
           MOVE CGBVIN-SNGL-CHQ-FLAG-S TO EGBB0-SNGL-CHQ-FLAG-S
                                          MGBC-SNGL-CHQ-FLAG-S
           MOVE CGBVIN-TRAN-DATE       TO MGBC-TRAN-DATE
                                          EGBB0-TRAN-TYPE
           MOVE CGBVIN-TRAN-DATE-S     TO MGBC-TRAN-DATE-S
                                          EGBB0-TRAN-TYPE-S
           MOVE CGBVIN-RCVD-DATE       TO MGBC-RCVD-DATE
                                          EGBB0-RCVD-DATE
           MOVE CGBVIN-RCVD-DATE-S     TO MGBC-RCVD-DATE-S
                                          EGBB0-RCVD-DATE-S
           MOVE CGBVIN-PER             TO MGBC-PER
           MOVE CGBVIN-PER-S           TO MGBC-PER-S
           MOVE CGBVIN-YY              TO MGBC-YY
           MOVE CGBVIN-YY-S            TO MGBC-YY-S
           MOVE CGBVIN-TRAN-TYPE       TO MGBC-TRAN-TYPE
                                          EGBB0-TRAN-TYPE
           MOVE CGBVIN-TRAN-TYPE-S     TO MGBC-TRAN-TYPE-S
                                          EGBB0-TRAN-TYPE-S
           MOVE CGBVIN-TRAN-STYPE      TO MGBC-TRAN-STYPE
           MOVE CGBVIN-TRAN-STYPE-S    TO MGBC-TRAN-STYPE-S
           MOVE CGBVIN-CURR            TO MGBC-CURR
           MOVE CGBVIN-CURR-S          TO MGBC-CURR-S
           MOVE CGBVIN-RATE-TYPE       TO MGBC-RATE-TYPE
           MOVE CGBVIN-RATE-TYPE-S     TO MGBC-RATE-TYPE-S
           MOVE CGBVIN-EFF-DATE        TO MGBC-EFF-DATE
           MOVE CGBVIN-EFF-DATE-S      TO MGBC-EFF-DATE-S
           MOVE CGBVIN-EXCH-RATE       TO MGBC-EXCH-RATE
           MOVE CGBVIN-EXCH-RATE-S     TO MGBC-EXCH-RATE-S
           MOVE CGBVIN-TAKE-DSCNT-IND  TO MGBC-TAKE-DSCNT-IND
           MOVE CGBVIN-TAKE-DSCNT-IND-S
                                       TO MGBC-TAKE-DSCNT-IND-S
           MOVE CGBVIN-DSCNT-AMT       TO MGBC-DSCNT-AMT
           MOVE CGBVIN-DSCNT-AMT-S     TO MGBC-DSCNT-AMT-S
           MOVE CGBVIN-DSCNT-PERC      TO MGBC-DSCNT-PERC
           MOVE CGBVIN-DSCNT-PERC-F    TO MGBC-DSCNT-PERC-F
           MOVE CGBVIN-DSCNT-PERC-S    TO MGBC-DSCNT-PERC-S
           MOVE CGBVIN-DSCNT-TERM-1    TO MGBC-DSCNT-TERM-1
           MOVE CGBVIN-DSCNT-TERM-1-F  TO MGBC-DSCNT-TERM-1-F
           MOVE CGBVIN-DSCNT-TERM-1-S  TO MGBC-DSCNT-TERM-1-S
           MOVE CGBVIN-DSCNT-TERM-2    TO MGBC-DSCNT-TERM-2
           MOVE CGBVIN-DSCNT-TERM-2-F  TO MGBC-DSCNT-TERM-2-F
           MOVE CGBVIN-DSCNT-TERM-2-S  TO MGBC-DSCNT-TERM-2-S
           MOVE CGBVIN-DSCNT-TERM-3    TO MGBC-DSCNT-TERM-3
           MOVE CGBVIN-DSCNT-TERM-3-F  TO MGBC-DSCNT-TERM-3-F
           MOVE CGBVIN-DSCNT-TERM-3-S  TO MGBC-DSCNT-TERM-3-S
           MOVE CGBVIN-STLMNT          TO MGBC-STLMNT
           MOVE CGBVIN-STLMNT-F        TO MGBC-STLMNT-F
           MOVE CGBVIN-STLMNT-S        TO MGBC-STLMNT-S
           MOVE CGBVIN-PRPYMNT-STRT-PER
                                       TO MGBC-PRPYMNT-STRT-PER
           MOVE CGBVIN-PRPYMNT-STRT-PER-S
                                       TO MGBC-PRPYMNT-STRT-PER-S
           MOVE CGBVIN-PRPYMNT-STRT-YY TO MGBC-PRPYMNT-STRT-YY
           MOVE CGBVIN-PRPYMNT-STRT-YY-S
                                       TO MGBC-PRPYMNT-STRT-YY-S
           MOVE CGBVIN-TRAN-TAX-CODE   TO MGBC-TRAN-TAX-CODE
           MOVE CGBVIN-TRAN-TAX-CODE-S TO MGBC-TRAN-TAX-CODE-S
           MOVE CGBVIN-TRAN-TAX-TYPE   TO MGBC-TRAN-TAX-TYPE
           MOVE CGBVIN-TRAN-TAX-TYPE-S TO MGBC-TRAN-TAX-TYPE-S
           MOVE CGBVIN-TRAN-TAX-DATE   TO MGBC-TRAN-TAX-DATE
           MOVE CGBVIN-TRAN-TAX-DATE-S TO MGBC-TRAN-TAX-DATE-S
           MOVE CGBVIN-TRAN-LOCTN      TO MGBC-TRAN-LOCTN
           MOVE CGBVIN-TRAN-LOCTN-S    TO MGBC-TRAN-LOCTN-S
           MOVE CGBVIN-TRAN-HAND       TO MGBC-TRAN-HAND
           MOVE CGBVIN-TRAN-HAND-S     TO MGBC-TRAN-HAND-S

           MOVE CGBVIN-SUPP-POSTCODE   TO MGBC-SUPP-POSTCODE
           MOVE CGBVIN-SUPP-POSTCODE-S TO MGBC-SUPP-POSTCODE-S

           MOVE CGBVIN-SRT-CODE        TO MGBC-SRT-CODE
           MOVE CGBVIN-SRT-CODE-S      TO MGBC-SRT-CODE-S
           MOVE CGBVIN-BANK-CNTRY      TO MGBC-BANK-CNTRY
           MOVE CGBVIN-BANK-CNTRY-S    TO MGBC-BANK-CNTRY-S
           MOVE CGBVIN-BANK-ACCT       TO MGBC-BANK-ACCT
           MOVE CGBVIN-BANK-ACCT-S     TO MGBC-BANK-ACCT-S

           MOVE CGBVIN-PAYEE-TRANS-MECH
                                       TO MGBC-PAYEE-TRANS-MECH
           MOVE CGBVIN-PAYEE-TRANS-MECH-S
                                       TO MGBC-PAYEE-TRANS-MECH-S

      *--- STORE LAST TAX DETAILS FROM VALIDATION ROUTINE

           MOVE CGBVIN-LAST-TRAN-TAX-CODE
                                       TO EGBB0-LAST-TAX-CODE
           MOVE CGBVIN-LAST-TRAN-TAX-TYPE
                                       TO EGBB0-LAST-TAX-TYPE
           MOVE CGBVIN-LAST-TRAN-LOCTN TO EGBB0-LAST-LOCTN
           MOVE CGBVIN-LAST-DSCNT-TERM-1
                                       TO EGBB0-LAST-DSCNT-TERM-1
           MOVE CGBVIN-LAST-DSCNT-TERM-2
                                       TO EGBB0-LAST-DSCNT-TERM-2
           MOVE CGBVIN-LAST-DSCNT-TERM-3
                                       TO EGBB0-LAST-DSCNT-TERM-3


           IF EGBC0R-NENTRIES       > ZERO
           OR CGBB-C-DETL-DISP-FLAG = 'Y'
           OR WS-SUPP-CHANGED   NOT = 'Y'
              CONTINUE
           ELSE
              MOVE CGBVIN-SKEL-CODE    TO MGBC-SKEL-CODE
              MOVE CGBVIN-SKEL-CODE-S  TO MGBC-SKEL-CODE-S
           END-IF

           MOVE CGBVIN-SLFASSD-TAX-IND TO MGBC-SLFASSD-TAX-IND
           MOVE CGBVIN-SLFASSD-TAX-IND-S
                                       TO MGBC-SLFASSD-TAX-IND-S

           MOVE CGBVIN-TAX-ONLY-FLAG   TO MGBC-TAX-ONLY-FLAG
           MOVE CGBVIN-TAX-ONLY-FLAG-S TO MGBC-TAX-ONLY-FLAG-S

           MOVE CGBVIN-INV-OWNER       TO MGBC-INV-OWNER
           MOVE CGBVIN-INV-OWNER-S     TO MGBC-INV-OWNER-S
           MOVE CGBVIN-INV-OWNER-NAME  TO MGBC-INV-OWNER-NAME
           MOVE CGBVIN-INV-OWNER-NAME-S
                                       TO MGBC-INV-OWNER-NAME-S

           ++POUR CDEF CGBVOUT MDEF MGBC

           MOVE CGBVOUT-PYMNT-ADDR-LINE1
                                       TO MGBC-PYMNT-ADDR-LINE1
           MOVE CGBVOUT-PYMNT-ADDR-LINE1-s
                                       TO MGBC-PYMNT-ADDR-LINE1-S
           MOVE CGBVOUT-PYMNT-ADDR-LINE2
                                       TO MGBC-PYMNT-ADDR-LINE2
           MOVE CGBVOUT-PYMNT-ADDR-LINE2-s
                                       TO MGBC-PYMNT-ADDR-LINE2-S
           MOVE CGBVIN-DUE-DATE        TO MGBC-PYMNT-DUE-DATE
           MOVE CGBVIN-DUE-DATE-S      TO MGBC-PYMNT-DUE-DATE-S
           MOVE CGBVIN-GROSS-AMT       TO MGBC-INV-GROSS-AMT
           MOVE CGBVIN-GROSS-AMT-S     TO MGBC-INV-GROSS-AMT-S
           MOVE CGBVIN-TAX-AMT         TO MGBC-INV-TAX-AMT
           MOVE CGBVIN-TAX-AMT-S       TO MGBC-INV-TAX-AMT-S
           MOVE CGBVIN-CRN-INV-SYSREF  TO MGBC-CRN-INV-SYSREF
           MOVE CGBVIN-CRN-INV-SYSREF-S
                                       TO MGBC-CRN-INV-SYSREF-S
           PERFORM DECODE-USR-DATA
           MOVE CGBVIN-USR-DATA-S      TO MGBC-HDR-USR-DATA-S
           MOVE CGBVIN-DSCNT-DFLT-1    TO EGBB0-DSCNT-DFLT-1
           MOVE CGBVIN-DSCNT-DFLT-2    TO EGBB0-DSCNT-DFLT-2
           MOVE CGBVIN-DSCNT-DFLT-3    TO EGBB0-DSCNT-DFLT-3
           MOVE CGBVIN-DUE-CALC-FLAG   TO EGBB0-DUE-CALC-FLAG
           MOVE CGBVIN-USR-DUE-DATE-FLAG
                                       TO EGBB0-USR-DUE-DATE-FLAG
           MOVE CGBVIN-DUE-DATE-OLD    TO EGBB0-DUE-DATE-OLD

      *--- RESET AUTHORISATION FIELDS WHEN GROUP OR CONTROL HAS CHANGED
           IF CGBVOUT-AUTH-GRP   NOT = EGBB0-AUTH-GRP
           OR CGBVOUT-AUTH-CNTRL NOT = EGBB0-AUTH-CNTRL
              MOVE 0                   TO EGBB0-GO6-GRP
                                          EGBB0-GO7-GRP
                                          EGBB0-MIN-AUTH
                                          EGBB0-RECALC-MIN-AUTH
                                          EGBB0-ACT-AUTH
              MOVE SPACES              TO EGBB0-QRY-AUTH
           END-IF

           ++POUR CDEF CGBVOUT EDEF EGBB0

           MOVE CGBVIN-INV-OWNER       TO EGBB0-INV-OWNER
           MOVE CGBVIN-INV-OWNER-S     TO EGBB0-INV-OWNER-S
           MOVE CGBVIN-INV-OWNER-NAME  TO EGBB0-INV-OWNER-NAME
           MOVE CGBVIN-INV-OWNER-NAME-S
                                       TO EGBB0-INV-OWNER-NAME-S

           MOVE CGBVIN-STLMNT          TO EGBB0-STLMNT
           MOVE CGBVIN-STLMNT-S        TO EGBB0-STLMNT-S
           MOVE CGBVIN-SLFASSD-TAX-IND TO EGBB0-SLFASSD-TAX-IND
           MOVE CGBVIN-SLFASSD-TAX-IND-S
                                       TO EGBB0-SLFASSD-TAX-IND-S
           MOVE ZERO                   TO WS-WARN-ACCPT-CNT
           MOVE TPBSUPP-ACCT-TYPE      TO EGBB0-ACCT-TYPE
           MOVE 'Y'                    TO EGBB0-ACCT-TYPE-S
           MOVE CGBVOUT-COUNT          TO WS-CGBVOUT-COUNT



           PERFORM VARYING CF-SUB
                   FROM 1 BY 1
                   UNTIL CF-SUB > WS-CGBVOUT-COUNT
             IF CGBVOUT-ERR (CF-SUB) = 'W'
      *---      ADD 1                  TO WS-WARN-ACCPT-CNT
                IF  CZAZSTCK-ACTION      = WZAZLITS-LINE-WARNINGS
                OR (CGBVOUT-MSG (CF-SUB) = CGBB-C-WARN-MSG (1)
                                        OR CGBB-C-WARN-MSG (2)
                                        OR CGBB-C-WARN-MSG (3)
                                        OR CGBB-C-WARN-MSG (4)
                                        OR CGBB-C-WARN-MSG (5))
                    ADD 1              TO WS-WARN-ACCPT-CNT
                END-IF
             END-IF
             MOVE CGBB-BTCH-NUM        TO WS-CHAR-BTCH-NUM
             IF (CGBVOUT-MSG (CF-SUB)     = 'GBV13'
             AND MGBC-ORDR-REF        NOT = SPACES)
             OR (CGBVOUT-MSG (CF-SUB)     = 'GBV41'
             AND CGBVOUT-SUBTXT (CF-SUB)  = WS-CHAR-BTCH-NUM)
             OR (CGBVOUT-MSG (CF-SUB)     = 'GBV53'
             AND CGBVOUT-SUBTXT (CF-SUB)  = WS-CHAR-BTCH-NUM)
                 IF (CGBVOUT-MSG (CF-SUB)     = 'GBV53'
                 AND CGBVOUT-SUBTXT (CF-SUB)  = WS-CHAR-BTCH-NUM)
                    MOVE 'W'           TO CZAZSOFT-MSG-TYPE
                    MOVE 'GBC65'       TO CZAZSOFT-MSG
                    IF CGBVOUT-FLD-NO (CF-SUB) > ZERO
                       MOVE CGBVOUT-FLD-NO (CF-SUB)
                                       TO CZAZSOFT-FIELD
                       MOVE CGBVOUT-SUBTXT (CF-SUB)
                                       TO CZAZSOFT-SUBTEXT
                    END-IF
                 ELSE
                    IF CGBVOUT-ERR (CF-SUB)  = CGBVOUT-ERROR
                       SUBTRACT 1       FROM CGBVOUT-COUNT
                    END-IF
                    IF CGBVOUT-ERR (CF-SUB)  = CGBVOUT-WARN
                       ADD 1              TO WS-WARN-ACCPT-CNT
                    END-IF
                 END-IF
             ELSE
                MOVE CGBVOUT-ERR  (CF-SUB)
                                       TO CZAZSOFT-MSG-TYPE
                MOVE CGBVOUT-MSG  (CF-SUB)
                                       TO CZAZSOFT-MSG
                MOVE CGBVOUT-MAND (CF-SUB)
                                       TO CZAZSOFT-MANDATORY
                IF CGBVOUT-FLD-NO (CF-SUB) > ZERO
                   MOVE CGBVOUT-FLD-NO (CF-SUB)
                                       TO CZAZSOFT-FIELD
                   MOVE CGBVOUT-SUBTXT (CF-SUB)
                                       TO CZAZSOFT-SUBTEXT
                END-IF
             END-IF
             PERFORM XA-SET-WARNING
           END-PERFORM

      *--- IF THE TYPE IS CREDIT NOTE AND THE lINKED iNVOICE REFERENCE IS
      *--- ENTERED, THEN THE GROSS AMOUNT OF THE MATCHED INVOICE MUST BE
      *--- EQUAL TO THIS CREDIT NOTE

           IF  MGBC-TRAN-TYPE = '2'
           AND MGBC-CRN-INV-REF NOT = SPACES
           AND MGBC-CRN-INV-SYSREF NOT = ZERO
               IF MGBC-INV-GROSS-AMT > CGBVOUT-LINK-GROSS-AMT
               MOVE 'E'                TO CZAZSOFT-MSG-TYPE
               MOVE 'GBC73'            TO CZAZSOFT-MSG
               MOVE MGBC-INV-GROSS-AMT-F
                                       TO CZAZSOFT-FIELD
               PERFORM SZAZSOFT-SET-APPL
               END-IF
           END-IF



      *--- If the supplier is not tax registered and the tax code entered
      *--- does not match the supplier's default tax code, issue warning
      *--- "Tax code does not match unregistered supplier's default tax code"

           IF MGBC-CMPY NOT = SPACES
           AND MGBC-SUPP NOT = SPACES
           AND MGBC-TRAN-LOCTN NOT = SPACES
           AND MGBC-TRAN-TAX-CODE NOT = SPACES
              MOVE SPACES              TO TPBTAX-TAX-CODE
              MOVE MGBC-CMPY           TO TPBTAX-CMPY
              MOVE MGBC-SUPP           TO TPBTAX-SUPP
              MOVE MGBC-TRAN-LOCTN     TO TPBTAX-LOCTN
              PERFORM SQL-SELECT-TPBTAX
              IF SQLCODE = WZAZSQL-OK
              AND TPBTAX-TAX-REG-FLAG = 'Y'
                 CONTINUE
              ELSE
                 IF MGBC-TRAN-TAX-CODE NOT = TPBTAX-TAX-CODE
                    MOVE 'GBC66'       TO CZAZSOFT-MSG
                    MOVE 'W'           TO CZAZSOFT-MSG-TYPE
                    MOVE MGBC-TRAN-TAX-CODE-F
                                       TO CZAZSOFT-FIELD
                    PERFORM XA-SET-WARNING
                 END-IF
              END-IF
           END-IF

           IF (CGBVOUT-COUNT          = ZERO
           OR  CGBVOUT-COUNT          = WS-WARN-ACCPT-CNT)
           AND WS-INVALID-HEADER-FLAG = SPACES
           AND WS-TRLR-ERR-FLAG       = SPACES
           AND CZAZSTCK-ERROR-SWITCH  = '0'
              ++POUR MDEF MGBC CDEF CGBB
           ELSE
              IF CGBVOUT-COUNT        NOT = WS-WARN-ACCPT-CNT
                 MOVE 'Y'              TO WS-INVALID-HEADER-FLAG
              END-IF
           END-IF

      *--- CHECK IF HEADER HAS CHANGED - VAW
           MOVE 0                      TO CF-CHANGES-MADE
           PERFORM S4-HDR-COMPARE-SRC
           IF CF-CHANGES-MADE > 0
              PERFORM S5-MOVE-HDR-TO-SRC
              MOVE 'Y'                 TO CGBB-B-EWS-CHANGED
                                          CGBB-C-EWS-CHANGED
                                          CGBB-B-CHANGED
                                          CGBB-BATCH-CHANGED
           END-IF
      *--- CHECK IF HEADER HAS CHANGED - VAW


++IF TARGET(POP=Y)
|          IF  MGBC-ORDR-REF-S  = 'Y'
|          OR  MGBC-ADVC-NOTE-S = 'Y'
|             IF CGBU-COUNT NOT > ZERO
|                 PERFORM UD-ORDR-REF
|             END-IF
|           ELSE
|              MOVE SPACES              TO MGBC-TEXT-MNEM
|                                          EGBB0-TEXT-MNEM
|              MOVE 'N'                 TO MGBC-TEXT-MNEM-S
|          END-IF
|
|          PERFORM UG-SEL-ALL
|          PERFORM UH-SEL-AUTO
++END-IF

      *--- IF ACTION IS 55 (HEADER AUTHORISATION) AND SEARCH LIMIT
      *--- FLAG IS SET, DO NOT ALLOW ACTION
           IF  CZAZSTCK-ACTION = 55
           AND CZAZSTCK-SRCH-LIMIT-FLAG = 'Y'
               MOVE 'E'                TO CZAZSOFT-MSG-TYPE
               MOVE 'GBC18'            TO CZAZSOFT-MSG
               MOVE MGBC-SYSREF-F      TO CZAZSOFT-FIELD
               PERFORM SZAZSOFT-SET-APPL
               GO TO +++-EXIT
           END-IF

           IF EGBB0-AUTH-LVL = '1' AND
              CZAZSTCK-ACTION NOT = WZAZLITS-ENTER
              IF EGBB0-PR-LINES = 0
                 MOVE '0'              TO EGBB0-AUTH-DENIED
              END-IF

              IF (EGBB0-AUTH-DENIED = '1' AND
                  CZAZSTCK-ACTION   = WZAZLITS-LINE-WARNINGS)
              OR (EGBB0-AUTH-DENIED = '2' AND
                  CZAZSTCK-ACTION   = 55)
                 CONTINUE
              ELSE
                 MOVE '0'              TO EGBB0-AUTH-DENIED
              END-IF

              IF  EGBB0-PR-LINES    > 0
              AND CZAZSTCK-ACTION   = 55
              AND EGBB0-AUTH-DENIED NOT = '2'
                 MOVE '1'              TO EGBB0-AUTH-DENIED
              END-IF

              IF  EGBB0-AUTH-DENIED = '1'
              AND (CZAZSTCK-ACTION = 55 OR WZAZLITS-LINE-WARNINGS)
                 MOVE 'W'              TO CZAZSOFT-MSG-TYPE
                 MOVE 'GBC21'          TO CZAZSOFT-MSG
                 MOVE MGBC-INV-GROSS-AMT-F
                                       TO CZAZSOFT-FIELD
                 PERFORM XA-SET-WARNING
                 IF  CZAZSTCK-ACTION = WZAZLITS-LINE-WARNINGS
                 AND EGBB0-AUTH-DENIED = '1'
                    MOVE '2'           TO EGBB0-AUTH-DENIED
                 END-IF
              END-IF

              IF (EGBB0-AUTH-DENIED = '2' AND
                  CZAZSTCK-ACTION   = 55)
                 MOVE '3'              TO EGBB0-AUTH-DENIED
      *--- HAS ACCESS TO ACCPEPT AUTHORISATION WARNINGS BEEN DENIED
                 IF CGBB-C-AUTH-HEAD-DNL-FLAG = 'Y'
                     MOVE '1'     TO EGBB0-AUTH-DENIED
                     MOVE 'I'     TO CZAZSOFT-MSG-TYPE
                     MOVE 'GBC24' TO CZAZSOFT-MSG
                     PERFORM SZAZSOFT-SCREEN-LEVEL-MESS
                 END-IF
              END-IF
           END-IF
*+IF TARGET(POP=Y)
*+END-IF
      *--- READ IN DEFAULTS, IF APPROPRIATE
++IF TARGET(POP=Y)
|
|          IF NOT CZAZSTCK-DATA-VALID
|          OR EGBC0R-NENTRIES       > ZERO
|          OR CGBB-C-DETL-DISP-FLAG = 'Y'
|          OR (CZAZSTCK-ACTION   NOT = 52
|          AND CZAZSTCK-ACTION   NOT = 64)
|          OR (MGBC-SKEL-CODE        = SPACES
|          AND MGBC-ORDR-REF         = SPACES
|          AND MGBC-ADVC-NOTE        = SPACES)
|             GO TO +++-EXIT
|          END-IF
++ELSE
|          IF NOT CZAZSTCK-DATA-VALID
|          OR EGBC0R-NENTRIES       > ZERO
|          OR CGBB-C-DETL-DISP-FLAG = 'Y'
|          OR CZAZSTCK-ACTION   NOT = 52
|          OR MGBC-SKEL-CODE        = SPACES
|             GO TO +++-EXIT
|          END-IF
|
++END-IF

           MOVE 1                      TO CGBB-C-PRIM-ITEM
           MOVE 1                      TO CZAZSTCK-CURSOR-ROW
           MOVE 0                      TO CGBB-C-ERROR-COUNT
           MOVE 0                      TO CGBB-C-WARNING-COUNT
           MOVE 'N'                    TO CGBB-C-EWS-CHANGED

       UA-SYSREF  SECTION.

           IF CGBB-LOG-FLAG = SPACES
           AND TGACNTRL-LOG-IND NOT = TGACNTRL-LI-MIXED
              GO TO +++-EXIT
           END-IF


      *--- BECAUSE THE TRANSACTION WAS PREVIOUSLY LOGGED, DO NOT
      *--- ALLOW THE SINGLE CHEQUE FLAG TO BE DEFAULTED.
           MOVE 'Y'                    TO EGBB0-SNGL-CHQ-DFLT

           IF MGBC-SYSREF-S = 'E'

              MOVE 'Y'                 TO WS-INVALID-HEADER-FLAG
              GO TO +++-EXIT
           END-IF

      *--- UNLOCK ORIGINAL TRANSACTION
           IF  EGBB0-SYSREF NOT = 0
           AND EGBB0-SYSREF NOT = MGBC-SYSREF
              MOVE CGBB-CMPY           TO TGBTRAN-CMPY
              MOVE MGBC-SUPP           TO TGBTRAN-SUPP
              MOVE EGBB0-SYSREF        TO TGBTRAN-SYSREF
              MOVE SPACES              TO TGBTRAN-LOCK-USR
              PERFORM SQL-UPDATE-TGBTRAN-UNLOCK
           END-IF

           IF MGBC-SYSREF NOT = ZERO
      *--- OBTAIN TRANSACTION
              MOVE CGBB-CMPY           TO TGBTRAN-CMPY
              MOVE MGBC-SYSREF         TO TGBTRAN-SYSREF

              PERFORM SQL-SELECT-TGBTRAN
              IF SQLCODE = WZAZSQL-NOT-FOUND

                 MOVE 'Y'              TO WS-INVALID-HEADER-FLAG
                 MOVE 'E'              TO CZAZSOFT-MSG-TYPE
                 MOVE 'GBC01'          TO CZAZSOFT-MSG
                 MOVE MGBC-SYSREF-F    TO CZAZSOFT-FIELD
                 PERFORM SZAZSOFT-SET-APPL
                 GO TO +++-EXIT
              END-IF

      *--- OBTAIN ORDER DATA IF ORDER RELATED
++IF TARGET(POP=Y)
|             IF TGBTRAN-ORDR-RLTD-FLAG = 'Y'
|                PERFORM UAA-ORDR-RLTD-DATA
|             ELSE
|                IF  MGBC-SYSREF NOT = ZERO
|                AND MGBC-SYSREF NOT = EGBB0-SYSREF
|                    MOVE SPACES       TO MGBC-ORDR-REF
|                    MOVE 'N'          TO MGBC-ORDR-REF-S
|                END-IF
|             END-IF
++END-IF

              IF TGBTRAN-TRAN-STAT NOT = 'L'

                 MOVE 'Y'              TO WS-INVALID-HEADER-FLAG
                 MOVE 'E'              TO CZAZSOFT-MSG-TYPE
                 MOVE 'GBC02'          TO CZAZSOFT-MSG
                 MOVE MGBC-SYSREF-F    TO CZAZSOFT-FIELD
                 PERFORM SZAZSOFT-SET-APPL
                 GO TO +++-EXIT
              END-IF

              IF TGBTRAN-TRAN-TYPE NOT = CGBB-TRAN-TYPE

                 MOVE 'Y'              TO WS-INVALID-HEADER-FLAG
                 MOVE 'E'              TO CZAZSOFT-MSG-TYPE
                 MOVE 'GBC03'          TO CZAZSOFT-MSG
                 MOVE MGBC-SYSREF-F    TO CZAZSOFT-FIELD
                 MOVE MGBC-TRAN-DESCR  TO CZAZSOFT-SUBTEXT
                 PERFORM SZAZSOFT-SET-APPL
                 GO TO +++-EXIT
              END-IF
           END-IF

      *--- DO NOT REVALIDATE IF THE SAME AS EWS VALUE
           IF  MGBC-SYSREF NOT = ZERO
           AND MGBC-SYSREF = EGBB0-SYSREF
               GO TO +++-EXIT
           END-IF

      *--- MANDATORY WHEN ENTERING A LOGGED TRANSACTION
           IF MGBC-SYSREF = ZERO
              IF CGBB-LOG-FLAG = 'Y'
                 MOVE 'Y'                 TO WS-INVALID-HEADER-FLAG
                                             CZAZSOFT-MANDATORY
                 MOVE MGBC-SYSREF-F       TO CZAZSOFT-FIELD
                 PERFORM SZAZSOFT-SET-APPL
              END-IF
              GO TO +++-EXIT
           END-IF

           IF TGBTRAN-LOCK-USR NOT = SPACES

              MOVE 'Y'                 TO WS-INVALID-HEADER-FLAG
              MOVE 'E'                 TO CZAZSOFT-MSG-TYPE
              MOVE 'GBC04'             TO CZAZSOFT-MSG
              MOVE TGBTRAN-LOCK-USR    TO CZAZSOFT-SUBTEXT
              MOVE MGBC-SYSREF-F       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              GO TO +++-EXIT
           END-IF

      *--- LOCK CURRENT TRANSACTION USING PREDICATE OF LOCK-USR = SPACES
      *--- WHEN NOT FOUND, NOW LOCKED SO ERROR
           MOVE CGBB-CMPY              TO TGBTRAN-CMPY
           MOVE MGBC-SYSREF            TO TGBTRAN-SYSREF
           MOVE CZAZPUBL-USR           TO HV-LOCK-USR
           MOVE SPACES                 TO TGBTRAN-LOCK-USR
           PERFORM SQL-UPDATE-TGBTRAN-LOCK

           IF SQLCODE = WZAZSQL-NOT-FOUND
              PERFORM SQL-SELECT-TGBTRAN-LOCK

              MOVE 'Y'                 TO WS-INVALID-HEADER-FLAG
              MOVE 'E'                 TO CZAZSOFT-MSG-TYPE
              MOVE 'GBC04'             TO CZAZSOFT-MSG
              MOVE TGBTRAN-LOCK-USR    TO CZAZSOFT-SUBTEXT
              MOVE MGBC-SYSREF-F       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              GO TO +++-EXIT
           END-IF

           IF TGBTRAN-TRAN-TYPE = '2'
           OR TGBTRAN-TRAN-TYPE = '6'
              MULTIPLY -1 BY TGBTRAN-GROSS-AMT
              MULTIPLY -1 BY TGBTRAN-TAX-AMT
              MULTIPLY -1 BY TGBTRAN-DSCNT-AMT
           END-IF

      *--- MOVE ALL TGBTRAN- FIELDS TO CORRESPONDING MGBC- FIELDS
           ++POUR TDEF TGBTRAN MDEF MGBC

           MOVE TGBTRAN-GROSS-AMT      TO MGBC-INV-GROSS-AMT
           MOVE TGBTRAN-TAX-AMT        TO MGBC-INV-TAX-AMT
           MOVE TGBTRAN-BANK           TO MGBC-PRE-STTLD-BANK

           MOVE 'Y'                    TO MGBC-SYSREF-S
           MOVE 'Y'                    TO MGBC-ENTRY-DATE-S
           MOVE 'Y'                    TO MGBC-SUPP-S
           MOVE 'Y'                    TO MGBC-TRAN-REF-S
           MOVE 'Y'                    TO MGBC-TRAN-DATE-S
           IF TGBTRAN-RCVD-DATE NOT = WZAZLITS-MIN-DATE
              MOVE 'Y'                 TO MGBC-RCVD-DATE-S
           ELSE
              MOVE 'N'                 TO MGBC-RCVD-DATE-S
           END-IF

           IF TGBTRAN-ELEM NOT = SPACES
              MOVE 'Y'                 TO MGBC-ELEM-S
           ELSE
              MOVE 'N'                 TO MGBC-ELEM-S
           END-IF

           IF TGBTRAN-SUPP-POSTCODE NOT = SPACES
              MOVE 'Y'                 TO MGBC-SUPP-POSTCODE-S
           ELSE
              MOVE 'N'                 TO MGBC-SUPP-POSTCODE-S
           END-IF

           IF TGBTRAN-OVRD-FACTOR NOT = SPACES
              MOVE 'Y'                 TO MGBC-OVRD-FACTOR-S
           ELSE
              MOVE 'N'                 TO MGBC-OVRD-FACTOR-S
           END-IF

           IF TGBTRAN-NCIS-EXCLD NOT = SPACES
              MOVE 'Y'                 TO MGBC-NCIS-EXCLD-S
           ELSE
              MOVE 'N'                 TO MGBC-NCIS-EXCLD-S
           END-IF

      *--- INSERT THE CURRENT PL PERIOD AND YEAR

           IF (TGBTRAN-YY > TGACNTRL-CURNT-YY)
           OR (TGBTRAN-PER > TGACNTRL-CURNT-PER-NUM
               AND TGBTRAN-YY = TGACNTRL-CURNT-YY)
               MOVE TGBTRAN-PER            TO MGBC-PER
               MOVE TGBTRAN-YY             TO MGBC-YY
           ELSE
               MOVE TGACNTRL-CURNT-PER-NUM TO MGBC-PER
               MOVE TGACNTRL-CURNT-YY      TO MGBC-YY
           END-IF
           MOVE 'Y'                    TO MGBC-PER-S
           MOVE 'Y'                    TO MGBC-YY-S
           MOVE 'Y'                    TO MGBC-TRAN-TYPE-S
           MOVE 'Y'                    TO MGBC-TRAN-STYPE-S
           MOVE 'Y'                    TO MGBC-PYMNT-DUE-DATE-S
           MOVE 'Y'                    TO MGBC-CURR-S
           MOVE 'Y'                    TO MGBC-INV-GROSS-AMT-S
           IF MGBC-INV-TAX-AMT NOT = ZERO
              MOVE 'Y'                 TO MGBC-INV-TAX-AMT-S
           ELSE
              MOVE 'N'                 TO MGBC-INV-TAX-AMT-S
           END-IF
           MOVE 'Y'                    TO MGBC-SLFASSD-TAX-IND-S
           MOVE 'Y'                    TO MGBC-SLFASSD-TAX-AMT-S
           MOVE 'Y'                    TO MGBC-TRAN-TAX-CODE-S
           MOVE 'Y'                    TO MGBC-TRAN-TAX-DATE-S
           MOVE 'Y'                    TO MGBC-TRAN-HAND-S
           MOVE TGBTRAN-TAX-CODE       TO MGBC-TRAN-TAX-CODE
           MOVE TGBTRAN-TAX-DATE       TO MGBC-TRAN-TAX-DATE
           MOVE TGBTRAN-HAND           TO MGBC-TRAN-HAND

           IF MGBC-TAKE-DSCNT-IND  NOT = SPACES
              MOVE 'Y'                 TO MGBC-TAKE-DSCNT-IND-S
           ELSE
              MOVE 'N'                 TO MGBC-TAKE-DSCNT-IND-S
           END-IF

           IF MGBC-SNGL-CHQ-FLAG NOT = SPACES
              MOVE 'Y'                 TO MGBC-SNGL-CHQ-FLAG-S
           ELSE
              MOVE 'N'                 TO MGBC-SNGL-CHQ-FLAG-S
           END-IF

           MOVE 'Y'                    TO MGBC-DSCNT-AMT-S
           MOVE 'Y'                    TO MGBC-DSCNT-PERC-S

           IF MGBC-PAYEE-NAME NOT = SPACES
              MOVE 'Y'                 TO MGBC-PAYEE-NAME-S
           ELSE
              MOVE 'N'                 TO MGBC-PAYEE-NAME-S
           END-IF

           PERFORM VARYING CF-SUB
              FROM 1 BY 1
              UNTIL CF-SUB > 6
              IF MGBC-ADDR-LINE (CF-SUB) NOT = SPACES
                 MOVE 'Y'              TO MGBC-ADDR-LINE-S (CF-SUB)
              ELSE
                 MOVE 'N'              TO MGBC-ADDR-LINE-S (CF-SUB)
              END-IF
           END-PERFORM
           IF MGBC-POSTCODE NOT = SPACES
              MOVE 'Y'                 TO MGBC-POSTCODE-S
           ELSE
              MOVE 'N'                 TO MGBC-POSTCODE-S
           END-IF
           IF MGBC-PHONE NOT = SPACES
              MOVE 'Y'                 TO MGBC-PHONE-S
           ELSE
              MOVE 'N'                 TO MGBC-PHONE-S
           END-IF
           IF MGBC-BANK-CNTRY NOT = SPACES
              MOVE 'Y'                 TO MGBC-BANK-CNTRY-S
           ELSE
              MOVE 'N'                 TO MGBC-BANK-CNTRY-S
           END-IF
           IF MGBC-BANK-ACCT NOT = SPACES
              MOVE 'Y'                 TO MGBC-BANK-ACCT-S
           ELSE
              MOVE 'N'                 TO MGBC-BANK-ACCT-S
           END-IF
           IF MGBC-SRT-CODE NOT = SPACES
              MOVE 'Y'                 TO MGBC-SRT-CODE-S
           ELSE
              MOVE 'N'                 TO MGBC-SRT-CODE-S
           END-IF
           IF MGBC-THIRD-PARTY-ACCT NOT = SPACES
              MOVE 'Y'                 TO MGBC-THIRD-PARTY-ACCT-S
           ELSE
              MOVE 'N'                 TO MGBC-THIRD-PARTY-ACCT-S
           END-IF
           IF MGBC-IBAN NOT = SPACES
              MOVE 'Y'                 TO MGBC-IBAN-S
           ELSE
              MOVE 'N'                 TO MGBC-IBAN-S
           END-IF
           IF MGBC-PAYEE-USR-DATA NOT = SPACES
              MOVE 'Y'                 TO MGBC-PAYEE-USR-DATA-S
           ELSE
              MOVE 'N'                 TO MGBC-PAYEE-USR-DATA-S
           END-IF
           IF MGBC-RECUR-INTRVL NOT = SPACES
              MOVE 'Y'                 TO MGBC-RECUR-INTRVL-S
           ELSE
              MOVE 'N'                 TO MGBC-RECUR-INTRVL-S
           END-IF
           IF MGBC-RECUR-OCCUR NOT = ZERO
              MOVE 'Y'                 TO MGBC-RECUR-OCCUR-S
           ELSE
              MOVE 'N'                 TO MGBC-RECUR-OCCUR-S
           END-IF
           IF MGBC-PRPYMNT-OCCUR NOT = ZERO
              MOVE 'Y'                 TO MGBC-PRPYMNT-OCCUR-S
           ELSE
              MOVE 'N'                 TO MGBC-PRPYMNT-OCCUR-S
           END-IF
           IF MGBC-PRPYMNT-STRT-PER NOT = ZERO
              MOVE 'Y'                 TO MGBC-PRPYMNT-STRT-PER-S
           ELSE
              MOVE 'N'                 TO MGBC-PRPYMNT-STRT-PER-S
           END-IF
           IF MGBC-PRPYMNT-STRT-YY NOT = ZERO
              MOVE 'Y'                 TO MGBC-PRPYMNT-STRT-YY-S
           ELSE
              MOVE 'N'                 TO MGBC-PRPYMNT-STRT-YY-S
           END-IF
           IF MGBC-PRE-STTLD-BANK NOT = SPACES
              MOVE 'Y'                 TO MGBC-PRE-STTLD-BANK-S
           ELSE
              MOVE 'N'                 TO MGBC-PRE-STTLD-BANK-S
           END-IF
           IF MGBC-PRE-STTLD-REF NOT = SPACES
              MOVE 'Y'                 TO MGBC-PRE-STTLD-REF-S
           ELSE
              MOVE 'N'                 TO MGBC-PRE-STTLD-REF-S
           END-IF
           IF MGBC-AUTH-CNTRL NOT = SPACES
              MOVE 'Y'                 TO MGBC-AUTH-CNTRL-S
           ELSE
              MOVE 'N'                 TO MGBC-AUTH-CNTRL-S
           END-IF
           IF MGBC-AUTH-GRP NOT = SPACES
              MOVE 'Y'                 TO MGBC-AUTH-GRP-S
           ELSE
              MOVE 'N'                 TO MGBC-AUTH-GRP-S
           END-IF

           IF MGBC-DSCNT-TERM-1 NOT = SPACES
              MOVE 'Y'                 TO MGBC-DSCNT-TERM-1-S
           ELSE
              MOVE 'N'                 TO MGBC-DSCNT-TERM-1-S
           END-IF
           IF MGBC-DSCNT-TERM-2 NOT = SPACES
              MOVE 'Y'                 TO MGBC-DSCNT-TERM-2-S
           ELSE
              MOVE 'N'                 TO MGBC-DSCNT-TERM-2-S
           END-IF
           IF MGBC-DSCNT-TERM-3 NOT = SPACES
              MOVE 'Y'                 TO MGBC-DSCNT-TERM-3-S
           ELSE
              MOVE 'N'                 TO MGBC-DSCNT-TERM-3-S
           END-IF

           IF MGBC-DSCNT-DATE-1 = ZERO OR WZAZLITS-MIN-DATE
              MOVE 'N'                 TO MGBC-DSCNT-DATE-1-S
           ELSE
              MOVE 'Y'                 TO MGBC-DSCNT-DATE-1-S
           END-IF
           IF MGBC-DSCNT-DATE-2 = ZERO OR WZAZLITS-MIN-DATE
              MOVE 'N'                 TO MGBC-DSCNT-DATE-2-S
           ELSE
              MOVE 'Y'                 TO MGBC-DSCNT-DATE-2-S
           END-IF
           IF MGBC-DSCNT-DATE-3 = ZERO OR WZAZLITS-MIN-DATE
              MOVE 'N'                 TO MGBC-DSCNT-DATE-3-S
           ELSE
              MOVE 'Y'                 TO MGBC-DSCNT-DATE-3-S
           END-IF

           IF MGBC-STLMNT       NOT = SPACES
              MOVE 'Y'                 TO MGBC-STLMNT-S
           ELSE
              MOVE 'N'                 TO MGBC-STLMNT-S
           END-IF

           IF MGBC-CRN-INV-SYSREF NOT = ZERO
              MOVE 'Y'                 TO MGBC-CRN-INV-SYSREF-S
           ELSE
              MOVE 'N'                 TO MGBC-CRN-INV-SYSREF-S
           END-IF
           IF MGBC-CRN-INV-REF NOT = SPACES
              MOVE 'Y'                 TO MGBC-CRN-INV-REF-S
           ELSE
              MOVE 'N'                 TO MGBC-CRN-INV-REF-S
           END-IF

           IF TGBTRAN-USR-DATA-LEN > ZERO
              PERFORM LOAD-USR-DATA
           END-IF

           MOVE +1                     TO MGBC-EXCH-RATE
           MOVE 'Y'                    TO MGBC-EXCH-RATE-S

      *--- OBTAIN CURRENCY FIELDS
           IF TGBTRAN-CURR NOT = WAZCMPYD-BASE-CURR
              MOVE CGBB-CMPY           TO TGBCURR-CMPY
              MOVE MGBC-SUPP           TO TGBCURR-SUPP
              MOVE MGBC-ENTRY-DATE     TO TGBCURR-ENTRY-DATE
              MOVE MGBC-SYSREF         TO TGBCURR-SYSREF
              PERFORM SQL-SELECT-TGBCURR
              IF TGBTRAN-TRAN-TYPE = '2' OR '6'
                 MULTIPLY -1 BY TGBCURR-NBASE-GROSS-AMT
                 MULTIPLY -1 BY TGBCURR-NBASE-TAX-AMT
                 MULTIPLY -1 BY TGBCURR-NBASE-DSCNT-AMT
              END-IF
              MOVE TGBCURR-NBASE-GROSS-AMT
                                       TO MGBC-INV-GROSS-AMT
              MOVE TGBCURR-NBASE-TAX-AMT
                                       TO MGBC-INV-TAX-AMT
              MOVE TGBCURR-NBASE-DSCNT-AMT
                                       TO MGBC-DSCNT-AMT
              MOVE TGBCURR-RATE-TYPE   TO MGBC-RATE-TYPE
              IF MGBC-RATE-TYPE NOT = SPACES
                 MOVE 'Y'              TO MGBC-RATE-TYPE-S
              ELSE
                 MOVE 'N'              TO MGBC-RATE-TYPE-S
              END-IF
              MOVE TGBCURR-EFF-DATE    TO MGBC-EFF-DATE
              IF MGBC-EFF-DATE > WZAZLITS-MIN-DATE
                 MOVE 'Y'              TO MGBC-EFF-DATE-S
              ELSE
                 MOVE 'N'              TO MGBC-EFF-DATE-S
              END-IF
              MOVE TGBCURR-EXCH-RATE   TO MGBC-EXCH-RATE
              MOVE 'Y'                 TO MGBC-EXCH-RATE-S
           END-IF

      *--- OBTAIN GL ACCT DATA
           MOVE CGBB-CMPY              TO TGBGLAC-CMPY
           MOVE MGBC-SUPP              TO TGBGLAC-SUPP
           MOVE MGBC-ENTRY-DATE        TO TGBGLAC-ENTRY-DATE
           MOVE MGBC-SYSREF            TO TGBGLAC-SYSREF
           PERFORM SQL-SELECT-TGBGLAC
           IF SQLCODE = WZAZSQL-OK
              MOVE TGBGLAC-GL-CMPY     TO MGBC-HDR-GL-CMPY
              MOVE 'Y'                 TO MGBC-HDR-GL-CMPY-S
              MOVE TGBGLAC-GL-ACCT     TO MGBC-HDR-GL-ACCT
              MOVE 'Y'                 TO MGBC-HDR-GL-ACCT-S
           END-IF

      *--- OBTAIN SUNDRY ADDRESS DETAILS WHEN APPLICABLE
           IF TGBTRAN-PYMNT-ADDR > ZERO
           AND TGBTRAN-ACCT-TYPE = '3'
              MOVE ZERO                TO MGBC-PYMNT-ADDR
              MOVE TGBTRAN-PYMNT-ADDR  TO EGBB0-PYMNT-ADDR
                                          EGBB0-SNDRY-ADDR
              MOVE MGBC-SUPP           TO TPBADDR-SUPP
              MOVE CGBB-CMPY           TO TPBADDR-CMPY
              MOVE TGBTRAN-PYMNT-ADDR  TO TPBADDR-ADDR-NUM
              PERFORM SQL-SELECT-TPBADDR
              IF SQLCODE = WZAZSQL-OK
                 MOVE TPBADDR-PAYEE-NAME
                                       TO MGBC-PAYEE-NAME
                 MOVE 'Y'              TO MGBC-PAYEE-NAME-S
                 MOVE TPBADDR-ADDR-LINE1
                                       TO MGBC-ADDR-LINE (1)
                 MOVE 'Y'              TO MGBC-ADDR-LINE-S (1)
                 MOVE TPBADDR-ADDR-LINE2
                                       TO MGBC-ADDR-LINE (2)
                 MOVE 'Y'              TO MGBC-ADDR-LINE-S (2)
                 MOVE TPBADDR-ADDR-LINE3
                                       TO MGBC-ADDR-LINE (3)
                 MOVE 'Y'              TO MGBC-ADDR-LINE-S (3)
                 MOVE TPBADDR-ADDR-LINE4
                                       TO MGBC-ADDR-LINE (4)
                 MOVE 'Y'              TO MGBC-ADDR-LINE-S (4)
                 MOVE TPBADDR-ADDR-LINE5
                                       TO MGBC-ADDR-LINE (5)
                 MOVE 'Y'              TO MGBC-ADDR-LINE-S (5)
                 MOVE TPBADDR-ADDR-LINE6
                                       TO MGBC-ADDR-LINE (6)
                 MOVE 'Y'              TO MGBC-ADDR-LINE-S (6)
                 MOVE TPBADDR-POSTCODE TO MGBC-POSTCODE
                 MOVE 'Y'              TO MGBC-POSTCODE-S
                 MOVE TPBADDR-PHONE    TO MGBC-PHONE
                 MOVE 'Y'              TO MGBC-PHONE-S
                 MOVE TPBADDR-BANK-CNTRY
                                       TO MGBC-BANK-CNTRY
                 MOVE 'Y'              TO MGBC-BANK-CNTRY-S
                 MOVE TPBADDR-BANK-ACCT
                                       TO MGBC-BANK-ACCT
                 MOVE 'Y'              TO MGBC-BANK-ACCT-S
                 MOVE TPBADDR-SRT-CODE TO MGBC-SRT-CODE
                 MOVE 'Y'              TO MGBC-SRT-CODE-S
                 MOVE TPBADDR-THIRD-PARTY-ACCT
                                       TO MGBC-THIRD-PARTY-ACCT
                 MOVE 'Y'              TO MGBC-THIRD-PARTY-ACCT-S
                 MOVE TPBADDR-TRANS-MECH
                                       TO MGBC-PAYEE-TRANS-MECH
                 MOVE 'Y'              TO MGBC-PAYEE-TRANS-MECH-S
                 MOVE TPBADDR-FAX      TO MGBC-PAYEE-FAX
                 MOVE 'Y'              TO MGBC-PAYEE-FAX-S
                 MOVE TPBADDR-IBAN     TO MGBC-IBAN
                 IF MGBC-IBAN NOT = SPACES
                    MOVE 'Y'           TO MGBC-IBAN-S
                 ELSE
                    MOVE 'N'           TO MGBC-IBAN-S
                 END-IF
                 IF TPBADDR-PAYEE-USR-DATA-LEN > ZERO
                    MOVE TPBADDR-PAYEE-USR-DATA-TEXT
                    (1:TPBADDR-PAYEE-USR-DATA-LEN)
                                       TO MGBC-PAYEE-USR-DATA
                    MOVE 'Y'           TO MGBC-PAYEE-USR-DATA-S
                 END-IF
      *--- CALL ROUTINE  GAMA TO INSERT  E-MAIL ADDRESS

      *--- ADDRESS-TYPE '1' - E-MAIL ADDRESS

                 INITIALIZE CAMAIN

                 MOVE CAMAIN-GET-DETAILS  TO CAMAIN-FUNC
                 MOVE 'TPBADDR'           TO CAMAIN-OWNER-TBL
                 MOVE TPBADDR-CMPY        TO CAMAIN-KEY-CMPY
                 MOVE SPACES              TO CAMAIN-KEY-CHAR-2
                 MOVE TPBADDR-SUPP        TO CAMAIN-KEY-CHAR-12
                 MOVE SPACES              TO CAMAIN-KEY-CHAR-8
                 MOVE SPACES              TO CAMAIN-KEY-CHAR-20
                 MOVE ZEROES              TO CAMAIN-KEY-SMALLINT
                 MOVE TPBADDR-ADDR-NUM    TO CAMAIN-KEY-INTEGER

                 MOVE '1'                 TO CAMAIN-ADDR-TYPE

                 EXEC QSP CALL MAINT_E_ADDR
                      CAMAIN
                      CAMAOUT
                 END-EXEC

                 IF CAMAOUT-ERR-CNT = ZERO
                    MOVE CAMAOUT-ADDR-TXT(1)   TO MGBC-PAYEE-EMAIL-ADDR
                    IF MGBC-PAYEE-EMAIL-ADDR = SPACE
                       MOVE 'N'          TO MGBC-PAYEE-EMAIL-ADDR-S
                    ELSE
                       MOVE 'Y'          TO MGBC-PAYEE-EMAIL-ADDR-S
                    END-IF
                 ELSE
                    MOVE SPACES          TO MGBC-PAYEE-EMAIL-ADDR
                    MOVE 'N'             TO MGBC-PAYEE-EMAIL-ADDR-S
                 END-IF

              END-IF
           ELSE
              MOVE SPACES              TO MGBC-PAYEE-NAME
                                          MGBC-ADDR-LINE (1)
                                          MGBC-ADDR-LINE (2)
                                          MGBC-ADDR-LINE (3)
                                          MGBC-ADDR-LINE (4)
                                          MGBC-ADDR-LINE (5)
                                          MGBC-ADDR-LINE (6)
                                          MGBC-POSTCODE
                                          MGBC-PHONE
                                          MGBC-BANK-CNTRY
                                          MGBC-BANK-ACCT
                                          MGBC-SRT-CODE
                                          MGBC-THIRD-PARTY-ACCT
                                          MGBC-IBAN
                                          MGBC-PAYEE-USR-DATA
                                          MGBC-PAYEE-EMAIL-ADDR
                                          MGBC-PAYEE-TRANS-MECH
                                          MGBC-PAYEE-FAX
              MOVE 'N'                 TO MGBC-PAYEE-NAME-S
                                          MGBC-ADDR-LINE-S (1)
                                          MGBC-ADDR-LINE-S (2)
                                          MGBC-ADDR-LINE-S (3)
                                          MGBC-ADDR-LINE-S (4)
                                          MGBC-ADDR-LINE-S (5)
                                          MGBC-ADDR-LINE-S (6)
                                          MGBC-POSTCODE-S
                                          MGBC-PHONE-S
                                          MGBC-BANK-CNTRY-S
                                          MGBC-BANK-ACCT-S
                                          MGBC-SRT-CODE-S
                                          MGBC-THIRD-PARTY-ACCT-S
                                          MGBC-IBAN-S
                                          MGBC-PAYEE-USR-DATA-S
                                          MGBC-PAYEE-EMAIL-ADDR-S
                                          MGBC-PAYEE-TRANS-MECH-S
                                          MGBC-PAYEE-FAX-S
           END-IF

           MOVE MGBC-SYSREF            TO EGBB0-SYSREF
           MOVE 'Y'                    TO EGBB0-SYSREF-S
                                          MGBC-SYSREF-S
           PERFORM S5-MOVE-HDR-TO-SRC

++IF TARGET(POP=Y)
|
|      UAA-ORDR-RLTD-DATA SECTION.
|
|          MOVE CGBB-CMPY              TO TGBORDR-CMPY
|          MOVE MGBC-SYSREF            TO TGBORDR-SYSREF
|          MOVE TGBTRAN-SUPP           TO TGBORDR-SUPP
|          MOVE TGBTRAN-ENTRY-DATE     TO TGBORDR-ENTRY-DATE
|
|          PERFORM SQL-SELECT-TGBORDR
|
|          IF SQLCODE = WZAZSQL-NOT-FOUND
|
|             MOVE 'Y'                 TO WS-INVALID-HEADER-FLAG
|             MOVE 'E'                 TO CZAZSOFT-MSG-TYPE
|             MOVE 'GBC01'             TO CZAZSOFT-MSG
|             MOVE MGBC-SYSREF-F       TO CZAZSOFT-FIELD
|             PERFORM SZAZSOFT-SET-APPL
|             GO TO +++-EXIT
|          END-IF
|
|     *--- SET THE ORDER RELATED MGBC FIELDS
|
|          IF MGBC-ORDR-REF = SPACES
|          OR MGBC-ORDR-REF-S NOT = 'Y'
|             IF TGBORDR-ORDR-REF NOT = SPACES
|                MOVE TGBORDR-ORDR-REF TO MGBC-ORDR-REF
|                MOVE 'Y'              TO MGBC-ORDR-REF-S
|             ELSE
|                MOVE 'N'              TO MGBC-ORDR-REF-S
|             END-IF
|          END-IF
|
|
++END-IF
       UB-SUPPLIER  SECTION.

           IF WS-INVALID-HEADER-FLAG = 'Y'
              GO TO +++-EXIT
           END-IF

++IF TARGET(POP=Y)
|     *--- MANDATORY IF ORDER REF OR ADVICE NOTE  NOT ENTERED
|          IF  MGBC-SUPP-S      NOT = 'Y'
|          AND MGBC-ORDR-REF-S  NOT = 'Y'
|          AND MGBC-ADVC-NOTE-S NOT = 'Y'
|              MOVE 'Y'                TO WS-INVALID-HEADER-FLAG
|                                         CZAZSOFT-MANDATORY
|              MOVE MGBC-SUPP-F        TO CZAZSOFT-FIELD
|              PERFORM SZAZSOFT-SET-APPL
|              GO TO +++-EXIT
|          END-IF
++ELSE
|     *--- MANDATORY
|          IF MGBC-SUPP-S NOT = 'Y'
|             MOVE 'Y'                 TO WS-INVALID-HEADER-FLAG
|                                         CZAZSOFT-MANDATORY
|             MOVE MGBC-SUPP-F         TO CZAZSOFT-FIELD
|             PERFORM SZAZSOFT-SET-APPL
|             GO TO +++-EXIT
|          END-IF
++END-IF

           IF MGBC-PYMNT-ADDR NOT > 0
              MOVE 'Y'                 TO MGBC-PYMNT-ADDR-S
              MOVE 0                   TO MGBC-PYMNT-ADDR
           END-IF

++IF TARGET(POP=Y)
|          IF MGBC-ORDR-REF-S  = 'Y'
|          OR MGBC-ADVC-NOTE-S = 'Y'
|             IF MGBC-SUPP = SPACES
|                PERFORM UD-ORDR-REF
|             END-IF
|           ELSE
|              MOVE SPACES              TO MGBC-TEXT-MNEM
|                                          EGBB0-TEXT-MNEM
|              MOVE 'N'                 TO MGBC-TEXT-MNEM-S
|          END-IF
++END-IF

           IF MGBC-SUPP NOT = EGBB0-SUPP
              IF EGBB0-SUPP NOT = SPACES
                 MOVE SPACES           TO MGBC-SKEL-CODE
                 MOVE 'N'              TO MGBC-SKEL-CODE-S
              END-IF
              MOVE ZERO                TO TGBTRAN-PYMNT-ADDR
                                          EGBB0-PYMNT-ADDR
                                          EGBB0-SNDRY-ADDR
              MOVE 'Y'                 TO CZAZSOFT-UNPROTECT-IND
              MOVE MGBC-PYMNT-ADDR-F   TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE 'Y'                 TO WS-SUPP-CHANGED
           END-IF

      *--- MUST EXIST
           MOVE CGBB-CMPY              TO TPBSUPP-CMPY
           MOVE MGBC-SUPP              TO TPBSUPP-SUPP
           PERFORM SQL-SELECT-TPBSUPP-1

           IF  TPBSUPP-ORDR-TRM-IND = '1'
           AND MGBC-ORDR-REF    NOT = SPACES
              MOVE SPACES TO TPBSUPP-DSCNT-1
                             TPBSUPP-DSCNT-2
                             TPBSUPP-DSCNT-3
           END-IF

           IF SQLCODE = WZAZSQL-NOT-FOUND
              MOVE 'Y'                 TO WS-INVALID-HEADER-FLAG
              MOVE 'E'                 TO CZAZSOFT-MSG-TYPE
              MOVE 'TPB01'             TO CZAZSOFT-MSG
              MOVE MGBC-SUPP-F         TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              GO TO +++-EXIT
           END-IF

           IF TPBSUPP-DSBLD = 'Y'
              MOVE 'Y'                 TO WS-INVALID-HEADER-FLAG
              MOVE 'E'                 TO CZAZSOFT-MSG-TYPE
              MOVE 'TPB02'             TO CZAZSOFT-MSG
              MOVE MGBC-SUPP-F         TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              GO TO +++-EXIT
           END-IF

           IF TPBSUPP-XML-TRAN-IND = 'R'
           AND CZAZPUBL-FUNC-DEN-LEN > 0
              MOVE CZAZPUBL-FUNC-DENIALS TO CF-DENIALS
              COMPUTE CF-NUM-DENIALS    = CF-NUM-DENIALS / 2
              PERFORM VARYING CF-SUB
                      FROM    1 BY 1
                      UNTIL   CF-SUB    > CF-NUM-DENIALS
                      OR      CF-DENIED = 'Y'
                 IF (CF-DENIED-INTNT (CF-SUB) = 90
                 AND MGBC-ORDR-REF = SPACES)
                 OR (CF-DENIED-INTNT (CF-SUB) = 91
                 AND MGBC-ORDR-REF NOT = SPACES)
                    IF (CGBB-INTENT = WZAZLITS-EDIT-INSERT
                    OR  CGBB-INTENT = WZAZLITS-EDIT-COPY)
                    AND (CGBB-TRAN-TYPE = '1'
                    OR   CGBB-TRAN-TYPE = '2')
                       MOVE 'Y'        TO WS-INVALID-HEADER-FLAG
                       MOVE 'GBC63'    TO CZAZSOFT-MSG
                       MOVE 'E'        TO CZAZSOFT-MSG-TYPE
                       MOVE MGBC-SUPP-F
                                       TO CZAZSOFT-FIELD
                       PERFORM SZAZSOFT-SET-APPL
                       GO TO +++-EXIT
                    END-IF
                 END-IF
              END-PERFORM
           END-IF
           IF TPBSUPP-XML-TRAN-IND = 'R'
           AND CGBB-GB9-FLAG NOT = 'N'
           AND ((CZAZSTCK-ACTION = 52
             AND CGBB-C-GBCZB-WARN-IND NOT = CGBB-ACCEPTED)
             OR CGBB-C-GBCZB-WARN-IND = CGBB-ISSUED
             OR CZAZSTCK-ACTION = WZAZLITS-LINE-WARNINGS)
              MOVE 'W'                 TO CZAZSOFT-MSG-TYPE
              MOVE 'GBC64'             TO CZAZSOFT-MSG
              MOVE MGBC-SUPP-F         TO CZAZSOFT-FIELD
              PERFORM XA-SET-WARNING
              IF CGBB-C-GBCZB-WARN-IND NOT = CGBB-ACCEPTED
                 MOVE 'W'              TO CGBB-C-GBCZB-WARN-IND
              END-IF
              IF CZAZSTCK-ACTION = WZAZLITS-LINE-WARNINGS
                 MOVE CGBB-ACCEPTED    TO CGBB-C-GBCZB-WARN-IND
              END-IF
              IF CGBB-C-GBCZB-WARN-IND NOT = CGBB-ACCEPTED
                 MOVE 'Y'              TO WS-INVALID-HEADER-FLAG
              END-IF
              MOVE MGBC-RCVD-DATE      TO EGBB0-RCVD-DATE
              MOVE MGBC-RCVD-DATE-S    TO EGBB0-RCVD-DATE-S
           END-IF

      *--- RANGE CHECK SUPPLIER TYPE AND CODE
           MOVE TPBSUPP-ACCT-TYPE      TO WAD0WORK-CP-ACCT-TYPE
           MOVE TPBSUPP-SUPP           TO WAD0WORK-CP-SUPP
           PERFORM RANGE-SECURITY-CHECK

      *--- ACCESS NOT ALLOWED ?
           IF CADR-ACCS-ALLWD-FLAG = CADR-ACCS-NOT-ALLWD
              MOVE CADR-MSG            TO CZAZSOFT-MSG
              MOVE 'E'                 TO CZAZSOFT-MSG-TYPE
              MOVE MGBC-SUPP-F         TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              GO TO +++-EXIT
           END-IF

      *--- GET 0 ADDRESS
           MOVE MGBC-SUPP              TO TPBADDR-SUPP
           MOVE CGBB-CMPY              TO TPBADDR-CMPY
           MOVE 0                      TO TPBADDR-ADDR-NUM
           PERFORM SQL-SELECT-TPBADDR

           IF SQLCODE = WZAZSQL-NOT-FOUND

              MOVE 'Y'                 TO WS-INVALID-HEADER-FLAG
              MOVE 'E'                 TO CZAZSOFT-MSG-TYPE
              MOVE 'TPB04'             TO CZAZSOFT-MSG
              MOVE MGBC-SUPP-F         TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              GO TO +++-EXIT
           END-IF

           IF TPBADDR-DSBLD = 'Y'

              MOVE 'Y'                 TO WS-INVALID-HEADER-FLAG
              MOVE 'E'                 TO CZAZSOFT-MSG-TYPE
              MOVE 'TPB05'             TO CZAZSOFT-MSG
              MOVE MGBC-SUPP-F         TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              GO TO +++-EXIT
           END-IF

      *--- SET UP 0 ADDRESS ON SCREEN
           MOVE TPBSUPP-NAME           TO MGBC-SUPP-NAME
                                          CGBB-NAME
           MOVE 'Y'                    TO MGBC-SUPP-NAME-S
           MOVE TPBADDR-ADDR-LINE1     TO MGBC-SUPP-ADDR   (1)
           MOVE 'Y'                    TO MGBC-SUPP-ADDR-S (1)
           MOVE TPBADDR-ADDR-LINE2     TO MGBC-SUPP-ADDR   (2)
           MOVE 'Y'                    TO MGBC-SUPP-ADDR-S (2)
           PERFORM ADDITIONAL-DETAILS

      *--- Only Select on TPBADDR when indicator is not zero

           IF TPACNTRL-AP-MULTI-ADDR-IND NOT = '0'
              MOVE CGBB-CMPY           TO TPBADDR-CMPY
              MOVE MGBC-SUPP           TO TPBADDR-SUPP
              PERFORM SQL-COUNT-TPBADDR
              IF CF-COUNT > 1
                 MOVE 'Y'           TO WS-MULTI-ADDR-NUM
              ELSE
                 MOVE SPACES        TO WS-MULTI-ADDR-NUM
              END-IF
           END-IF

           IF TPACNTRL-AP-MULTI-ADDR-IND = '1'
              IF WS-MULTI-ADDR-NUM = 'Y'
                 MOVE 'Y'              TO MGBC-MULTI-ADDR
                                          MGBC-MULTI-ADDR-S
              ELSE
                 MOVE SPACES           TO MGBC-MULTI-ADDR
                 MOVE 'N'              TO MGBC-MULTI-ADDR-S
              END-IF
           ELSE
              IF TPACNTRL-AP-MULTI-ADDR-IND = '2'
                 IF TPBSUPP-MULT-PYMNT-ADDR = 'Y'
                 AND WS-MULTI-ADDR-NUM = 'Y'
                    MOVE 'Y'           TO MGBC-MULTI-ADDR
                                          MGBC-MULTI-ADDR-S
                 ELSE
                    MOVE SPACES        TO MGBC-MULTI-ADDR
                    MOVE 'N'           TO MGBC-MULTI-ADDR-S
                 END-IF
              END-IF
           END-IF

           IF WS-SUPP-CHANGED = 'Y'
              IF CGBB-LOG-FLAG = SPACES
              AND MGBC-SYSREF = ZERO
                 IF MGBC-SNGL-CHQ-FLAG-S NOT = 'Y'
                    MOVE SPACES        TO EGBB0-SNGL-CHQ-DFLT
                    MOVE SPACES        TO MGBC-SNGL-CHQ-FLAG
                    MOVE SPACES        TO MGBC-SNGL-CHQ-FLAG-S
                 END-IF
              END-IF
              IF EGBB0-PYMNT-DUE-DATE = EGBB0-DUE-DATE-OLD
                 MOVE WZAZLITS-MIN-DATE
                                       TO MGBC-PYMNT-DUE-DATE
                 MOVE 'N'              TO MGBC-PYMNT-DUE-DATE-S
                 MOVE WZAZLITS-MIN-DATE
                                       TO EGBB0-PYMNT-DUE-DATE
                 MOVE 'N'              TO EGBB0-PYMNT-DUE-DATE-S
              END-IF
              IF EGBB0-TAX-CODE = EGBB0-LAST-TAX-CODE
                 MOVE SPACES           TO MGBC-TRAN-TAX-CODE
                 MOVE 'N'              TO MGBC-TRAN-TAX-CODE-S
                 MOVE SPACES           TO EGBB0-TAX-CODE
                 MOVE 'N'              TO EGBB0-TAX-CODE-S
                 MOVE SPACES           TO MGBC-TRAN-HAND
                 MOVE 'N'              TO MGBC-TRAN-HAND-S
                 MOVE SPACES           TO EGBB0-HAND
                 MOVE 'N'              TO EGBB0-HAND-S
              END-IF
              IF EGBB0-TAX-TYPE = EGBB0-LAST-TAX-TYPE
                 MOVE SPACES           TO MGBC-TRAN-TAX-TYPE
                 MOVE 'N'              TO MGBC-TRAN-TAX-TYPE-S
                 MOVE SPACES           TO EGBB0-TAX-TYPE
                 MOVE 'N'              TO EGBB0-TAX-TYPE-S
              END-IF
              IF EGBB0-LOCTN    = EGBB0-LAST-LOCTN
                 MOVE SPACES           TO MGBC-TRAN-LOCTN
                 MOVE 'N'              TO MGBC-TRAN-LOCTN-S
                 MOVE SPACES           TO EGBB0-LOCTN
                 MOVE 'N'              TO EGBB0-LOCTN-S
              END-IF
              IF EGBB0-DSCNT-TERM-1 = EGBB0-LAST-DSCNT-TERM-1
                 MOVE SPACES           TO MGBC-DSCNT-TERM-1
                 MOVE 'N'              TO MGBC-DSCNT-TERM-1-S
                 MOVE SPACES           TO EGBB0-DSCNT-TERM-1
                 MOVE 'N'              TO EGBB0-DSCNT-TERM-1-S
              END-IF
              IF EGBB0-DSCNT-TERM-2 = EGBB0-LAST-DSCNT-TERM-2
                 MOVE SPACES           TO MGBC-DSCNT-TERM-2
                 MOVE 'N'              TO MGBC-DSCNT-TERM-2-S
                 MOVE SPACES           TO EGBB0-DSCNT-TERM-2
                 MOVE 'N'              TO EGBB0-DSCNT-TERM-2-S
              END-IF
              IF EGBB0-DSCNT-TERM-3 = EGBB0-LAST-DSCNT-TERM-3
                 MOVE SPACES           TO MGBC-DSCNT-TERM-3
                 MOVE 'N'              TO MGBC-DSCNT-TERM-3-S
                 MOVE SPACES           TO EGBB0-DSCNT-TERM-3
                 MOVE 'N'              TO EGBB0-DSCNT-TERM-3-S
              END-IF
              IF EGBB0-STLMNT = EGBB0-STLMNT-OLD
                 MOVE SPACES           TO MGBC-STLMNT
                 MOVE 'N'              TO MGBC-STLMNT-S
                 MOVE SPACES           TO EGBB0-STLMNT
                 MOVE 'N'              TO EGBB0-STLMNT-S
              ELSE
                 IF EGBB0-STLMNT-OLD = SPACES
                    MOVE SPACES        TO MGBC-STLMNT
                    MOVE 'N'           TO MGBC-STLMNT-S
                    MOVE SPACES        TO EGBB0-STLMNT
                    MOVE 'N'           TO EGBB0-STLMNT-S
                 END-IF
              END-IF
           END-IF

      *--- IF SUNDRY SUPPLIER, RESERVE NEXT ADDRESS NUMBER
           IF TPBSUPP-ACCT-TYPE = TPBSUPP-ACCT-SNDRY
              MOVE TPBSUPP-NAME        TO MGBC-SUPP-NAME
                                          CGBB-NAME
              MOVE 'Y'                 TO MGBC-SUPP-NAME-S
              MOVE 'N'                 TO MGBC-SUPP-ADDR-S (1)
              MOVE 'N'                 TO MGBC-SUPP-ADDR-S (2)
           ELSE
              MOVE ZERO                TO EGBB0-SNDRY-ADDR
           END-IF

           IF TPBSUPP-DUP-INVCE-FLAG = SPACES
              MOVE WZAZLITS-MIN-DATE   TO EGBB0-DUP-TRAN-DATE
           ELSE
              MOVE EGBB0-TRAN-DATE     TO EGBB0-DUP-TRAN-DATE
           END-IF

           MOVE MGBC-SUPP              TO EGBB0-SUPP
           MOVE MGBC-SUPP-S            TO EGBB0-SUPP-S
           MOVE MGBC-SUPP-POSTCODE     TO EGBB0-SUPP-POSTCODE
           MOVE MGBC-SUPP-POSTCODE-S   TO EGBB0-SUPP-POSTCODE-S

       UC-BUILD-LINES SECTION.

           MOVE EGBC0R-NENTRIES        TO EGBC0P-LOG-AFTER
           PERFORM EGBC0-CREATE

           MOVE 'Y'                    TO EGBC0-ORIG-FLAG
           MOVE 'Y'                    TO EGBC0-EDIT-CMD-S
           MOVE ALL '_'                TO EGBC0-EDIT-CMD

           MOVE 'Y'                    TO EGBC0-SEL
                                          EGBC0-SEL-S

           IF TGBSKDTL-DESCR NOT = SPACES
              MOVE TGBSKDTL-DESCR      TO EGBC0-DESCR
              MOVE 'Y'                 TO EGBC0-DESCR-S
           ELSE
              MOVE 'N'                 TO EGBC0-DESCR-S
           END-IF

           IF  TGACNTRL-DETL-TAX-FLAG = 'Y'
           AND CGBB-TRAN-TYPE     NOT = WGZZCNTL-TYPE-DRN
              IF TGBSKDTL-TAX-CODE NOT = SPACES
                 MOVE TGBSKDTL-TAX-CODE
                                       TO EGBC0-TAX-CODE
                 MOVE 'Y'              TO EGBC0-TAX-CODE-S
              ELSE
                 MOVE 'N'              TO EGBC0-TAX-CODE-S
              END-IF

              IF TGBSKDTL-TAX-TYPE NOT = SPACES
                 MOVE TGBSKDTL-TAX-TYPE
                                       TO EGBC0-TAX-TYPE
                 MOVE 'Y'              TO EGBC0-TAX-TYPE-S
              ELSE
                 MOVE 'N'              TO EGBC0-TAX-TYPE-S
              END-IF

              IF TGBSKDTL-LOCTN NOT = SPACES
                 MOVE TGBSKDTL-LOCTN   TO EGBC0-LOCTN
                 MOVE 'Y'              TO EGBC0-LOCTN-S
              ELSE
                 MOVE 'N'              TO EGBC0-LOCTN-S
              END-IF

              IF TGBSKDTL-TAX-HAND-CODE NOT = SPACES
                 MOVE TGBSKDTL-TAX-HAND-CODE
                                       TO EGBC0-HAND
                 MOVE 'Y'              TO EGBC0-HAND-S
              ELSE
                 MOVE 'N'              TO EGBC0-HAND-S
              END-IF
           END-IF

           IF TGBSKDTL-SA-TYPE NOT = '0'
              MOVE TGBSKDTL-SA-TYPE    TO EGBC0-SA-TYPE
              MOVE 'Y'                 TO EGBC0-SA-TYPE-S
           ELSE
              MOVE 'N'                 TO EGBC0-SA-TYPE-S
           END-IF

           IF TGBSKDTL-GL-CMPY NOT = SPACES
              MOVE TGBSKDTL-GL-CMPY    TO EGBC0-GL-CMPY
              MOVE 'Y'                 TO EGBC0-GL-CMPY-S
           ELSE
              MOVE 'N'                 TO EGBC0-GL-CMPY-S
           END-IF

           IF TGBSKDTL-GL-ACCT NOT = SPACES
              MOVE TGBSKDTL-GL-ACCT    TO EGBC0-GL-ACCT
              MOVE 'Y'                 TO EGBC0-GL-ACCT-S
              ADD +1                   TO EGBB0-SA-LINES
           ELSE
              MOVE 'N'                 TO EGBC0-GL-ACCT-S
           END-IF

           IF TGBSKDTL-ANAL NOT = SPACES
              MOVE TGBSKDTL-ANAL       TO EGBC0-GL-ANAL
              MOVE 'Y'                 TO EGBC0-GL-ANAL-S
           ELSE
              MOVE 'N'                 TO EGBC0-GL-ANAL-S
           END-IF

           IF TGBSKDTL-RECON NOT = SPACES
              MOVE TGBSKDTL-RECON      TO EGBC0-RECON
              MOVE 'Y'                 TO EGBC0-RECON-S
           ELSE
              MOVE 'N'                 TO EGBC0-RECON-S
           END-IF

           IF TGBSKDTL-PROJ NOT = SPACES
              MOVE TGBSKDTL-PROJ       TO EGBC0-PROJ
              MOVE 'Y'                 TO EGBC0-PROJ-S
           ELSE
              MOVE 'N'                 TO EGBC0-PROJ-S
           END-IF

           IF TGBSKDTL-WHOLD-USE-IND NOT = SPACES
              MOVE TGBSKDTL-WHOLD-USE-IND
                                       TO EGBC0-WHOLD-USE-IND
              MOVE 'Y'                 TO EGBC0-WHOLD-USE-IND-S
           ELSE
              MOVE 'N'                 TO EGBC0-WHOLD-USE-IND-S
           END-IF

           IF TGBSKDTL-EXCLD-DSCNT-FLAG NOT = SPACES
              MOVE TGBSKDTL-EXCLD-DSCNT-FLAG
                                       TO EGBC0-EXCLD-DSCNT-FLAG
              MOVE 'Y'                 TO EGBC0-EXCLD-DSCNT-FLAG-S
           ELSE
              MOVE 'N'                 TO EGBC0-EXCLD-DSCNT-FLAG-S
           END-IF

           IF TGBSKDTL-PRO-RATA-IND NOT = SPACES
              MOVE TGBSKDTL-PRO-RATA-IND
                                       TO EGBC0-PRO-RATA-IND
              MOVE 'Y'                 TO EGBC0-PRO-RATA-IND-S

              IF EGBC0-PRO-RATA-IND = '0'
                 ADD 1                 TO EGBB0-PR-RCVD-LINES
              END-IF
              IF EGBC0-PRO-RATA-IND = '2'
                 ADD 1                 TO EGBB0-PR-LINES
              END-IF
           ELSE
              MOVE 'N'                 TO EGBC0-PRO-RATA-IND-S
           END-IF

           IF TGBSKDTL-PYMNT-ANAL NOT = SPACES
              MOVE TGBSKDTL-PYMNT-ANAL TO EGBC0-PYMNT-ANAL
              MOVE 'Y'                 TO EGBC0-PYMNT-ANAL-S
           ELSE
              MOVE 'N'                 TO EGBC0-PYMNT-ANAL-S
           END-IF

      *--- FORCE VALIDATION OF ALL LINES TO ENSURE NOTHING GETS MISSED
           MOVE '0'                    TO CZAZSTCK-LINE-ERROR
           MOVE 1                      TO CGBB-C-MAP-LINE
           PERFORM MGBC-LOAD-ROW
           PERFORM V-VALIDATE-ROW
           PERFORM MGBC-ROW-TO-SRC

           IF CZAZSTCK-LINE-INVALID
              ADD  1                   TO CGBB-C-ERROR-COUNT
              MOVE '1'                 TO EGBC0-STATUS-FLAG
           ELSE
              IF CZAZSTCK-LINE-WARNINGS
                 ADD  1                TO CGBB-C-WARNING-COUNT
                 MOVE '2'              TO EGBC0-STATUS-FLAG
              END-IF
           END-IF

           PERFORM SQL-FETCH-TGBSKDTL

++IF TARGET(POP=Y)
|      UD-ORDR-REF SECTION.
|
|     *--- MOVE MGBC DATA TO CGBU DATA
|
|          INITIALIZE CGBU
|
|          MOVE CGBU-VLDTE-ORDR-DETL   TO CGBU-FUNC
|          MOVE CGBB-QTY-MISMTCH-DBN   TO CGBU-QTY-MISMTCH-DBN
|          MOVE MGBC-CMPY              TO CGBU-CMPY
|          MOVE MGBC-SUPP              TO CGBU-SUPP
|          MOVE MGBC-CURR              TO CGBU-CURR
|          MOVE MGBC-ORDR-REF          TO CGBU-ORDR-REF
|          MOVE MGBC-ADVC-NOTE         TO CGBU-ADVC-NOTE
|          MOVE MGBC-ORDR-REF-F        TO CGBU-ORDR-REF-F
|          MOVE MGBC-ADVC-NOTE-F       TO CGBU-ADVC-NOTE-F
|          MOVE MGBC-TRAN-TYPE         TO CGBU-TRAN-TYPE
|          MOVE MGBC-EXCH-RATE         TO CGBU-EXCH-RATE
|          MOVE MGBC-ELEM              TO CGBU-ELEM
|          MOVE MGBC-ELEM-F            TO CGBU-ELEM-F
|          MOVE MGBC-SUPP-POSTCODE     TO CGBU-SUPP-POSTCODE
|          MOVE MGBC-SUPP-POSTCODE-F   TO CGBU-SUPP-POSTCODE-F
|          MOVE TGACNTRL-POSTCODE-ENT-IND
|                                      TO CGBU-POSTCODE-ENT-IND
|
|          IF  EGBB0-ORIG-FLAG     = 'Y'
|          AND (MGBC-ORDR-REF  NOT = SPACES
|          OR   MGBC-ADVC-NOTE NOT = SPACES)
|              MOVE 'Y'                TO CGBU-ORDR-LOCK-FLAG
|          END-IF
|
|     *--- MAKE SURE POP-FLAG ON PARAMETER TABLE TPBSUPP IS READ
|
|          EXEC QSP CALL VLDTE_PL_ORDR_DETS
|               CGBU
|               TPBSUPP
|               TDADOC
|               TDOORDER
|          END-EXEC
|
|          MOVE ZERO                   TO WS-WARN-ACCPT-CNT
|
|          PERFORM VARYING CF-SUB
|                  FROM 1 BY 1
|                  UNTIL CF-SUB > CGBU-COUNT
|            IF CGBU-ERR (CF-SUB) = 'W'
|               ADD 1                  TO WS-WARN-ACCPT-CNT
|            END-IF
             IF CGBU-MSG (CF-SUB) = 'GBU09'
             AND CZAZSTCK-ACTION              = 43
                 MOVE 'Y'              TO WS-UPDATE-ORDER-FLAG
             ELSE
                 MOVE SPACE            TO WS-UPDATE-ORDER-FLAG
             END-IF
|            MOVE CGBU-ERR (CF-SUB)    TO CZAZSOFT-MSG-TYPE
|            MOVE CGBU-MSG (CF-SUB)    TO CZAZSOFT-MSG
|            MOVE CGBU-MSG-F (CF-SUB)  TO CZAZSOFT-FIELD
|            MOVE CGBU-SUBTXT (CF-SUB) TO CZAZSOFT-SUBTEXT
|            PERFORM XA-SET-WARNING
|          END-PERFORM
|
|     *--- ANY ERRORS THEN EXIT
|          IF CGBU-COUNT > ZERO          AND
|             CGBU-COUNT > WS-WARN-ACCPT-CNT
              AND WS-UPDATE-ORDER-FLAG = SPACE
|             MOVE 'Y'                 TO WS-INVALID-HEADER-FLAG
|             GO TO +++-EXIT
|          END-IF
|
|     *--- ENSURE THAT THE USER IS NOT POP RELATED DATA FOR TAX ONLY
|     *--- TRANSACTION
|
|          IF EGBB0-TAX-ONLY-FLAG = 'Y'
|             IF  MGBC-ORDR-REF-S      = 'Y'
|             AND MGBC-ORDR-REF    NOT = SPACES
|                 MOVE 'GBC29'         TO CZAZSOFT-MSG
|                 MOVE 'E'             TO CZAZSOFT-MSG-TYPE
|                 PERFORM SZAZSOFT-SCREEN-LEVEL-MESS
|                 GO TO +++-EXIT
|             END-IF
|          END-IF
|
|          IF EGBB0-TAX-ONLY-FLAG = 'Y'
|             IF  MGBC-ADVC-NOTE-S     = 'Y'
|             AND MGBC-ADVC-NOTE   NOT = SPACES
|                 MOVE 'GBC29'         TO CZAZSOFT-MSG
|                 MOVE 'E'             TO CZAZSOFT-MSG-TYPE
|                 PERFORM SZAZSOFT-SCREEN-LEVEL-MESS
|                 GO TO +++-EXIT
|             END-IF
|          END-IF
|
|     *--- MOVE CGBUOUT DATA TO MGBC & EGBB0
|          IF CGBU-SUPP NOT = SPACES
|             MOVE CGBU-SUPP           TO MGBC-SUPP
|                                         EGBB0-SUPP
|             MOVE 'Y'                 TO MGBC-SUPP-S
|                                         EGBB0-SUPP-S
|          END-IF
|
|          IF  EGBB0-PYMNT-ADDR-DFLT = SPACES
|          AND TGACNTRL-PYMNT-ADDR-DFLT = 'Y'
|          AND TPBSUPP-MULT-PYMNT-ADDR = 'Y'
|             MOVE CGBU-ADDR-NUM       TO MGBC-PYMNT-ADDR
|                                         EGBB0-PYMNT-ADDR
|             MOVE 'Y'                 TO MGBC-PYMNT-ADDR-S
|                                         EGBB0-PYMNT-ADDR-S
|                                         EGBB0-PYMNT-ADDR-DFLT
|          END-IF
|
|          IF CGBU-CURR NOT = SPACES
|             MOVE CGBU-CURR           TO MGBC-CURR
|                                         EGBB0-CURR
|             MOVE 'Y'                 TO MGBC-CURR-S
|                                         EGBB0-CURR-S
|          END-IF
|
|          IF CGBU-ORDR-REF NOT = SPACES
|             MOVE CGBU-ORDR-REF       TO MGBC-ORDR-REF
|                                         EGBB0-ORDR-REF
|             MOVE 'Y'                 TO MGBC-ORDR-REF-S
|                                         EGBB0-ORDR-REF-S
|          END-IF
|
|          IF CGBU-ADVC-NOTE NOT = SPACES
|             MOVE CGBU-ADVC-NOTE      TO MGBC-ADVC-NOTE
|                                         EGBB0-ADVC-NOTE
|             MOVE 'Y'                 TO MGBC-ADVC-NOTE-S
|                                         EGBB0-ADVC-NOTE-S
|          END-IF
|
|          IF CGBU-ELEM      NOT = SPACES
|             MOVE CGBU-ELEM           TO MGBC-ELEM
|                                         EGBB0-ELEM
|             MOVE 'Y'                 TO MGBC-ELEM-S
|                                         EGBB0-ELEM-S
|          END-IF
|
|          IF CGBU-SUPP-POSTCODE NOT = SPACES
|             MOVE CGBU-SUPP-POSTCODE  TO MGBC-SUPP-POSTCODE
|                                         EGBB0-SUPP-POSTCODE
|             MOVE 'Y'                 TO MGBC-SUPP-POSTCODE-S
|                                         EGBB0-SUPP-POSTCODE-S
|          END-IF
|
|          IF TDOORDER-STLMNT NOT = SPACES
|          AND MGBC-STLMNT-S NOT = 'Y'
|            MOVE TDOORDER-STLMNT      TO MGBC-STLMNT
|                                         EGBB0-STLMNT
|            MOVE 'Y'                  TO MGBC-STLMNT-S
|          END-IF
|
|          IF TPBSUPP-ORDR-TRM-IND = '1'
|            IF TDOORDER-DSCNT-TERMS-1 NOT = SPACES
|            AND MGBC-DSCNT-TERM-1-S NOT = 'Y'
|               MOVE TDOORDER-DSCNT-TERMS-1
|                 TO MGBC-DSCNT-TERM-1
|                    EGBB0-DSCNT-TERM-1
|               MOVE 'Y'               TO MGBC-DSCNT-TERM-1-S
|                                         EGBB0-DSCNT-TERM-1-S
|            END-IF
|            IF TDOORDER-DSCNT-TERMS-2 NOT = SPACES
|            AND MGBC-DSCNT-TERM-2-S NOT = 'Y'
|               MOVE TDOORDER-DSCNT-TERMS-2
|                 TO MGBC-DSCNT-TERM-2
|                    EGBB0-DSCNT-TERM-2
|               MOVE 'Y'               TO MGBC-DSCNT-TERM-2-S
|                                         EGBB0-DSCNT-TERM-2-S
|            END-IF
|            IF TDOORDER-DSCNT-TERMS-3 NOT = SPACES
|            AND MGBC-DSCNT-TERM-3-S NOT = 'Y'
|               MOVE TDOORDER-DSCNT-TERMS-3
|                 TO MGBC-DSCNT-TERM-3
|                    EGBB0-DSCNT-TERM-3
|               MOVE 'Y'               TO MGBC-DSCNT-TERM-3-S
|                                         EGBB0-DSCNT-TERM-3-S
|            END-IF
|          END-IF
|
|          IF CGBU-TXT-LIT   NOT = SPACES
|             MOVE CGBU-TXT-LIT        TO MGBC-TEXT-MNEM
|                                         EGBB0-TEXT-MNEM
|             MOVE 'Y'                 TO MGBC-TEXT-MNEM-S
|          ELSE
|             MOVE SPACES              TO MGBC-TEXT-MNEM
|                                         EGBB0-TEXT-MNEM
|             MOVE 'N'                 TO MGBC-TEXT-MNEM-S
|          END-IF
|
|          IF TDOORDER-ALT-INVCE-SUPP NOT = SPACES
|             MOVE TDOORDER-ALT-INVCE-SUPP
|                                      TO MGBC-ALT-INVCE-SUPP
|                                         EGBB0-ALT-INVCE-SUPP
|             MOVE 'Y'                 TO MGBC-ALT-INVCE-SUPP-S
|                                         EGBB0-ALT-INVCE-SUPP-S
|          ELSE
|             MOVE SPACES              TO MGBC-ALT-INVCE-SUPP
|                                         EGBB0-ALT-INVCE-SUPP
|             MOVE 'N'                 TO MGBC-ALT-INVCE-SUPP-S
|                                         EGBB0-ALT-INVCE-SUPP-S
|             MOVE SPACES              TO MGBC-ALT-SUPP-ADDR (1)
|             MOVE 'N'                 TO MGBC-ALT-SUPP-ADDR-S (1)
|             MOVE SPACES              TO MGBC-ALT-SUPP-ADDR (2)
|             MOVE 'N'                 TO MGBC-ALT-SUPP-ADDR-S (2)
|             MOVE SPACES              TO MGBC-ALT-SUPP-NAME
|             MOVE 'N'                 TO MGBC-ALT-SUPP-NAME-S
|          END-IF
|
|     *--- IF ALTERNATE SUPPLIER FOUND POPULATE MAP
|
|          IF MGBC-ALT-INVCE-SUPP-S = 'Y'
|             MOVE CGBB-CMPY           TO TPBSUPP-CMPY
|             MOVE MGBC-ALT-INVCE-SUPP TO TPBSUPP-SUPP
|             PERFORM SQL-SELECT-TPBSUPP-1
|
|             IF SQLCODE = WZAZSQL-OK
|                MOVE CGBB-CMPY        TO TPBADDR-CMPY
|                MOVE MGBC-ALT-INVCE-SUPP
|                                      TO TPBADDR-SUPP
|                MOVE ZERO             TO TPBADDR-ADDR-NUM
|                PERFORM SQL-SELECT-TPBADDR
|
|                IF SQLCODE = WZAZSQL-OK
|                   MOVE TPBADDR-ADDR-LINE1
|                                      TO MGBC-ALT-SUPP-ADDR (1)
|                   MOVE 'Y'           TO MGBC-ALT-SUPP-ADDR-S (1)
|                   MOVE TPBADDR-ADDR-LINE2
|                                      TO MGBC-ALT-SUPP-ADDR (2)
|                   MOVE 'Y'           TO MGBC-ALT-SUPP-ADDR-S (2)
|                   MOVE TPBSUPP-NAME  TO MGBC-ALT-SUPP-NAME
|                   MOVE 'Y'           TO MGBC-ALT-SUPP-NAME-S
|                END-IF
|             END-IF
|          END-IF
|
|      UE-ORDR-BUILD-LINES SECTION.
|
|           IF MGBC-ORDR-REF NOT = SPACES
|              MOVE MGBC-ORDR-REF    TO CDOZ-ORDR-REF
|              MOVE CDOZ-FGRND-LOCK  TO CDOZ-FUNC
|              MOVE CGBB-CMPY        TO CDOZ-CMPY
|              MOVE TDOORDER-DOC-ORDR
|                                    TO CDOZ-DOC-IND
|              MOVE CZAZPUBL-USR     TO CDOZ-LOCK-USR
|              MOVE CZAZSTCK-CURR-SESS
|                                    TO CDOZ-LOCK-SESS
|
|              EXEC QSP CALL ORDR_LOCK_UNLOCK
|                   CDOZ
|              END-EXEC
|              IF CDOZ-USR-LOCKED = 'Y'
|                MOVE 'Y'            TO WS-INVALID-HEADER-FLAG
|                MOVE 'E'               TO CZAZSOFT-MSG-TYPE
|                MOVE 'GBC46'           TO CZAZSOFT-MSG
|                MOVE MGBC-ORDR-REF-F   TO CZAZSOFT-FIELD
|                PERFORM SZAZSOFT-SET-APPL
|                GO TO +++-EXIT
|              END-IF
|              IF CDOZ-ERR = 'E'
|                MOVE 'Y'            TO WS-INVALID-HEADER-FLAG
|                MOVE 'E'               TO CZAZSOFT-MSG-TYPE
|                MOVE 'GBC52'           TO CZAZSOFT-MSG
|                MOVE MGBC-ORDR-REF-F   TO CZAZSOFT-FIELD
|                PERFORM SZAZSOFT-SET-APPL
|                GO TO +++-EXIT
|              END-IF
|           END-IF

|     *--- CHECK EXISTING DETAIL LINES FOR THE SAME ORDER REF
|          MOVE EGBB0P-LOG-ENTRY       TO WS-SAVE-ENTRY
|          MOVE CGBB-C-ESN             TO WS-SAVE-ESN-ENTRY
|          PERFORM VARYING EGBB0P-LOG-ENTRY FROM 1 BY 1
|                  UNTIL EGBB0P-LOG-ENTRY > EGBB0R-NENTRIES
|            PERFORM EGBB0-GET
|            MOVE EGBB0R-ESN-ENTRY     TO CGBB-C-ESN
|            PERFORM EGBC0-DEFINE
|            IF EGBB0P-LOG-ENTRY NOT = WS-SAVE-ENTRY
|              PERFORM VARYING EGBC0P-LOG-ENTRY
|                 FROM 1 BY 1
|                 UNTIL EGBC0P-LOG-ENTRY > EGBC0R-NENTRIES
|                 PERFORM EGBC0-GET
|                 IF EGBC0-ORDR-REF NOT = MGBC-ORDR-REF
|                 OR EGBC0-SEL = SPACES
|                   CONTINUE
|                 ELSE
|                   MOVE 'Y'           TO WS-INVALID-HEADER-FLAG
|                   MOVE 'E'           TO CZAZSOFT-MSG-TYPE
|                   MOVE 'GBC46'       TO CZAZSOFT-MSG
|                   MOVE MGBC-ORDR-REF-F
|                                      TO CZAZSOFT-FIELD
|                   PERFORM SZAZSOFT-SET-APPL
|                   PERFORM EGBC0-CLOSE
|                   PERFORM EGBB0-CLOSE
|                   MOVE WS-SAVE-ESN-ENTRY
|                                      TO CGBB-C-ESN
|                   MOVE WS-SAVE-ENTRY TO EGBB0P-LOG-ENTRY
|                   PERFORM EGBB0-GET
|                   GO TO +++-EXIT
|                 END-IF
|              END-PERFORM
|              PERFORM EGBC0-CLOSE
|            END-IF
|          END-PERFORM
|          MOVE WS-SAVE-ESN-ENTRY      TO CGBB-C-ESN
|          MOVE WS-SAVE-ENTRY          TO EGBB0P-LOG-ENTRY
|          PERFORM EGBB0-GET
|
|          PERFORM EGRA0-CLOSE
|          PERFORM EGBB0-CLOSE
|
|          INITIALIZE CGRM
|
|          MOVE CGBB-NEXT-EGRB0-GRP    TO CGRM-NEXT-EGRB0-GRP
|          MOVE CGBB-NEXT-EGBD0-GRP    TO CGRM-NEXT-EGBD0-GRP
|
|          IF MGBC-ADVC-NOTE = SPACES
|             MOVE CGRM-BUILD-ALL         TO CGRM-FUNC
|          ELSE
|             MOVE CGRM-BUILD-EGRA0       TO CGRM-FUNC
|          END-IF
|
|          MOVE CGRM-DOC-ORDR          TO CGRM-DOC-IND
|          MOVE CGBB-CMPY              TO CGRM-CMPY
|          MOVE CGBB-TRAN-TYPE         TO CGRM-TRAN-TYPE
|          MOVE MGBC-ORDR-REF          TO CGRM-ORDR-REF
|          MOVE MGBC-ADVC-NOTE         TO CGRM-ADVC-NOTE
|          MOVE MGBC-SUPP              TO CGRM-SUPP
|          MOVE MGBC-SEL-AUTO          TO CGRM-SEL-AUTO
|          MOVE MGBC-SEL-ALL           TO CGRM-SEL-ALL
|          MOVE MGBC-SLFASSD-TAX-IND   TO CGRM-SLFASSD-TAX-IND
|
|          MOVE MGBC-CURR              TO CGRM-TRAN-CURR
|          MOVE WAZCMPYD-BASE-CURR     TO CGRM-BASE-CURR
|
|          MOVE CGBB-EWS-INSTANCE      TO CGRM-EWS-INSTANCE
|          MOVE CGBB-C-ESN             TO CGRM-C-ESN
|          MOVE CGBB-RA-ESN            TO CGRM-RA-ESN
|          MOVE CGBB-RB-ESN            TO CGRM-RB-ESN
|          MOVE CGBB-C-LOG-ENTRY       TO CGRM-B-LOG-ENTRY
|          MOVE CGBVOUT-AUTH-ORDR-RLTD TO CGRM-AUTH-ORDR-RLTD
|
|          EXEC QSP CALL BUILD_EWS_PL_TRAN
|               CGRM
|          END-EXEC
|
|          MOVE CGRM-NEXT-EGRB0-GRP    TO CGBB-NEXT-EGRB0-GRP
|          MOVE CGRM-NEXT-EGBD0-GRP    TO CGBB-NEXT-EGBD0-GRP
|
|          PERFORM EGBC0-COPY-EWS
|          PERFORM EGBB0-DEFINE
|          MOVE CGBB-C-LOG-ENTRY       TO EGBB0P-LOG-ENTRY
|          PERFORM EGBB0-GET
|
|          PERFORM VARYING CF-SUB
|                  FROM 1 BY 1
|                  UNTIL CF-SUB > CGRM-COUNT
|            MOVE CGRM-ERR (CF-SUB)    TO CZAZSOFT-MSG-TYPE
|            MOVE CGRM-MSG  (CF-SUB)   TO CZAZSOFT-MSG
|            MOVE CGRM-SUBTXT  (CF-SUB)
|                                      TO CZAZSOFT-SUBTEXT
|            IF CGRM-ERR (CF-SUB) = 'E'
|               MOVE 'Y'               TO WS-INVALID-HEADER-FLAG
|               MOVE MGBC-ORDR-REF-F   TO CZAZSOFT-FIELD
|               PERFORM SZAZSOFT-SET-APPL
|               IF MGBC-ORDR-REF NOT = SPACES
|                  MOVE MGBC-ORDR-REF  TO CDOZ-ORDR-REF
|                  MOVE CDOZ-FGRND-UNLOCK
|                                      TO CDOZ-FUNC
|                  MOVE CGBB-CMPY      TO CDOZ-CMPY
|                  MOVE TDOORDER-DOC-ORDR
|                                      TO CDOZ-DOC-IND
|                  MOVE CZAZPUBL-USR   TO CDOZ-LOCK-USR
|                  MOVE CZAZSTCK-CURR-SESS
|                                      TO CDOZ-LOCK-SESS
|
|                  EXEC QSP CALL ORDR_LOCK_UNLOCK
|                       CDOZ
|                  END-EXEC
|
|               END-IF
|               GO TO +++-EXIT
|            END-IF
|
|          END-PERFORM
|     *--- Reset the Detail Sequence Numbers
|          PERFORM VARYING EGBC0P-LOG-ENTRY
|             FROM 1 BY 1
|             UNTIL EGBC0P-LOG-ENTRY > EGBC0R-NENTRIES
|             PERFORM EGBC0-GET
|             MOVE EGBC0P-LOG-ENTRY TO EGBC0-DETL-SEQ-NUM
|          END-PERFORM
|          PERFORM EGBC0-CLOSE
|
|     *--- IF ADVICE NOTE ENTERED NEED TO BUILD DETAIL LINES
|
|          IF MGBC-ADVC-NOTE NOT = SPACES
|             PERFORM EGRA0-DEFINE
|             IF EGRA0R-NENTRIES > ZERO
|                PERFORM EGBB0-CLOSE
|                PERFORM NAA-PROC-ORDR-EWS
|                        VARYING EGRA0P-LOG-ENTRY
|                        FROM    1 BY 1
|                        UNTIL   EGRA0P-LOG-ENTRY > EGRA0R-NENTRIES
|                PERFORM EGBB0-DEFINE
|                MOVE CGBB-C-LOG-ENTRY TO EGBB0P-LOG-ENTRY
|                PERFORM EGBB0-GET
|             END-IF
|             PERFORM EGRA0-CLOSE
|          END-IF
++END-IF

       UG-SEL-ALL SECTION.

      *--- IF ENTERED MUST BE Y OR SPACE

           IF  MGBC-SEL-ALL-S = 'Y'
           AND (MGBC-SEL-ALL NOT = 'Y'
           AND  MGBC-SEL-ALL NOT = SPACES)
                MOVE 'Y'               TO WS-INVALID-HEADER-FLAG
                MOVE 'E'               TO CZAZSOFT-MSG-TYPE
                MOVE 'GBC37'           TO CZAZSOFT-MSG
                MOVE MGBC-SEL-ALL-F    TO CZAZSOFT-FIELD
                PERFORM SZAZSOFT-SET-APPL
                GO TO +++-EXIT
           END-IF

      *--- IF ENTERED AND ORDR-REF OR ADVC-NOTE NOT ENTERED THEN
      *--- GIVE ERROR MESSAGE GBC34

++IF TARGET(POP=Y)
|
|          IF  MGBC-SEL-ALL-S = 'Y'
|          AND MGBC-SEL-ALL   = 'Y'
|              IF  MGBC-ORDR-REF-S  NOT = 'Y'
|              AND MGBC-ADVC-NOTE-S NOT = 'Y'
|              MOVE 'E'                TO CZAZSOFT-MSG-TYPE
|              MOVE 'GBC34'            TO CZAZSOFT-MSG
|              MOVE MGBC-SEL-ALL-F     TO CZAZSOFT-FIELD
|              PERFORM SZAZSOFT-SET-APPL
|              GO TO +++-EXIT
|          END-IF
|
++END-IF

       UH-SEL-AUTO SECTION.

      *--- IF ENTERED MUST BE 1 OR 2

           IF  MGBC-SEL-AUTO-S = 'Y'
           AND (MGBC-SEL-AUTO NOT = '1'
           AND  MGBC-SEL-AUTO NOT = '2')
                MOVE 'E'               TO CZAZSOFT-MSG-TYPE
                MOVE 'GBC35'           TO CZAZSOFT-MSG
                MOVE MGBC-SEL-AUTO-F   TO CZAZSOFT-FIELD
                PERFORM SZAZSOFT-SET-APPL
                GO TO +++-EXIT
           END-IF

      *--- IF ENTERED AND ORDR-REF OR ADVC-NOTE NOT ENTERED THEN
      *--- GIVE ERROR MESSAGE GBC34

++IF TARGET(POP=Y)
|
|          IF MGBC-SEL-AUTO-S = 'Y'
|             PERFORM EGRA0-DEFINE
|             IF  EGRA0R-NENTRIES  NOT > ZERO
|             AND MGBC-ORDR-REF-S  NOT = 'Y'
|             AND MGBC-ADVC-NOTE-S NOT = 'Y'
|                 MOVE 'Y'             TO CZAZSOFT-UNPROTECT-IND
|                 MOVE SPACE           TO CZAZSOFT-PROTECT-IND
|                 MOVE MGBC-SEL-AUTO-F TO CZAZSOFT-FIELD
|                 PERFORM SZAZSOFT-SET-APPL
|                 MOVE 'E'             TO CZAZSOFT-MSG-TYPE
|                 MOVE 'GBC36'         TO CZAZSOFT-MSG
|                 MOVE MGBC-SEL-AUTO-F TO CZAZSOFT-FIELD
|                 PERFORM SZAZSOFT-SET-APPL
|                 GO TO +++-EXIT
|             END-IF
|             PERFORM EGRA0-CLOSE
|          END-IF
|
++END-IF

++IF TARGET(POP=Y)
|
|      UI-BUILD-MAP-DETAIL SECTION.
|
|          PERFORM EGBC0-GET
|
|          MOVE '0'                    TO CZAZSTCK-LINE-ERROR
|          MOVE 1                      TO CGBB-C-MAP-LINE
|          PERFORM MGBC-LOAD-HDR
|          PERFORM MGBC-LOAD-ROW
|          PERFORM V-VALIDATE-ROW
|
|          IF EGBC0-SEL = 'Y'
|             COMPUTE EGBB0-ORDR-VAL = EGBB0-ORDR-VAL
|                                    + EGBC0-LINE-TOT-AMT
|          END-IF
|
|          IF CZAZSTCK-LINE-INVALID
|             ADD  1                   TO CGBB-C-ERROR-COUNT
|
|             MOVE '1'                 TO EGBC0-STATUS-FLAG
|          ELSE
|             IF CZAZSTCK-LINE-WARNINGS
|                ADD  1                TO CGBB-C-WARNING-COUNT
|                MOVE '2'              TO EGBC0-STATUS-FLAG
|             END-IF
|          END-IF
|
|          MOVE SPACES                 TO EGBC0-AUTH-CNTRL
++END-IF
      ******************************************************************
      *   VALIDATE KIT CODE                                            *
      ******************************************************************
       UJ-VALIDATE-KIT-CODE SECTION.

           IF MGBC-FETCH-KIT-CODE-S NOT = 'Y'
              MOVE 'Y'                 TO CZAZSOFT-MANDATORY
              MOVE MGBC-FETCH-KIT-CODE-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              GO TO +++-EXIT
           END-IF

           MOVE CGBB-CMPY              TO TPXKIT-CMPY
           MOVE MGBC-FETCH-KIT-CODE    TO TPXKIT-KIT-CODE

           PERFORM SQL-SELECT-TPXKIT

           IF SQLCODE = WZAZSQL-NOT-FOUND
              MOVE 'TPX64'             TO CZAZSOFT-MSG
              MOVE 'E'                 TO CZAZSOFT-MSG-TYPE
              MOVE MGBC-FETCH-KIT-CODE-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              GO TO +++-EXIT
           END-IF

           IF TPXKIT-DSBLD = 'Y'
              MOVE 'TPX65'             TO CZAZSOFT-MSG
              MOVE 'E'                 TO CZAZSOFT-MSG-TYPE
              MOVE MGBC-FETCH-KIT-CODE-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              GO TO +++-EXIT
           END-IF


           IF TPXKIT-AP-FLAG NOT = 'Y'
              MOVE 'DOC75'             TO CZAZSOFT-MSG
              MOVE 'E'                 TO CZAZSOFT-MSG-TYPE
              MOVE MGBC-FETCH-KIT-CODE-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              GO TO +++-EXIT
           END-IF


      ******************************************************************
      *   VALIDATE QUANTITY                                            *
      ******************************************************************
       UK-VALIDATE-QUANTITY SECTION.

           IF MGBC-FETCH-QTY-S NOT = 'Y'
              GO TO +++-EXIT
           END-IF

           IF MGBC-FETCH-KIT-CODE-S NOT = 'Y'
              MOVE 'DOC76'             TO CZAZSOFT-MSG
              MOVE 'E'                 TO CZAZSOFT-MSG-TYPE
              MOVE MGBC-FETCH-QTY-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              GO TO +++-EXIT
           END-IF

           IF MGBC-FETCH-QTY > 0
              CONTINUE
           ELSE
              MOVE 'DOC77'             TO CZAZSOFT-MSG
              MOVE 'E'                 TO CZAZSOFT-MSG-TYPE
              MOVE MGBC-FETCH-QTY-F
                                       TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              GO TO +++-EXIT
           END-IF


++EXIT V-VALIDATE-ROW TYPE=ONLY

      *--- VALIDATE SELECTION OF A ROW
           IF MGBC-ACTION = 11
           OR (MGBC-SEL = 'Y'
           AND EGBC0-SEL NOT = 'Y')
              PERFORM VB-VLDTE-SELECTION
           END-IF

      *--- VALIDATE DESELECTION OF A ROW
           IF MGBC-ACTION = 12
           OR (MGBC-SEL NOT = 'Y'
           AND EGBC0-SEL  = 'Y')
              PERFORM VC-VLDTE-DESELECTION
           END-IF

      *--- DO NOT ALLOW ACTION 'SPLIT ANALYSIS' WHEN LINE HAS NOT
      *--- BEEN SELECTED
           IF (MGBC-ACTION   = 53
           OR  MGBC-ACTION   = 56)
           AND EGBC0-SEL NOT = 'Y'
               MOVE 'E'                TO CZAZSOFT-MSG-TYPE
               MOVE 'GBC39'            TO CZAZSOFT-MSG
               MOVE MGBC-ACTION-F      TO CZAZSOFT-FIELD
               MOVE CGBB-C-MAP-LINE    TO CZAZSOFT-ROW
               PERFORM SZAZSOFT-SET-APPL
           END-IF

++IF TARGET(POP=Y)
|     *--- DO NOT ALLOW ACTION 'GRNS' WHEN LINE HAS NOT
|     *--- BEEN SELECTED
|          IF  MGBC-ACTION   = 58
|          AND EGBC0-SEL NOT = 'Y'
|              MOVE 'E'                TO CZAZSOFT-MSG-TYPE
|              MOVE 'GBC39'            TO CZAZSOFT-MSG
|              MOVE MGBC-ACTION-F      TO CZAZSOFT-FIELD
|              MOVE CGBB-C-MAP-LINE    TO CZAZSOFT-ROW
|              PERFORM SZAZSOFT-SET-APPL
|          END-IF
++END-IF

      *--- IF LINE IS NOT SELECTED THEN DO NOT PERFORM VALIDATION
           IF EGBC0-SEL NOT = 'Y'
              GO TO +++-EXIT
           END-IF

      *--- WHEN INTENT IS DISABLE, OR BATCH STATUS IS PROCESSED,
      *--- OR INTENT IS DELETE TRANSACTION, DO NOT VALIDATE
           IF CGBB-INTENT     = WZAZLITS-EDIT-DISABLE
           OR CF-SAVED-ACTION = 63
              GO TO +++-EXIT
           END-IF

           IF CGBB-BTCH-STAT = '6'
              IF  CF-SAVED-ACTION = 54
              AND MGBC-SA-TYPE-S = 'Y'
              AND MGBC-SA-TYPE-S NOT = '0'
                  MOVE 53              TO MGBC-ACTION
                  MOVE 'Y'             TO MGBC-ACTION-S
              END-IF
              GO TO V-VALIDATE-ACTION
           END-IF

      *--- IF MISCELLANEOUS CHARGE LINE BEING ENTERED THEN CHECK
      *--- SUPPLIER POP CONTROLS IF IT IS ALLOWED ALSO ENSURE THAT
      *--- ORDR-REF ENTERED ON THE LINE IS THE SAME AS ON THE HEADER
      *--- OR ENTERED VIA TRANSACTION ORDERS

++IF TARGET(POP=Y)
|          IF  MGBC-ORDR-LINE-NUM     = ZEROES
|          AND EGRA0R-NENTRIES > ZERO
|              MOVE MGBC-CMPY          TO TPBSUPP-CMPY
|              MOVE MGBC-SUPP          TO TPBSUPP-SUPP
|              PERFORM SQL-SELECT-TPBSUPP-1
|
|              IF TPBSUPP-MISC-CHRG-IND = 'Y' OR 'D' OR 'T'
|                 PERFORM VA-VALIDATE-MISC-CHRG
|                 IF CZAZSTCK-DATA-INVALID
|                    GO TO +++-EXIT
|                 END-IF
|              ELSE
|                 MOVE 'E'             TO CZAZSOFT-MSG-TYPE
|                 MOVE 'GBC30'         TO CZAZSOFT-MSG
|                 MOVE MGBC-ACTION-F   TO CZAZSOFT-FIELD
|                 MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
|                 PERFORM SZAZSOFT-SET-APPL
|                 GO TO +++-EXIT
|              END-IF
|          ELSE
|             IF  MGBC-ORDR-LINE-NUM   = ZEROES
|             AND MGBC-DETL-ORDR-REF-S = 'Y'
|                 MOVE CGBB-CMPY       TO TGBBORDR-CMPY
|                 MOVE CGBB-BTCH-NUM   TO TGBBORDR-BTCH-NUM
|                 MOVE EGBB0-TRAN-SEQ-NUM
|                                      TO TGBBORDR-TRAN-SEQ-NUM
|                 MOVE MGBC-DETL-ORDR-REF
|                                      TO TGBBORDR-ORDR-REF
|                 PERFORM SQL-SELECT-TGBBORDR
|                 IF SQLCODE = WZAZSQL-NOT-FOUND
|                    MOVE 'E'             TO CZAZSOFT-MSG-TYPE
|                    MOVE 'GBC69'         TO CZAZSOFT-MSG
|                    MOVE MGBC-DETL-ORDR-REF-F
|                                         TO CZAZSOFT-FIELD
|                    MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
|                    PERFORM SZAZSOFT-SET-APPL
|                    GO TO +++-EXIT
|                 END-IF
|             END-IF
|          END-IF
++END-IF

      *--- NOW VALIDATE THE DETAIL LINE
           INITIALIZE CGBXIN
           INITIALIZE CGBXOUT

           MOVE CGBXIN-VLDTE-LINE      TO CGBXIN-FUNC
           MOVE CGBXIN-SRCE-ONL        TO CGBXIN-SRCE

           IF  MGBC-LINE-INV-REF NOT = EGBC0-LINE-INV-REF
           AND MGBC-LINE-INV-SYSREF  = EGBC0-LINE-INV-SYSREF
               MOVE ZERO               TO MGBC-LINE-INV-SYSREF
           END-IF
           ++POUR MDEF MGBC CDEF CGBXIN

           MOVE CGBB-CMPY              TO CGBXIN-CMPY
           MOVE CGBB-TRAN-TYPE         TO CGBXIN-TRAN-TYPE

      *--- PASS LAST TAX DETAILS TO VALIDATION ROUTINE

           MOVE EGBC0-LAST-TAX-CODE    TO CGBXIN-LAST-DETL-TAX-CODE
           MOVE EGBC0-ITEM             TO CGBXIN-OLD-ITEM
           MOVE CGBB-INTENT            TO CGBXIN-INTENT
           MOVE CGBVOUT-ITEM-MAND-FLAG TO CGBXIN-ITEM-MAND-FLAG
           IF CGBXIN-ITEM NOT = SPACES
              MOVE 'Y'                 TO CGBXIN-ITEM-S
           END-IF
           MOVE EGBC0-LAST-TAX-TYPE    TO CGBXIN-LAST-DETL-TAX-TYPE
           MOVE EGBC0-LAST-LOCTN       TO CGBXIN-LAST-DETL-LOCTN
           MOVE EGBC0-NET-RCPT         TO CGBXIN-NET-RCPT
           MOVE EGBC0-AUTO-GRN-FLAG    TO CGBXIN-AUTO-GRN-FLAG
           MOVE EGBC0-PRC-TOLRN-FLAG   TO CGBXIN-PRC-TOLRN-FLAG
           MOVE EGBC0-MISC-CHRGS-FLAG  TO CGBXIN-MISC-CHRGS-FLAG
++IF TARGET(POP=Y)
|
|          MOVE EGBC0-ORDR-PUOM        TO CGBXIN-ORDR-PUOM
|          MOVE EGBC0-ORDR-QUOM        TO CGBXIN-ORDR-QUOM
|          MOVE EGBC0-ORDR-DSCNT-1     TO CGBXIN-ORDR-DSCNT-1
|          MOVE EGBC0-ORDR-DSCNT-2     TO CGBXIN-ORDR-DSCNT-2
|          MOVE EGBC0-ORDR-DSCNT-3     TO CGBXIN-ORDR-DSCNT-3
|          IF  MGBC-ORDR-LINE-NUM     = ZEROES
|          AND MGBC-DETL-ORDR-REF NOT = SPACES
|             MOVE '2'                 TO CGBXIN-LINE-TYPE-IND
|             MOVE 'Y'                 TO CGBXIN-LINE-TYPE-IND-S
|          END-IF
|
|          MOVE MGBC-DETL-ORDR-REF     TO CGBXIN-ORDR-REF
|          MOVE MGBC-DETL-ORDR-REF-S   TO CGBXIN-ORDR-REF-S
|          MOVE MGBC-DETL-ORDR-REF-F   TO CGBXIN-ORDR-REF-F
|
++END-IF

           MOVE MGBC-DTL-PRPYMNT-IND   TO CGBXIN-DTL-PRPYMNT-IND
           MOVE MGBC-DTL-PRPYMNT-STRT-PER
                                       TO CGBXIN-DTL-PRPYMNT-STRT-PER
           MOVE MGBC-DTL-PRPYMNT-STRT-YY
                                       TO CGBXIN-DTL-PRPYMNT-STRT-YY
           MOVE MGBC-DTL-PRPYMNT-IND-S TO CGBXIN-DTL-PRPYMNT-IND-S
           MOVE MGBC-DTL-PRPYMNT-STRT-PER-S
                                       TO CGBXIN-DTL-PRPYMNT-STRT-PER-S
           MOVE MGBC-DTL-PRPYMNT-STRT-YY-S
                                       TO CGBXIN-DTL-PRPYMNT-STRT-YY-S
           MOVE MGBC-DTL-PRPYMNT-IND-F TO CGBXIN-DTL-PRPYMNT-IND-F
           MOVE MGBC-DTL-PRPYMNT-STRT-PER-F
                                       TO CGBXIN-DTL-PRPYMNT-STRT-PER-F
           MOVE MGBC-DTL-PRPYMNT-STRT-YY-F
                                       TO CGBXIN-DTL-PRPYMNT-STRT-YY-F
           MOVE MGBC-PRPYMNT-STRT-PER  TO CGBXIN-HDR-PRPYMNT-STRT-PER
           MOVE MGBC-PRPYMNT-STRT-YY   TO CGBXIN-HDR-PRPYMNT-STRT-YY
           MOVE MGBC-PRPYMNT-OCCUR     TO CGBXIN-HDR-PRPYMNT-OCCUR
           MOVE MGBC-QTY-REC           TO CGBXIN-QTY-ACCPT
           MOVE EGBC0-GRN-VAL          TO CGBXIN-GRN-VAL
           MOVE EGBB0-PER              TO CGBXIN-BTCH-PER
           MOVE EGBB0-INV-GROSS-AMT    TO CGBXIN-GROSS-AMT
           MOVE EGBB0-INV-TAX-AMT      TO CGBXIN-TAX-AMT
           MOVE EGBB0-TAX-RCVBLE-FLAG  TO CGBXIN-TAX-RCVBLE-FLAG
           MOVE EGBB0-TAX-PRORAT-FLAG  TO CGBXIN-TAX-PRORAT-FLAG
           MOVE EGBB0-TAX-RATE         TO CGBXIN-TAX-RATE
           MOVE EGBB0-TAX-INCL-FLAG    TO CGBXIN-TAX-INCL-FLAG
           MOVE EGBB0-AUTH-CNTRL       TO CGBXIN-AUTH-CNTRL
           MOVE EGBB0-AUTH-TYPE        TO CGBXIN-AUTH-TYPE
           MOVE EGBB0-GL-ACCT          TO CGBXIN-HDR-GL-ACCT
           MOVE EGBB0-PR-RCVD-LINES    TO CGBXIN-PR-RCVD-LINES
           MOVE EGBB0-VAT-RPRTD-IND    TO CGBXIN-VAT-RPRTD-IND

           MOVE CGBB-C-QTY-DNL-FLAG    TO CGBXIN-QTY-MM-OVRD-FLAG
           MOVE CGBB-C-VAL-DNL-FLAG    TO CGBXIN-VAL-MM-OVRD-FLAG

      *--- DEFAULT THE TRANSACTION DATE

           IF CGBXIN-TRAN-DATE <= WZAZLITS-MIN-DATE
              MOVE CZAZSERV-DATE       TO CGBXIN-TRAN-DATE
              GO TO +++-EXIT
           END-IF

           IF CGBXIN-SA-TYPE = SPACES
              MOVE '0'                 TO CGBXIN-SA-TYPE
           END-IF

           PERFORM EGBD0-DEFINE
           IF CGBXIN-SA-TYPE NOT = ('0' AND SPACE)
           AND EGBD0R-NENTRIES > 0
                IF CGBB-D-SRVC-SA-BUILT = 'Y'
                   MOVE 'Y' TO CGBXIN-SRVC-SA-SET
                ELSE
                   MOVE 'N' TO CGBXIN-SRVC-SA-SET
                END-IF
           ELSE
              MOVE SPACES TO CGBXIN-SRVC-SA-SET
           END-IF
           PERFORM EGBD0-CLOSE
           IF  MGBC-SRVC-CODE      NOT = EGBC0-SRVC-CODE
           OR  MGBC-SRVC-CHRG-TYPE NOT = EGBC0-SRVC-CHRG-TYPE
           OR  MGBC-SRVC-REF       NOT = EGBC0-SRVC-REF
               MOVE 'Y'                TO CGBXIN-SRVC-CHANGED
           ELSE
               MOVE SPACE              TO CGBXIN-SRVC-CHANGED
           END-IF

           EXEC QSP CALL VLDTE_PL_DETL
                CGBXIN
                CGBXOUT
                TPACNTRL
                TGACNTRL
                TEACNTRL
                TPBSUPP
                TPBSCHD
                TAKICMPY
                TRACMPYL
           END-EXEC

++IF TARGET(POP=Y)
|
|          MOVE MGBC-ORDR-REF          TO WS-ORDR-REF
|          MOVE MGBC-ORDR-REF-S        TO WS-ORDR-REF-S
|          MOVE MGBC-ORDR-REF-F        TO WS-ORDR-REF-F
|
++END-IF



           IF  CGBXIN-MCA NOT = MGBC-MCA
               PERFORM EGBD0-DEFINE
               IF EGBD0R-NENTRIES > ZERO
                  MOVE 'GBC55'         TO CZAZSOFT-MSG
                  MOVE 'I'             TO CZAZSOFT-MSG-TYPE
                  PERFORM SZAZSOFT-SCREEN-LEVEL-MESS
               END-IF
               PERFORM EGBD0-CLOSE
           END-IF


           ++POUR CDEF CGBXIN MDEF MGBC

           MOVE MGBC-LINE-INV-SYSREF   TO EGBC0-LINE-INV-SYSREF
           MOVE MGBC-LINE-INV-SYSREF-S TO EGBC0-LINE-INV-SYSREF-S
           MOVE MGBC-LINE-INV-REF      TO EGBC0-LINE-INV-REF
           MOVE MGBC-LINE-INV-REF-S    TO EGBC0-LINE-INV-REF-S
           MOVE MGBC-CRN-INV-LINE      TO EGBC0-CRN-INV-LINE
           MOVE MGBC-CRN-INV-LINE-S    TO EGBC0-CRN-INV-LINE-S

      *--- STORE LAST TAX DETAILS FROM VALIDATION ROUTINE

           MOVE CGBXIN-LAST-DETL-TAX-CODE
                                       TO EGBC0-LAST-TAX-CODE
           MOVE CGBXIN-LAST-DETL-TAX-TYPE
                                       TO EGBC0-LAST-TAX-TYPE
           MOVE CGBXIN-LAST-DETL-LOCTN TO EGBC0-LAST-LOCTN

           PERFORM S2-DECREMENT-TOTALS

           MOVE EGBC0-TAX-RCVBLE-FLAG  TO WS-TAX-RCVBLE-FLAG
           MOVE CGBXIN-TAX-RCVBLE-FLAG TO EGBC0-TAX-RCVBLE-FLAG
           MOVE CGBXIN-TAX-PRORAT-FLAG TO EGBC0-TAX-PRORAT-FLAG
           MOVE CGBXIN-TAX-RATE        TO EGBC0-TAX-RATE
           MOVE CGBXIN-TAX-INCL-FLAG   TO EGBC0-TAX-INCL-FLAG
           MOVE CGBXOUT-SRVC-TOLRN-FLAG
                                       TO EGBC0-SRVC-TOLRN-FLAG
      *--- EVEN THOUGH THE THE MAP FIELDS ARE POPULATED THE EWS EQUIV
      *--- ARE'NT

           MOVE CGBXIN-DTL-PRPYMNT-IND TO EGBC0-PRPYMNT-IND
           MOVE CGBXIN-DTL-PRPYMNT-STRT-PER
                                       TO EGBC0-PRPYMNT-STRT-PER
           MOVE CGBXIN-DTL-PRPYMNT-STRT-YY
                                       TO EGBC0-PRPYMNT-STRT-YY
           MOVE CGBXIN-DTL-PRPYMNT-OCCUR
                                       TO EGBC0-PRPYMNT-OCCUR

           MOVE CGBXOUT-TOT-AMT        TO MGBC-LINE-TOT-AMT
           MOVE CGBXOUT-TOT-AMT-S      TO MGBC-LINE-TOT-AMT-S
           IF MGBC-TAX-ONLY-FLAG = 'Y'
              MOVE MGBC-LINE-TOT-AMT   TO MGBC-LINE-TAX-AMT
           ELSE
              MOVE CGBXOUT-TAX-AMT     TO MGBC-LINE-TAX-AMT
           END-IF
           MOVE CGBXOUT-TAX-AMT-S      TO MGBC-LINE-TAX-AMT-S
           MOVE CGBXOUT-SLFASSD-TAX-AMT
                                       TO MGBC-LINE-SLFASSD-AMT
           MOVE CGBXOUT-SLFASSD-TAX-AMT-S
                                       TO MGBC-LINE-SLFASSD-AMT-S

      *--- Repopulate the handling code on the line as it could have
      *--- been overwritten by the GL Company Controls setting.
           IF TEACNTRL-PEV-CODE-ID NOT = SPACES
              MOVE CGBXIN-DETL-HAND    TO MGBC-DETL-HAND
           END-IF

      *--- When there is no split analysis then populate recoverable
      *--- and non recoverable values.  Otherwise this is done in
      *--- section VA-SA-PEV-CALC.
           IF  CGBXIN-TRAN-TYPE     = WGZZCNTL-TYPE-DRN
           AND TGACNTRL-TAX-DRN-IND = TGACNTRL-TDRN-NONE
               CONTINUE
           ELSE
              IF MGBC-SA-TYPE-S NOT = 'Y'
              OR MGBC-SA-TYPE = '0'
                 MOVE CGBXOUT-VAT-NON-REC-VALUE
                                       TO MGBC-VAT-NON-REC-VALUE
                                          EGBC0-VAT-NON-REC-VALUE
                 MOVE CGBXOUT-VAT-NON-REC-VALUE-S
                                       TO MGBC-VAT-NON-REC-VALUE-S
                 MOVE CGBXOUT-VAT-REC-VALUE
                                       TO MGBC-VAT-REC-VALUE
                                          EGBC0-VAT-REC-VALUE
                 MOVE CGBXOUT-VAT-REC-VALUE-S
                                       TO MGBC-VAT-REC-VALUE-S
              END-IF
           END-IF

           MOVE CGBXOUT-AUTH-CMPY-STRUC
                                       TO EGBC0-AUTH-STRUC
           MOVE CGBXOUT-AUTH-PATH      TO EGBC0-AUTH-PATH

      *--- POPULATE THE SERVICE LEDGER CODE AND TYPE DESCRIPTIONS

           MOVE CGBXOUT-SRVC-CODE-DESCR
                                       TO MGBC-SRVC-CODE-DESCR
           MOVE CGBXOUT-SRVC-CODE-DESCR-S
                                       TO MGBC-SRVC-CODE-DESCR-S
           MOVE CGBXOUT-SRVC-REF-DESCR
                                       TO MGBC-SRVC-REF-DESCR
           MOVE CGBXOUT-SRVC-REF-DESCR-S
                                       TO MGBC-SRVC-REF-DESCR-S
           MOVE CGBXOUT-SRVC-METER-DESCR
                                       TO MGBC-SRVC-METER-DESCR
           MOVE CGBXOUT-SRVC-METER-DESCR-S
                                       TO MGBC-SRVC-METER-DESCR-S
++IF TARGET(POP=Y)
|
|          IF CGBB-C-LAST-ACTION = 11
|             IF EGBC0-TAX-RCVBLE-FLAG  = 'Y'
|                COMPUTE EGBC0-SA-VALUE = EGBC0-SA-VALUE
|                                       + MGBC-LINE-TOT-AMT
|             ELSE
|                COMPUTE EGBC0-SA-VALUE = EGBC0-SA-VALUE
|                                       + MGBC-LINE-TOT-AMT
|                                       + MGBC-LINE-TAX-AMT
|                                       + MGBC-LINE-SLFASSD-AMT
|             END-IF
|          END-IF
|
|          IF CGBB-C-LAST-ACTION = 12
|             IF EGBC0-TAX-RCVBLE-FLAG  = 'Y'
|                COMPUTE EGBC0-SA-VALUE = EGBC0-SA-VALUE
|                                       - MGBC-LINE-TOT-AMT
|             ELSE
|                COMPUTE EGBC0-SA-VALUE = EGBC0-SA-VALUE
|                                       - MGBC-LINE-TOT-AMT
|                                       - MGBC-LINE-TAX-AMT
|                                       - MGBC-LINE-SLFASSD-AMT
|             END-IF
|          END-IF
|
++END-IF

++IF TARGET(POP=Y)
|
|          MOVE WS-ORDR-REF            TO MGBC-ORDR-REF
|          MOVE WS-ORDR-REF-S          TO MGBC-ORDR-REF-S
|          MOVE WS-ORDR-REF-F          TO MGBC-ORDR-REF-F
|
++END-IF

           MOVE SPACES                 TO WS-INVALID-LINE-FLAG
           PERFORM VARYING CF-SUB
                   FROM 1 BY 1
                   UNTIL CF-SUB > CGBXOUT-COUNT
             IF  CGBXOUT-MSG (CF-SUB) NOT = SPACES
             AND CGBXOUT-ERR (CF-SUB) NOT = CGBXOUT-OK
                 MOVE CGBXOUT-ERR (CF-SUB) TO CZAZSOFT-MSG-TYPE
                 MOVE CGBXOUT-MSG  (CF-SUB)
                                           TO CZAZSOFT-MSG
                 MOVE CGBXOUT-MAND (CF-SUB)
                                           TO CZAZSOFT-MANDATORY
                 IF CZAZSOFT-MSG-TYPE = 'E'
                      MOVE 'Y'             TO WS-INVALID-LINE-FLAG
                 END-IF

                 IF CGBXOUT-FLD-NO (CF-SUB) = -2
                    MOVE MGBC-QTY-INVCD-F
                                           TO CZAZSOFT-FIELD
                 ELSE
                    MOVE CGBXOUT-FLD-NO  (CF-SUB)
                                           TO CZAZSOFT-FIELD
                 END-IF

                 MOVE CGBXOUT-SUBTXT  (CF-SUB)
                                           TO CZAZSOFT-SUBTEXT

                 MOVE CGBXOUT-SUBFIELD-IDX  (CF-SUB)
                                           TO CZAZSOFT-SUBFIELD-IDX

                 MOVE CGBB-C-MAP-LINE      TO CZAZSOFT-ROW

                 IF CGBXOUT-MSG (CF-SUB) = SPACES
                    PERFORM SZAZSOFT-SET-APPL
                 ELSE
                    PERFORM XA-SET-WARNING

                    IF CGBXOUT-MSG (CF-SUB) = 'GBX78' OR 'GBX79'
                                           OR 'GBX80'
                       MOVE MGBC-ITEM-PRC-F
                                           TO CZAZSOFT-FIELD
                       MOVE CGBXOUT-ERR (CF-SUB)
                                           TO CZAZSOFT-MSG-TYPE
                       MOVE CGBXOUT-MSG  (CF-SUB)
                                           TO CZAZSOFT-MSG
                       MOVE CGBB-C-MAP-LINE
                                           TO CZAZSOFT-ROW
                       PERFORM XA-SET-WARNING
                    END-IF

                 END-IF
             END-IF
           END-PERFORM


      *--- If the supplier is not tax registered and the tax code entered
      *--- does not match the supplier's default tax code, issue warning
      *--- "Tax code does not match unregistered supplier's default tax code"

           IF MGBC-CMPY NOT = SPACES
           AND MGBC-SUPP NOT = SPACES
           AND MGBC-DETL-LOCTN NOT = SPACES
           AND MGBC-DETL-TAX-CODE NOT = SPACES
              MOVE SPACES              TO TPBTAX-TAX-CODE
              MOVE MGBC-CMPY           TO TPBTAX-CMPY
              MOVE MGBC-SUPP           TO TPBTAX-SUPP
              MOVE MGBC-DETL-LOCTN     TO TPBTAX-LOCTN
              PERFORM SQL-SELECT-TPBTAX
              IF SQLCODE = WZAZSQL-OK
              AND TPBTAX-TAX-REG-FLAG = 'Y'
                 CONTINUE
              ELSE
                 IF MGBC-DETL-TAX-CODE NOT = TPBTAX-TAX-CODE
                    MOVE CGBB-C-MAP-LINE
                                       TO CZAZSOFT-ROW
                    MOVE 'GBC66'       TO CZAZSOFT-MSG
                    MOVE 'W'           TO CZAZSOFT-MSG-TYPE
                    MOVE MGBC-DETL-TAX-CODE-F
                                       TO CZAZSOFT-FIELD
                    PERFORM XA-SET-WARNING
                 END-IF
              END-IF
           END-IF

      *--- When there is split analysis defined we need to work out
      *--- the recoverable vat if partial exempt vat is turned on
           IF TEACNTRL-PEV-CODE-ID NOT = SPACES
              IF  MGBC-SA-TYPE-S   = 'Y'
              AND MGBC-SA-TYPE NOT = '0'
                  MOVE ZERO            TO WS-D-VAT-NON-REC-VALUE
                  MOVE ZERO            TO WS-D-VAT-REC-VALUE

                  MOVE MGBC-DETL-HAND  TO TRAHAND-HAND
                  PERFORM SQL-SELECT-TRAHAND

                  PERFORM EGBD0-DEFINE

                  PERFORM VA-SA-PEV-CALC
                  VARYING EGBD0P-LOG-ENTRY
                          FROM 1 BY 1
                  UNTIL   EGBD0P-LOG-ENTRY > EGBD0R-NENTRIES

                  MOVE WS-D-VAT-NON-REC-VALUE
                                       TO EGBC0-VAT-NON-REC-VALUE
                                          MGBC-VAT-NON-REC-VALUE
                  MOVE 'Y'             TO MGBC-VAT-NON-REC-VALUE-S

                  MOVE WS-D-VAT-REC-VALUE
                                       TO EGBC0-VAT-REC-VALUE
                                          MGBC-VAT-REC-VALUE
                  MOVE 'Y'             TO MGBC-VAT-REC-VALUE-S
                  PERFORM EGBD0-CLOSE

                  IF TRAHAND-INCL-FLAG = 'Y'
                     IF WS-D-VAT-NON-REC-VALUE > ZERO
                        IF WS-D-VAT-REC-VALUE  > ZERO
                           MOVE TEACNTRL-INCL-PART-HAND
                                       TO MGBC-DETL-HAND
                        ELSE
                           MOVE TEACNTRL-INCL-NON-HAND
                                       TO MGBC-DETL-HAND
                        END-IF
                     ELSE
                        IF WS-D-VAT-REC-VALUE  > ZERO
                           MOVE TEACNTRL-INCL-REC-HAND
                                       TO MGBC-DETL-HAND
                        END-IF
                     END-IF
                  ELSE
                     IF WS-D-VAT-NON-REC-VALUE > ZERO
                        IF WS-D-VAT-REC-VALUE  > ZERO
                           MOVE TEACNTRL-EXCL-PART-HAND
                                       TO MGBC-DETL-HAND
                        ELSE
                           MOVE TEACNTRL-EXCL-NON-HAND
                                       TO MGBC-DETL-HAND
                        END-IF
                     ELSE
                        IF WS-D-VAT-REC-VALUE  > ZERO
                           MOVE TEACNTRL-EXCL-REC-HAND
                                       TO MGBC-DETL-HAND
                        END-IF
                     END-IF
                  END-IF
              END-IF
           END-IF

           IF CGBXOUT-GRN-ERROR = 'Y'
              PERFORM VD-VLDTE-GRN
           END-IF

      *--- UPDATE TRANSACTION TOTALS - DECREASE BY OLD AMOUNT (EGBC0)
      *---                         AND INCREASE BY NEW AMOUNT (MGBC)

           PERFORM S1-INCREMENT-TOTALS

           IF CZAZSTCK-FORMAT-ERROR = 'Y'
              MOVE 'Y'                 TO WS-INVALID-LINE-FLAG
              GO TO +++-EXIT
           END-IF

      *--- RESET AUTHORISATION FIELDS WHEN VALUE OR GL DATA HAS CHANGED
      *--- RECALCULATE S/A EWS IF VALUE HAS CHANGED
           IF EGBC0-TAX-RCVBLE-FLAG = '1' OR '2'
              MOVE MGBC-LINE-TOT-AMT   TO WS-TOT-AMT
              MOVE EGBC0-LINE-TOT-AMT  TO WS-EWS-TOT-AMT
           ELSE
              COMPUTE WS-TOT-AMT     = MGBC-LINE-TOT-AMT  +
                                       MGBC-LINE-TAX-AMT  +
                                       MGBC-LINE-SLFASSD-AMT
              COMPUTE WS-EWS-TOT-AMT = EGBC0-LINE-TOT-AMT +
                                       EGBC0-LINE-TAX-AMT +
                                       EGBC0-LINE-SLFASSD-AMT
           END-IF

++IF TARGET(POP=Y)
|
|          MOVE MGBC-CMPY              TO TDOOLINE-CMPY
|          MOVE TDOOLINE-DOC-ORDR      TO TDOOLINE-DOC-IND
|          MOVE EGBC0-ORDR-REF         TO TDOOLINE-ORDR-REF
|          MOVE EGBC0-ORDR-LINE-NUM    TO TDOOLINE-LINE-NUM
|
|          PERFORM SQL-SELECT-TDOOLINE
|
|          IF SQLCODE NOT = WZAZSQL-OK
|             MOVE ZEROS               TO TDOOLINE-VAL-TAX
|          END-IF
|
|          IF  (WS-TOT-AMT      NOT = WS-EWS-TOT-AMT
|          OR   MGBC-QTY-INVCD  NOT = EGBC0-QTY-INVCD
|          OR   WS-TAX-RCVBLE-FLAG  NOT = EGBC0-TAX-RCVBLE-FLAG
|          OR   MGBC-LINE-TAX-AMT NOT = TDOOLINE-VAL-TAX
|          OR   (MGBC-LINE-SLFASSD-AMT NOT = ZERO
|          AND   EGBC0-AUTO-GRN-FLAG NOT = 'Y')
           OR   MGBC-LINE-INV-REF NOT = EGBC0-LINE-INV-REF)
|          AND (MGBC-ORDR-REF   NOT = SPACES
|          OR   MGBC-ADVC-NOTE  NOT = SPACES
|          OR   EGRA0R-NENTRIES NOT = ZERO)
|          AND EGBC0-SA-TYPE    NOT = '0'
|          AND EGBC0-ORDR-LINE-NUM  NOT = ZERO
|              INITIALIZE CGRM
|
|              MOVE CGRM-UPDATE-D      TO CGRM-FUNC
|
|              MOVE CGBB-CMPY          TO CGRM-CMPY
|              MOVE CGBB-TRAN-TYPE     TO CGRM-TRAN-TYPE
|              MOVE CGBB-EWS-INSTANCE  TO CGRM-EWS-INSTANCE
|              MOVE CGBB-C-ESN         TO CGRM-C-ESN
|              MOVE CGBB-RA-ESN        TO CGRM-RA-ESN
|              MOVE CGBB-RB-ESN        TO CGRM-RB-ESN
|              MOVE CGBB-C-LOG-ENTRY   TO CGRM-B-LOG-ENTRY
|              MOVE EGBC0P-LOG-ENTRY   TO CGRM-C-LOG-ENTRY
|              MOVE CGBB-RB-TRAN-SEQ-NUM
|                                      TO CGRM-RB-TRAN-SEQ-NUM
|              MOVE MGBC-SLFASSD-TAX-IND
|                                      TO CGRM-SLFASSD-TAX-IND
|              MOVE MGBC-QTY-INVCD     TO CGRM-C-QTY-INVCD
|              MOVE EGBC0-TAX-RCVBLE-FLAG
|                                      TO CGRM-C-TAX-RCVBLE-FLAG
|              MOVE MGBC-LINE-TOT-AMT  TO CGRM-C-LINE-TOT-AMT
|              MOVE MGBC-LINE-TAX-AMT  TO CGRM-C-LINE-TAX-AMT
|              MOVE EGBC0-LINE-TYPE-IND
|                                      TO CGRM-C-LINE-TYPE-IND
|              MOVE EGBC0-SA-VALUE     TO CGRM-C-SA-VALUE
|              MOVE MGBC-ITEM-PRC      TO CGRM-C-ITEM-PRC
|              MOVE MGBC-QTY-REC       TO CGRM-C-QTY-REC
|              MOVE EGBC0-SA-GRP       TO CGRM-C-SA-GRP
|              MOVE MGBC-DSCNT-1       TO CGRM-C-DSCNT-1
|              MOVE MGBC-DSCNT-2       TO CGRM-C-DSCNT-2
|              MOVE MGBC-DSCNT-3       TO CGRM-C-DSCNT-3
|              MOVE MGBC-DETL-HAND     TO CGRM-C-HAND
|              MOVE MGBC-DETL-TAX-CODE TO CGRM-C-TAX-CODE
|              MOVE MGBC-DETL-TAX-TYPE TO CGRM-C-TAX-TYPE
|              MOVE MGBC-DETL-LOCTN    TO CGRM-C-LOCTN
|
|              MOVE MGBC-CURR          TO CGRM-TRAN-CURR
|              MOVE WAZCMPYD-BASE-CURR TO CGRM-BASE-CURR

               IF MGBC-LINE-INV-REF-S = 'Y'
                  MOVE 'Y'             TO CGRM-CRN-INV-REF-FLAG
               END-IF
|
|              PERFORM EGBB0-CLOSE
|              PERFORM EGBC0-CLOSE
|
|              EXEC QSP CALL BUILD_EWS_PL_TRAN
|                   CGRM
|              END-EXEC
|
|              PERFORM EGBB0-DEFINE
|              MOVE CGRM-B-LOG-ENTRY    TO EGBB0P-LOG-ENTRY
|              PERFORM EGBB0-GET
|              PERFORM EGBC0-DEFINE
|              MOVE CGRM-C-LOG-ENTRY   TO EGBC0P-LOG-ENTRY
|              PERFORM EGBC0-GET
|
|              PERFORM VARYING CF-SUB
|                      FROM 1 BY 1
|                      UNTIL CF-SUB > CGRM-COUNT
|                MOVE CGRM-ERR (CF-SUB)
|                                      TO CZAZSOFT-MSG-TYPE
|                MOVE CGRM-MSG  (CF-SUB)
|                                      TO CZAZSOFT-MSG
|                MOVE CGRM-MAND (CF-SUB)
|                                      TO CZAZSOFT-MANDATORY
|                IF CGRM-FLD-NO (CF-SUB) = -2
|                   MOVE MGBC-QTY-INVCD-F
|                                      TO CZAZSOFT-FIELD
|                ELSE
|                   MOVE CGRM-FLD-NO  (CF-SUB)
|                                      TO CZAZSOFT-FIELD
|                END-IF
|
|                MOVE CGRM-SUBTXT  (CF-SUB)
|                                      TO CZAZSOFT-SUBTEXT
|                MOVE CGRM-SUBFIELD-IDX  (CF-SUB)
|                                      TO CZAZSOFT-SUBFIELD-IDX
|
|                MOVE CGBB-C-MAP-LINE  TO CZAZSOFT-ROW
|                IF CGRM-MSG (CF-SUB) = SPACES
|     *---          PERFORM SZAZSOFT-SET-APPL
|                   CONTINUE
|                ELSE
|                   PERFORM XA-SET-WARNING
|
|                   IF CGRM-MSG (CF-SUB) = 'GBX78' OR 'GBX79'
|                                       OR 'GBX80'
|                      MOVE MGBC-ITEM-PRC-F
|                                      TO CZAZSOFT-FIELD
|                      MOVE CGRM-ERR (CF-SUB)
|                                      TO CZAZSOFT-MSG-TYPE
|                      MOVE CGRM-MSG  (CF-SUB)
|                                      TO CZAZSOFT-MSG
|                      MOVE CGBB-C-MAP-LINE
|                                      TO CZAZSOFT-ROW
|                      PERFORM XA-SET-WARNING
|                   END-IF
|
|                END-IF
|              END-PERFORM
|
|          ELSE
|              IF (WS-TOT-AMT         NOT = WS-EWS-TOT-AMT
|              OR  WS-TAX-RCVBLE-FLAG NOT = EGBC0-TAX-RCVBLE-FLAG)
|              AND EGBC0-SA-VALUE NOT = ZERO
|                  PERFORM S6-RECALC-EGBD0-2
|              END-IF
|          END-IF
|
++ELSE
|          IF (WS-TOT-AMT         NOT = WS-EWS-TOT-AMT
|          OR  WS-TAX-RCVBLE-FLAG NOT = EGBC0-TAX-RCVBLE-FLAG)
|          AND EGBC0-SA-VALUE NOT = ZERO
|              PERFORM S6-RECALC-EGBD0-2
|          END-IF
++END-IF

           IF WS-TOT-AMT         NOT = WS-EWS-TOT-AMT
           OR MGBC-GL-CMPY       NOT = EGBC0-GL-CMPY
           OR MGBC-GL-ACCT       NOT = EGBC0-GL-ACCT
           OR WS-TAX-RCVBLE-FLAG NOT = EGBC0-TAX-RCVBLE-FLAG
              IF EGBB0-AUTH-LVL = '1'
                 MOVE 0                TO EGBB0-GO6-GRP
                                          EGBB0-GO7-GRP
                                          EGBB0-MIN-AUTH
                                          EGBB0-RECALC-MIN-AUTH
                                          EGBB0-ACT-AUTH
                 MOVE SPACES           TO EGBB0-QRY-AUTH
              ELSE
                 IF EGBB0-AUTH-LVL = '2'
                    MOVE 0             TO EGBC0-GO7-GRP
                                          EGBC0-MIN-AUTH
                                          EGBC0-RECALC-MIN-AUTH
                                          EGBC0-ACT-AUTH
                    MOVE SPACES        TO EGBC0-AUTH-GRP
                                          EGBC0-AUTH-CNTRL
                                          EGBC0-QRY-AUTH
                 END-IF
              END-IF
           END-IF

      *--- CALCULATE SPLIT ANALYSIS VALUE FOR USE LATER
|          IF EGBC0-TAX-RCVBLE-FLAG = '1' OR '2'
              MOVE MGBC-LINE-TOT-AMT   TO WS-SA-VALUE
           ELSE
              COMPUTE WS-SA-VALUE = MGBC-LINE-TOT-AMT +
                                    MGBC-LINE-TAX-AMT +
                                    MGBC-LINE-SLFASSD-AMT
           END-IF

           MOVE CGBXOUT-TOT-AMT        TO EGBC0-LINE-TOT-AMT
           MOVE CGBXOUT-TAX-AMT        TO EGBC0-LINE-TAX-AMT

      *--- IF ACTION IS 'ALL SPLIT ANALYSIS', SET INDIVIDUAL
      *--- LINE ACTION TO 53 (SPLIT ANALYSYS)
           IF  CF-SAVED-ACTION = 54
           AND MGBC-SA-TYPE-S = 'Y'
               MOVE 53                 TO MGBC-ACTION
               MOVE 'Y'                TO MGBC-ACTION-S
           END-IF

      *--- DO NOT ALLOW SPLIT ANALYSIS WHEN ANY DETAIL LINE HAS SPLIT
      *--- ANALYSIS
           IF MGBC-ACTION    = 53
              IF MGBC-PRO-RATA-IND = '2'
                 MOVE 'E'              TO CZAZSOFT-MSG-TYPE
                 MOVE 'GBC25'          TO CZAZSOFT-MSG
                 MOVE MGBC-ACTION-F    TO CZAZSOFT-FIELD
                 MOVE CGBB-C-MAP-LINE  TO CZAZSOFT-ROW
                 PERFORM SZAZSOFT-SET-APPL
              END-IF
           END-IF

           MOVE SPACES                 TO WS-SA-ERROR-FLAG

++IF TARGET(POP=Y)
|     *--- WHEN ACTION IS NOT 'ENTER' AND IS NOT 'GO TO SPLIT ANALYSIS',
|     *--- MAKE SURE THAT SPLIT ANALYSIS VALUE MATCHES DETAIL LINE TOTAL
|          IF  CF-SAVED-ACTION  NOT = WZAZLITS-ENTER
|          AND CF-SAVED-ACTION  NOT = WZAZLITS-NEXT-FORMAT
|          AND CF-SAVED-ACTION  NOT = WZAZLITS-LINE-WARNINGS
|          AND CF-SAVED-ACTION  NOT = 54
|          AND MGBC-ACTION      NOT = 53
|          AND MGBC-SA-TYPE     NOT = '0'
|          AND MGBC-ORDR-LINE-NUM   = ZERO
               IF MGBC-SA-TYPE-S = 'Y'
                  IF EGBD0R-NENTRIES = 0
|                     MOVE 'Y'         TO WS-SA-ERROR-FLAG
|                     MOVE 'E'         TO CZAZSOFT-MSG-TYPE
|                     MOVE 'GBC19'     TO CZAZSOFT-MSG
|                     MOVE MGBC-SA-TYPE-F
|                                      TO CZAZSOFT-FIELD
|                     MOVE CGBB-C-MAP-LINE
|                                      TO CZAZSOFT-ROW
|                     PERFORM SZAZSOFT-SET-APPL
E52017            END-IF
|              ELSE
|                 IF WS-SA-VALUE NOT = EGBC0-SA-VALUE
|                    MOVE 'Y'          TO WS-SA-ERROR-FLAG
|                    MOVE 'E'          TO CZAZSOFT-MSG-TYPE
|                    MOVE 'GBC09'      TO CZAZSOFT-MSG
|                    MOVE MGBC-LINE-TOT-AMT-F
|                                      TO CZAZSOFT-FIELD
|                    MOVE CGBB-C-MAP-LINE
|                                      TO CZAZSOFT-ROW
|                    PERFORM SZAZSOFT-SET-APPL
|                 END-IF
|                 IF MGBC-QTY-INVCD NOT = EGBC0-SA-QTY
|                    MOVE 'Y'          TO WS-SA-ERROR-FLAG
|                    MOVE 'E'          TO CZAZSOFT-MSG-TYPE
|                    MOVE 'GBC10'      TO CZAZSOFT-MSG
|                    MOVE MGBC-QTY-INVCD-F
|                                      TO CZAZSOFT-FIELD
|                    MOVE CGBB-C-MAP-LINE
|                                      TO CZAZSOFT-ROW
|                    PERFORM SZAZSOFT-SET-APPL
|                 END-IF
|              END-IF
|          END-IF
++ELSE
|          IF  CF-SAVED-ACTION  NOT = WZAZLITS-ENTER
|          AND CF-SAVED-ACTION  NOT = WZAZLITS-NEXT-FORMAT
|          AND CF-SAVED-ACTION  NOT = WZAZLITS-LINE-WARNINGS
|          AND CF-SAVED-ACTION  NOT = 54
|          AND MGBC-ACTION      NOT = 53
|          AND MGBC-SA-TYPE     NOT = '0'
               IF MGBC-SA-TYPE-S = 'Y'
                  IF EGBD0R-NENTRIES = 0
|                     MOVE 'Y'         TO WS-SA-ERROR-FLAG
|                     MOVE 'E'         TO CZAZSOFT-MSG-TYPE
|                     MOVE 'GBC19'     TO CZAZSOFT-MSG
|                     MOVE MGBC-SA-TYPE-F
|                                      TO CZAZSOFT-FIELD
|                     MOVE CGBB-C-MAP-LINE
|                                      TO CZAZSOFT-ROW
|                  PERFORM SZAZSOFT-SET-APPL
E52017            END-IF
|              ELSE
|                 IF WS-SA-VALUE NOT = EGBC0-SA-VALUE
|                    MOVE 'Y'          TO WS-SA-ERROR-FLAG
|                    MOVE 'E'          TO CZAZSOFT-MSG-TYPE
|                    MOVE 'GBC09'      TO CZAZSOFT-MSG
|                    MOVE MGBC-LINE-TOT-AMT-F
|                                      TO CZAZSOFT-FIELD
|                    MOVE CGBB-C-MAP-LINE
|                                      TO CZAZSOFT-ROW
|                    PERFORM SZAZSOFT-SET-APPL
|                 END-IF
|                 IF MGBC-QTY-INVCD NOT = EGBC0-SA-QTY
|                    MOVE 'Y'          TO WS-SA-ERROR-FLAG
|                    MOVE 'E'          TO CZAZSOFT-MSG-TYPE
|                    MOVE 'GBC10'      TO CZAZSOFT-MSG
|                    MOVE MGBC-QTY-INVCD-F
|                                      TO CZAZSOFT-FIELD
|                    MOVE CGBB-C-MAP-LINE
|                                      TO CZAZSOFT-ROW
|                    PERFORM SZAZSOFT-SET-APPL
|                 END-IF
|              END-IF
|          END-IF
++END-IF

      *--- WHEN ACTION IS 'GO TO LINE AUTHORISATION', MAKE SURE
      *--- SPLIT ANALYSIS HAS BEEN ENTERED, IF REQUESTED
           IF  MGBC-ACTION        = 56
           AND MGBC-SA-TYPE-S     = 'Y'
           AND MGBC-SA-TYPE   NOT = '0'
               IF WS-SA-VALUE    NOT = EGBC0-SA-VALUE
               OR MGBC-QTY-INVCD NOT = EGBC0-SA-QTY
                  MOVE 'E'             TO CZAZSOFT-MSG-TYPE
                  MOVE 'GBC17'         TO CZAZSOFT-MSG
                  MOVE MGBC-ACTION-F   TO CZAZSOFT-FIELD
                  MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
                  PERFORM SZAZSOFT-SET-APPL
               END-IF
           END-IF

      *--- WHEN ACTION IS NOT 'ENTER' AND NOT 'GO TO LINE AUTHORISATION'
      *--- SEE IF AUTHORISATIONS ARE REQUIRED FOR THIS LINE
           IF   WS-SA-ERROR-FLAG = SPACES
           AND  CF-SAVED-ACTION  NOT = WZAZLITS-ENTER
           AND  CF-SAVED-ACTION  NOT = WZAZLITS-NEXT-FORMAT
           AND  CF-SAVED-ACTION  NOT = WZAZLITS-LINE-WARNINGS
           AND  CF-SAVED-ACTION  NOT = 54
           AND  MGBC-ACTION      NOT = 56
           AND  EGBB0-AUTH-MTHD      = '4'
           AND  EGBB0-AUTH-LVL       = '2'
           AND (EGBC0-AUTH-CNTRL NOT = EGBB0-AUTH-CNTRL
           OR   EGBC0-AUTH-GRP   NOT = EGBB0-AUTH-GRP)
                IF EGBB0-CURR = WAZCMPYD-BASE-CURR
                 IF EGBC0-TAX-RCVBLE-FLAG = '1'
                    MOVE MGBC-LINE-TOT-AMT
                                     TO WS-BASE-AMT
                 ELSE
                    COMPUTE WS-BASE-AMT = MGBC-LINE-TOT-AMT +
                                          MGBC-LINE-TAX-AMT +
                                          MGBC-LINE-SLFASSD-AMT
                 END-IF
                 IF EGBC0-TAX-RCVBLE-FLAG = '2'
                    SUBTRACT MGBC-VAT-REC-VALUE
                        FROM WS-BASE-AMT
                 END-IF
              ELSE
                 INITIALIZE CAGP
                 MOVE CAGP-CALC-VAL    TO CAGP-FUNC
                 MOVE WAZCMPYD-BASE-CURR
                                       TO CAGP-BASE-CURR
                 MOVE MGBC-CURR        TO CAGP-NON-BASE-CURR
                 MOVE EGBB0-CONV-UNITS TO CAGP-CONV-UNITS-I
                 MOVE EGBB0-CONV-DRCTN TO CAGP-CONV-DRCTN-I
                 IF EGBC0-TAX-RCVBLE-FLAG = '1'
                    MOVE MGBC-LINE-TOT-AMT
                                       TO CAGP-NON-BASE-VAL-I
                 ELSE
                    COMPUTE CAGP-NON-BASE-VAL-I =
                            MGBC-LINE-TOT-AMT +
                            MGBC-LINE-TAX-AMT +
                            MGBC-LINE-SLFASSD-AMT
                 END-IF
                 IF EGBC0-TAX-RCVBLE-FLAG = '2'
                    SUBTRACT MGBC-VAT-REC-VALUE
                        FROM CAGP-NON-BASE-VAL-I
                 END-IF
                 MOVE MGBC-EXCH-RATE TO CAGP-EXCH-RATE-I
                 MOVE '0'            TO CAGP-NBASE-TOLRN-IND
                 EXEC QSP CALL VLDTE_CURR
                      CAGP
                 END-EXEC
                 MOVE CAGP-BASE-VAL-O
                                     TO WS-BASE-AMT
              END-IF
              IF WS-BASE-AMT > 0
              OR TPBSUPP-AUTH-NEG-FLAG NOT = 'Y'
                MOVE WS-BASE-AMT     TO WS-POS-BASE-AMT
              ELSE
                COMPUTE WS-POS-BASE-AMT = WS-BASE-AMT * -1
              END-IF
++IF TARGET(POP=Y)
|             IF WS-POS-BASE-AMT >= EGBB0-AUTH-MIN-VAL
|                IF  EGBB0-ORDR-VAL         = ZERO
|                OR  CGBVOUT-AUTH-ORDR-RLTD = 'Y'
|                OR (EGBC0-ORDR-LINE-NUM    = ZERO AND
|                    WS-AUTH-CHRG-FLAG      = 'Y')
|                OR (EGBC0-ORDR-REF = SPACES
|                AND EGBC0-ORDR-LINE-NUM = ZERO)
|                   MOVE 'E'             TO CZAZSOFT-MSG-TYPE
|                   MOVE 'GBC12'         TO CZAZSOFT-MSG
|                   MOVE MGBC-ACTION-F   TO CZAZSOFT-FIELD
|                   MOVE CGBB-C-MAP-LINE TO CZAZSOFT-ROW
|                   PERFORM SZAZSOFT-SET-APPL
|                END-IF
|             END-IF
++ELSE
|             IF WS-POS-BASE-AMT >= EGBB0-AUTH-MIN-VAL
|                MOVE 'E'                TO CZAZSOFT-MSG-TYPE
|                MOVE 'GBC12'            TO CZAZSOFT-MSG
|                MOVE MGBC-ACTION-F      TO CZAZSOFT-FIELD
|                MOVE CGBB-C-MAP-LINE    TO CZAZSOFT-ROW
|                PERFORM SZAZSOFT-SET-APPL
|             END-IF
++END-IF
           END-IF

++IF TARGET(POP=Y)
|     *--- IF AUTHORISATION OF ORDER RELATED LINES IS PROHIBITED,
|     *--- DO NOT ALLOW ACTION 'AUTHORISE LINE' UNLESS LINE IS A
|     *--- MISCELLANEOUS CHARGE LINE
|          IF  MGBC-ACTION            = 56
|          AND EGBC0-ORDR-REF     NOT = SPACES
|          AND EGBC0-ORDR-LINE-NUM    > ZERO
|          AND CGBVOUT-AUTH-ORDR-RLTD = SPACE
|          AND WS-AUTH-CHRG-FLAG      = 'Y'
|              MOVE 'E'                TO CZAZSOFT-MSG-TYPE
|              MOVE 'GBC13'            TO CZAZSOFT-MSG
|              MOVE MGBC-ACTION-F      TO CZAZSOFT-FIELD
|              MOVE CGBB-C-MAP-LINE    TO CZAZSOFT-ROW
|              PERFORM SZAZSOFT-SET-APPL
|          END-IF
++END-IF

      *--- DO NOT ALLOW ACTION 'AUTHORISE LINE' WHEN LINE VALUE IS LESS
      *--- THAN AUTHORISATION MINIMUM VALUE
           IF MGBC-ACTION = 56
              IF EGBB0-CURR = WAZCMPYD-BASE-CURR
                 IF EGBC0-TAX-RCVBLE-FLAG = '1'
                    MOVE MGBC-LINE-TOT-AMT
                                       TO WS-BASE-AMT
                 ELSE
                    COMPUTE WS-BASE-AMT = MGBC-LINE-TOT-AMT +
                                          MGBC-LINE-TAX-AMT +
                                          MGBC-LINE-SLFASSD-AMT
                 END-IF
                 IF EGBC0-TAX-RCVBLE-FLAG = '2'
                    SUBTRACT MGBC-VAT-REC-VALUE
                        FROM WS-BASE-AMT
                 END-IF
              ELSE
                 INITIALIZE CAGP
                 MOVE CAGP-CALC-VAL    TO CAGP-FUNC
                 MOVE WAZCMPYD-BASE-CURR
                                       TO CAGP-BASE-CURR
                 MOVE MGBC-CURR        TO CAGP-NON-BASE-CURR
                 MOVE EGBB0-CONV-UNITS TO CAGP-CONV-UNITS-I
                 MOVE EGBB0-CONV-DRCTN TO CAGP-CONV-DRCTN-I
                 IF EGBC0-TAX-RCVBLE-FLAG = '1'
                    MOVE MGBC-LINE-TOT-AMT
                                       TO CAGP-NON-BASE-VAL-I
                 ELSE
                    COMPUTE CAGP-NON-BASE-VAL-I =
                            MGBC-LINE-TOT-AMT +
                            MGBC-LINE-TAX-AMT
                 END-IF
                 IF EGBC0-TAX-RCVBLE-FLAG = '2'
                    SUBTRACT MGBC-VAT-REC-VALUE
                        FROM CAGP-NON-BASE-VAL-I
                 END-IF
                 MOVE MGBC-EXCH-RATE   TO CAGP-EXCH-RATE-I
                 MOVE '0'              TO CAGP-NBASE-TOLRN-IND
                 EXEC QSP CALL VLDTE_CURR
                      CAGP
                 END-EXEC
                 MOVE CAGP-BASE-VAL-O  TO WS-BASE-AMT
              END-IF

              IF WS-BASE-AMT > 0
              OR TPBSUPP-AUTH-NEG-FLAG NOT = 'Y'
                MOVE WS-BASE-AMT       TO WS-POS-BASE-AMT
              ELSE
                COMPUTE WS-POS-BASE-AMT = WS-BASE-AMT * -1
              END-IF

              IF WS-POS-BASE-AMT < EGBB0-AUTH-MIN-VAL
                 MOVE 'E'              TO CZAZSOFT-MSG-TYPE
                 MOVE 'GBC13'          TO CZAZSOFT-MSG
                 MOVE MGBC-ACTION-F    TO CZAZSOFT-FIELD
                 MOVE CGBB-C-MAP-LINE  TO CZAZSOFT-ROW
                 PERFORM SZAZSOFT-SET-APPL
              END-IF
           END-IF

           IF EGBB0-AUTH-LVL NOT = '1'
              IF EGBB0-PR-LINES = 0
                 MOVE '0'              TO EGBC0-AUTH-DENIED
              END-IF

              IF (EGBC0-AUTH-DENIED = '1' AND
                  CZAZSTCK-ACTION   = WZAZLITS-LINE-WARNINGS)
              OR (EGBC0-AUTH-DENIED = '2' AND
                  MGBC-ACTION       = 56)
                 CONTINUE
              ELSE
                 MOVE '0'              TO EGBC0-AUTH-DENIED
              END-IF

              IF  EGBB0-PR-LINES    > 0
              AND MGBC-ACTION       = 56
              AND EGBC0-AUTH-DENIED NOT = '2'
                 MOVE '1'              TO EGBC0-AUTH-DENIED

                 IF (EGBB0-AUTH-TYPE NOT = '0'
                                 AND NOT = '1')
                 AND MGBC-PRO-RATA-IND   = '2'
                    MOVE 'E'           TO CZAZSOFT-MSG-TYPE
                    MOVE 'GBC22'       TO CZAZSOFT-MSG
                    MOVE MGBC-ACTION-F TO CZAZSOFT-FIELD
                    MOVE CGBB-C-MAP-LINE
                                       TO CZAZSOFT-ROW
                    PERFORM SZAZSOFT-SET-APPL
                    MOVE '4'           TO EGBC0-AUTH-DENIED
                 END-IF
              END-IF

              IF   EGBC0-AUTH-DENIED = '1'
              AND (MGBC-ACTION       = 56
              OR   CZAZSTCK-ACTION   = WZAZLITS-LINE-WARNINGS)
                 MOVE 'W'              TO CZAZSOFT-MSG-TYPE
                 MOVE 'GBC21'          TO CZAZSOFT-MSG
                 MOVE CGBB-C-MAP-LINE  TO CZAZSOFT-ROW
                 MOVE MGBC-ITEM-PRC-F  TO CZAZSOFT-FIELD
                 PERFORM XA-SET-WARNING
                 IF CZAZSTCK-ACTION = WZAZLITS-LINE-WARNINGS
                    MOVE '2'           TO EGBC0-AUTH-DENIED
                 END-IF
              END-IF

              IF  EGBC0-AUTH-DENIED   = '2'
              AND MGBC-ACTION         = 56
              AND CZAZSTCK-ACTION NOT = WZAZLITS-LINE-WARNINGS
                 MOVE '3'              TO EGBC0-AUTH-DENIED
      *--- HAS ACCESS TO ACCEPT AUTHORISATION WARNINGS BEEN DENIED
                 IF CGBB-C-AUTH-LINE-DNL-FLAG = 'Y'
                     MOVE '1'          TO EGBC0-AUTH-DENIED
                     MOVE 'I'          TO CZAZSOFT-MSG-TYPE
                     MOVE CGBB-C-MAP-LINE
                                       TO CZAZSOFT-ROW
                     MOVE MGBC-ACTION-F
                                       TO CZAZSOFT-FIELD
                     MOVE 'GBC24'      TO CZAZSOFT-MSG
                          PERFORM SZAZSOFT-SET-APPL
                 END-IF
              END-IF
           END-IF


           IF  MGBC-ITEM NOT = EGBC0-ITEM
           AND MGBC-ORDR-REF = SPACES
              IF CGBXOUT-KIT-CODE NOT = SPACES
                 MOVE MGBC-ITEM        TO CPYN-ITEM
                 MOVE CGBB-CMPY        TO CPYN-CMPY
                 MOVE CGBXOUT-KIT-CODE TO CPYN-KIT-CODE
                 MOVE ZERO             TO CPYN-QTY
                 MOVE CPYN-EWS-BUILD-TRAN
                                       TO CPYN-EWS-BUILD-IND
                 MOVE CGBB-EWS-INSTANCE
                                       TO CPYN-EWS-INSTANCE
                 MOVE CGBB-C-ESN       TO CPYN-EWS-GRP
      *--- CALL BUILD ROUTINE
                 PERFORM EGBC0-CLOSE

                 EXEC QSP CALL BUILD_ITEM_KIT
                         CPYN
                 END-EXEC
                 MOVE 'Y'              TO CF-REFORMAT
                 PERFORM EGBC0-DEFINE
                 compute EGBC0P-LOG-ENTRY
                   = CGBB-C-PRIM-ITEM + CGBB-C-MAP-LINE - 1
                  perform EGBC0-GET

              END-IF
           END-IF




       V-VALIDATE-ACTION.

           IF MGBC-SA-TYPE-S = 'Y'
           AND MGBC-SA-TYPE-S NOT = '0'
              ADD +1                   TO WS-SA-ROWS
           END-IF

      *--- DO NOT ALLOW ACTION 'SPLIT ANALYSIS' WHEN NO SPLIT ANALYSIS
      *--- TYPE HAS BEEN ENTERED
           IF  MGBC-ACTION    = 53
           AND (MGBC-SA-TYPE-S = 'N'
           OR   MGBC-SA-TYPE   = '0')
               MOVE 'E'                TO CZAZSOFT-MSG-TYPE
               MOVE 'GBC07'            TO CZAZSOFT-MSG
               MOVE MGBC-ACTION-F      TO CZAZSOFT-FIELD
               MOVE CGBB-C-MAP-LINE    TO CZAZSOFT-ROW
               PERFORM SZAZSOFT-SET-APPL
               GO TO +++-EXIT
           END-IF

      *--- DO NOT ALLOW ACTION 'SPLIT ANALYSIS' WHEN DETAIL LINE(S)
      *--- HAVE ASSOCIATED PRO-RATA
           IF MGBC-ACTION    = 53
              IF EGBB0-PR-LINES > 0
                 MOVE 'E'                TO CZAZSOFT-MSG-TYPE
                 MOVE 'GBC25'            TO CZAZSOFT-MSG
                 MOVE MGBC-ACTION-F      TO CZAZSOFT-FIELD
                 MOVE CGBB-C-MAP-LINE    TO CZAZSOFT-ROW
                 PERFORM SZAZSOFT-SET-APPL
              END-IF
           END-IF

      *--- DO NOT ALLOW ACTION 'GRNS' WHEN NO GRNS EXIST FOR THE LINE

++IF TARGET(POP=Y)
|          PERFORM EGRB0-DEFINE
|          IF  MGBC-ACTION     = 58
|          AND EGRB0R-NENTRIES = ZERO
|              MOVE 'E'                TO CZAZSOFT-MSG-TYPE
|              MOVE 'GBC33'            TO CZAZSOFT-MSG
|              MOVE MGBC-ACTION-F      TO CZAZSOFT-FIELD
|              MOVE CGBB-C-MAP-LINE    TO CZAZSOFT-ROW
|              PERFORM SZAZSOFT-SET-APPL
|          END-IF
|
|     *--- DO NOT ALLOW ACTION WHEN ORDER RELATED
|     *--- misc charge line
|          IF  MGBC-ACTION     = 58
|          and EGBC0-ORDR-LINE-NUM = ZERO
|              MOVE 'E'                TO CZAZSOFT-MSG-TYPE
|              MOVE 'GBC48'            TO CZAZSOFT-MSG
|              MOVE MGBC-ACTION-F      TO CZAZSOFT-FIELD
|              MOVE CGBB-C-MAP-LINE    TO CZAZSOFT-ROW
|              PERFORM SZAZSOFT-SET-APPL
|          END-IF
|
|     *--- DO NOT ALLOW ACTION 'SPLIT ANALYSIS' WHEN ORDER RELATED
|     *--- DETAIL LINE AND NO GRN'S EXIST FOR LINE.
|
|          IF MGBC-ACTION     = 53
|             IF EGBC0-ORDR-LINE-NUM > ZERO
|             AND EGRB0R-NENTRIES = ZERO
|             AND EGBC0-AUTO-GRN-FLAG NOT = 'Y'
|                MOVE 'E'              TO CZAZSOFT-MSG-TYPE
|                MOVE 'GBC45'          TO CZAZSOFT-MSG
|                MOVE MGBC-ACTION-F    TO CZAZSOFT-FIELD
|                MOVE CGBB-C-MAP-LINE  TO CZAZSOFT-ROW
|                PERFORM SZAZSOFT-SET-APPL
|             END-IF
|          END-IF
|
|          PERFORM EGRB0-CLOSE
++END-IF

++EXIT WC-DELETE TYPE=POST

           IF EGBC0-SEL = 'Y'
              PERFORM S2-DECREMENT-TOTALS
           END-IF
      *--- SCAN THROUGH ALL THE EWS FOR THE ORDER REF OF THE DETAIL LINE
           IF EGBC0-ORDR-REF NOT = SPACES
              MOVE EGBC0-ORDR-REF      TO WS-ORDR-REF
              MOVE ZERO                TO WS-COUNT
              PERFORM VARYING EGBC0P-LOG-ENTRY
                      FROM 1 BY 1
                      UNTIL EGBC0P-LOG-ENTRY > EGBC0R-NENTRIES
                      OR WS-COUNT > 1
                 PERFORM EGBC0-GET
                 IF  EGBC0-ORDR-REF = WS-ORDR-REF
                   ADD 1               TO WS-COUNT
                 END-IF
              END-PERFORM
              IF WS-COUNT = 1
      *--- THERES ONLY 1 OCCURRENCE OF THE ORDER REF, SO UNLOCK IT
                 MOVE WS-ORDR-REF      TO CDOZ-ORDR-REF
                 MOVE CDOZ-FGRND-UNLOCK
                                       TO CDOZ-FUNC
                 MOVE CGBB-CMPY  TO CDOZ-CMPY
                 MOVE TDOORDER-DOC-ORDR
                                       TO CDOZ-DOC-IND
                 MOVE CZAZPUBL-USR     TO CDOZ-LOCK-USR
                 MOVE CZAZSTCK-CURR-SESS
                                       TO CDOZ-LOCK-SESS
                 EXEC QSP CALL ORDR_LOCK_UNLOCK
                      CDOZ
                 END-EXEC
      *--- ALSO DELETE ANY EGRA0'S THAT MATCH THE ORDER REF
                 MOVE ZERO             TO WS-COUNT
                 PERFORM VARYING EGRA0P-LOG-ENTRY
                      FROM 1 BY 1
                      UNTIL EGRA0P-LOG-ENTRY > EGRA0R-NENTRIES
                      OR WS-COUNT > 0
                    PERFORM EGRA0-GET
                    IF EGRA0-ORDR-REF = WS-ORDR-REF
                      ADD 1            TO WS-COUNT
                      PERFORM EGRA0-DELETE
                    END-IF
                 END-PERFORM
              END-IF
           END-IF
      *--- ARE WE DELETING THE LAST LINE OF EWS
           IF EGBC0R-NENTRIES = 1
              MOVE ' '                 TO CGBB-GB9-FLAG
              MOVE ' '                 TO EGBB0-C-DETL-DISP-FLAG
              MOVE ' '                 TO CGBB-C-DETL-DISP-FLAG
              MOVE ' '                 TO CGBB-C-ORDRS-FLAG
      *--- UNPROTECT THE ORDR-REF AND ADVC-NOTE
              MOVE SPACES              TO CZAZSOFT-PROTECT-IND
              MOVE 'Y'                 TO CZAZSOFT-UNPROTECT-IND
              MOVE MGBC-ORDR-REF-F     TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
              MOVE SPACES              TO CZAZSOFT-PROTECT-IND
              MOVE 'Y'                 TO CZAZSOFT-UNPROTECT-IND
              MOVE MGBC-ADVC-NOTE-F    TO CZAZSOFT-FIELD
              PERFORM SZAZSOFT-SET-APPL
           END-IF

++EXIT WF-DUP-SINGLE TYPE=POST

      *--- remove order line number from duplicated lines
           MOVE 0                      TO MGBC-ORDR-LINE-NUM
           MOVE 'N'                    TO MGBC-ORDR-LINE-NUM-S
           MOVE SPACES                 TO MGBC-DETL-ORDR-REF
           MOVE 'N'                    TO MGBC-DETL-ORDR-REF-S
           MOVE 0                      TO EGBC0-ORDR-LINE-NUM
           MOVE 'N'                    TO EGBC0-ORDR-LINE-NUM-S
           MOVE SPACES                 TO EGBC0-ORDR-REF
           MOVE 'N'                    TO EGBC0-ORDR-REF-S
           MOVE SPACES                 TO EGBC0-CMPLT-ORDR-IND
           MOVE 'N'                    TO EGBC0-CMPLT-ORDR-IND-S
      *--- the new line will be selected so inc totals
           PERFORM S1-INCREMENT-FROM-EWS

++EXIT PDEF-ROUTINES TYPE=ONLY

           COPY SPZCNTRL.
           COPY SGZCNTRL.
           COPY SAZEACSB.
           COPY SAZEANSB.
           COPY SAZ0ANAL.
++IF TARGET(GL=Y)
           COPY SEZCNTRL.
++END-IF
++IF TARGET(PT=Y)
           COPY SKZCMPYD.
           COPY SKZPTSUB.
           COPY SKZCNTRL.
++END-IF

       CLEAR-SUPP-FIELDS SECTION.

           MOVE 'N'                    TO MGBC-SUPP-ADDR3-S
                                          MGBC-SUPP-ADDR4-S
                                          MGBC-SUPP-ADDR5-S
                                          MGBC-SUPP-ADDR6-S
                                          MGBC-ADDR0-POSTCODE-S
                                          MGBC-REG-NUM-S
                                          MGBC-PAY-STAT-DESCR-S
                                          MGBC-PAY-MTHD-DESCR-S
                                          MGBC-SUPP-BANK-ACCT-S
                                          MGBC-SUPP-SRT-CODE-S
                                          MGBC-SUPP-IBAN-S
                                          MGBC-PYMNT-ADDR-LINE3-S
                                          MGBC-PYMNT-ADDR-LINE4-S
                                          MGBC-PYMNT-ADDR-LINE5-S
                                          MGBC-PYMNT-ADDR-LINE6-S
                                          MGBC-PYMNT-POSTCODE-S
                                          MGBC-PYMNT-MTHD-DESCR-S
                                          MGBC-PYMNT-BANK-ACCT-S
                                          MGBC-PYMNT-SRT-CODE-S
                                          MGBC-PYMNT-IBAN-S

       ADDITIONAL-DETAILS SECTION.

           MOVE TPBADDR-POSTCODE       TO MGBC-ADDR0-POSTCODE
           MOVE 'Y'                    TO MGBC-ADDR0-POSTCODE-S
           MOVE TPBADDR-ADDR-LINE3     TO MGBC-SUPP-ADDR3
           MOVE 'Y'                    TO MGBC-SUPP-ADDR3-S
           MOVE TPBADDR-ADDR-LINE4     TO MGBC-SUPP-ADDR4
           MOVE 'Y'                    TO MGBC-SUPP-ADDR4-S
           MOVE TPBADDR-ADDR-LINE5     TO MGBC-SUPP-ADDR5
           MOVE 'Y'                    TO MGBC-SUPP-ADDR5-S
           MOVE TPBADDR-ADDR-LINE6     TO MGBC-SUPP-ADDR6
           MOVE 'Y'                    TO MGBC-SUPP-ADDR6-S
           MOVE TPBSUPP-BANK-ACCT      TO MGBC-SUPP-BANK-ACCT
           MOVE 'Y'                    TO MGBC-SUPP-BANK-ACCT-S
           MOVE TPBSUPP-SRT-CODE       TO MGBC-SUPP-SRT-CODE
           MOVE 'Y'                    TO MGBC-SUPP-SRT-CODE-S
           MOVE TPBSUPP-IBAN           TO MGBC-SUPP-IBAN
           MOVE 'Y'                    TO MGBC-SUPP-IBAN-S
           IF TPBSUPP-NCIS-PAY-STAT NOT = SPACE
              EVALUATE TPBSUPP-NCIS-PAY-STAT
                 WHEN 'G'
                    MOVE 'Gross'       TO MGBC-PAY-STAT-DESCR
                 WHEN 'S'
                    MOVE 'Standard'    TO MGBC-PAY-STAT-DESCR
                 WHEN 'H'
                    MOVE 'Higher Rate' TO MGBC-PAY-STAT-DESCR
                 WHEN 'U'
                    MOVE 'Unknown'     TO MGBC-PAY-STAT-DESCR
              END-EVALUATE
              MOVE 'Y'                 TO MGBC-PAY-STAT-DESCR-S
           END-IF
           MOVE CGBB-CMPY              TO TPBSCHD-CMPY
           MOVE MGBC-SUPP              TO TPBSCHD-SUPP
           MOVE ZERO                   TO TPBSCHD-ADDR-NUM
           PERFORM SQL-SELECT-TPBSCHD
           IF SQLCODE = WZAZSQL-OK
              MOVE CGBB-CMPY           TO TGAPAYM-CMPY
              MOVE TPBSCHD-PYMNT-MTHD  TO TGAPAYM-PYMNT-MTHD
              PERFORM SQL-SELECT-TGAPAYM
              IF SQLCODE = WZAZSQL-OK
                 MOVE TGAPAYM-DESCR    TO MGBC-PAY-MTHD-DESCR
                 MOVE 'Y'              TO MGBC-PAY-MTHD-DESCR-S
              END-IF
           END-IF
           MOVE CGBB-CMPY              TO TPBTAX-CMPY
           MOVE MGBC-SUPP              TO TPBTAX-SUPP
           MOVE MGBC-TRAN-LOCTN        TO TPBTAX-LOCTN
           PERFORM SQL-SELECT-TPBTAX-DFLT
           IF SQLCODE = WZAZSQL-OK
              MOVE TPBTAX-REG-NUM      TO MGBC-REG-NUM
              MOVE 'Y'                 TO MGBC-REG-NUM-S
           END-IF

           IF MGBC-PYMNT-ADDR-S NOT = 'Y'
           OR MGBC-PYMNT-ADDR = 0
              GO TO +++-EXIT
           END-IF

           MOVE CGBB-CMPY              TO TPBADDR-CMPY
           MOVE MGBC-SUPP              TO TPBADDR-SUPP
           MOVE MGBC-PYMNT-ADDR        TO TPBADDR-ADDR-NUM
           PERFORM SQL-SELECT-TPBADDR
           IF SQLCODE = WZAZSQL-OK
              MOVE TPBADDR-ADDR-LINE3  TO MGBC-PYMNT-ADDR-LINE3
              MOVE 'Y'                 TO MGBC-PYMNT-ADDR-LINE3-S
              MOVE TPBADDR-ADDR-LINE4  TO MGBC-PYMNT-ADDR-LINE4
              MOVE 'Y'                 TO MGBC-PYMNT-ADDR-LINE4-S
              MOVE TPBADDR-ADDR-LINE5  TO MGBC-PYMNT-ADDR-LINE5
              MOVE 'Y'                 TO MGBC-PYMNT-ADDR-LINE5-S
              MOVE TPBADDR-ADDR-LINE6  TO MGBC-PYMNT-ADDR-LINE6
              MOVE 'Y'                 TO MGBC-PYMNT-ADDR-LINE6-S
              MOVE TPBADDR-BANK-ACCT   TO MGBC-PYMNT-BANK-ACCT
              MOVE 'Y'                 TO MGBC-PYMNT-BANK-ACCT-S
              MOVE TPBADDR-SRT-CODE    TO MGBC-PYMNT-SRT-CODE
              MOVE 'Y'                 TO MGBC-PYMNT-SRT-CODE-S
              MOVE TPBADDR-IBAN        TO MGBC-PYMNT-IBAN
              MOVE 'Y'                 TO MGBC-PYMNT-IBAN-S
              MOVE TPBADDR-POSTCODE    TO MGBC-PYMNT-POSTCODE
              MOVE 'Y'                 TO MGBC-PYMNT-POSTCODE-S
              MOVE CGBB-CMPY           TO TPBSCHD-CMPY
              MOVE MGBC-SUPP           TO TPBSCHD-SUPP
              MOVE TPBADDR-ADDR-NUM    TO TPBSCHD-ADDR-NUM
              PERFORM SQL-SELECT-TPBSCHD
              IF SQLCODE = WZAZSQL-OK
                 MOVE CGBB-CMPY        TO TGAPAYM-CMPY
                 MOVE TPBSCHD-PYMNT-MTHD
                                       TO TGAPAYM-PYMNT-MTHD
                 PERFORM SQL-SELECT-TGAPAYM
                 IF SQLCODE = WZAZSQL-OK
                    MOVE TGAPAYM-DESCR TO MGBC-PYMNT-MTHD-DESCR
                    MOVE 'Y'           TO MGBC-PYMNT-MTHD-DESCR-S
                 END-IF
              END-IF


      ****************************************************************
      * E3-BUILD-FROM-KIT SECTION. <                                 *
      ****************************************************************

       E3-BUILD-FROM-KIT SECTION.

          MOVE CGBB-CMPY               TO CPYN-CMPY
          MOVE MGBC-FETCH-KIT-CODE     TO CPYN-KIT-CODE
          MOVE MGBC-FETCH-QTY          TO CPYN-QTY
          MOVE CPYN-EWS-BUILD-TRAN     TO CPYN-EWS-BUILD-IND
          MOVE CGBB-EWS-INSTANCE       TO CPYN-EWS-INSTANCE
          MOVE CGBB-C-ESN              TO CPYN-EWS-GRP

      *--- CALL BUILD ROUTINE
           EXEC QSP CALL BUILD_ITEM_KIT
                         CPYN
           END-EXEC


       LOAD-BLOB-KEY SECTION.

      *--- Build DbCapture URL Key for linking to document manager

           IF EGBB0-BLOB-NUM = ZERO
              MOVE SPACES              TO MGBC-BLOB-URL
              MOVE 'N'                 TO MGBC-BLOB-URL-S
              GO TO +++-EXIT
           END-IF
CED032
CED032*--- GET THE INVOICE LOCATION CODE.
CED032     MOVE CGBB-CMPY              TO TGBBTRAN-CMPY
CED032     MOVE CGBB-BTCH-NUM          TO TGBBTRAN-BTCH-NUM
CED032     MOVE EGBB0-TRAN-SEQ-NUM     TO TGBBTRAN-TRAN-SEQ-NUM
CED032     MOVE SPACES                 TO TGBBTRAN-INV-LOCTN
CED032     PERFORM SQL-SELECT-TGBBTRAN-INV-LOCTN
CED032
CED032*--- GET THE External Invoice BASDA XML "To Action" INV_LOCTN_CLOUD
CED032*--- AND CHECK IF IT MATCHES THE INV-LOCTN, IF SO BUILD URL FROM TGBBTRNC
CED032*--- ELSE BUILD URL FROM TGBBTRAN.
CED032     INITIALIZE CAMR
CED032     MOVE CAMR-GET-WEB-CTLS-CODE TO CAMR-FUNCTION
CED032     MOVE TAMWEBTH-SRCE-EXTERNAL TO CAMR-WEB-SRCE
CED032     MOVE TAMWEBTH-DOC-INV       TO CAMR-WEB-TYPE
CED032     MOVE TAMWEBTH-DOC-XML-BASDA TO CAMR-WEB-FRMT
CED032     MOVE TAMWEBTH-STATE-TO-ACTION
CED032                                 TO CAMR-STATE-IND
CED032     MOVE 'INV_LOCTN_CLOUD'      TO CAMR-CTL-CODE
CED032     EXEC QSP CALL WEB_SRVC_CTLS
CED032                   CAMR
CED032     END-EXEC

           INITIALIZE CATI

           MOVE CATI-BUILD-TBL-PARM    TO CATI-FUNC
           MOVE 'DBARCH'               TO CATI-DOC-MGMT
CED032     IF  TGBBTRAN-INV-LOCTN      = CAMR-CTL-VALUE
CED032     AND TGBBTRAN-INV-LOCTN  NOT = SPACES
CED032        MOVE 'TGBBTRNC'          TO CATI-TBL
CED032     ELSE
              MOVE 'TGBBTRAN'          TO CATI-TBL
CED032     END-IF
           MOVE EGBB0-BLOB-NUM         TO CATI-BLOB-NUM

           EXEC QSP CALL BUILD_ARCH_PARM
                CATI
           END-EXEC.

           STRING CATI-ARCH-URL CATI-ARCH-PARM
                  DELIMITED BY ' '
                  INTO MGBC-BLOB-URL

           MOVE 'Y'                    TO MGBC-BLOB-URL-S

++IF TARGET(POP=Y)
|
|     *****************************************************************
|     * CCA-DISPLAY-TEXT                                              *
|     *****************************************************************
|      CCA-DISPLAY-TEXT SECTION.
|
|          PERFORM VARYING EGBC0P-LOG-ENTRY
|                  FROM CGBB-C-EWS-LINE-NUM BY 1
|                  UNTIL EGBC0P-LOG-ENTRY > EGBC0R-NENTRIES
|
|             PERFORM EGBC0-GET
|
|             IF EGBC0-ORDR-REF NOT = CGBB-C-PREV-ORDR-REF
|                MOVE EGBC0-ORDR-REF
|                                      TO CGBB-C-PREV-ORDR-REF
|                MOVE EGBC0P-LOG-ENTRY
|                                      TO CGBB-C-EWS-LINE-NUM
|
|     *--- WHEN THE ORDER REFERENCE DIFFERS ON THE DETAIL LINE OBTAIN
|     *--- TEXT NUMBER ASSOCIATED WITH THE ORDER
|
|                MOVE CGBB-CMPY         TO TDOORDER-CMPY
|                MOVE TDOORDER-DOC-ORDR TO TDOORDER-DOC-IND
|                MOVE EGBC0-ORDR-REF    TO TDOORDER-ORDR-REF
|
|                PERFORM SQL-SELECT-TDOORDER-1
|
|                IF TDOORDER-TXT-NUM NOT = ZERO
|                   INITIALIZE CPX5
|                   COMPUTE CPX5-LENGTH = LENGTH OF CPX5
|                                       - LENGTH OF CPX5-LENGTH
|                   MOVE CGBB-CMPY
|                                      TO CPX5-CMPY
|                   MOVE TDOORDER-DOC-ORDR
|                                      TO CPX5-DOC-IND
|                   MOVE SPACES        TO CPX5-DOC-DESC
|                   MOVE EGBC0-ORDR-REF
|                                      TO CPX5-DOC-REF
|                   MOVE ZERO          TO CPX5-DOC-REVN
|                   MOVE ZERO          TO CPX5-DOC-LINE
|     *---          RETRIEVE TARGET
|                   INITIALIZE CPM3
|                   MOVE CGBB-CMPY     TO CPM3-CMPY
|                   MOVE TDOORDER-TXT-NUM
|                                      TO CPM3-ORDR-TXT-NUM
|                   MOVE CPM3-FUNC-INVC
|                                      TO CPM3-FUNC-IND
|                   EXEC QSP CALL GRN_GET_TRGT_TXT
|                        CPM3
|                   END-EXEC
|                   MOVE CPM3-TRGT     TO CPX5-DOC-TRGT
|
|                   IF CPM3-TXT-IND  = CPM3-TXT-TRGT
|                   OR (CPM3-TXT-IND  = CPM3-TXT-ORDR
|                   AND TPACNTRL-TRGT-TXT-FLAG  = 'Y')
|                      PERFORM CCB-RETRIEVE-TEXT
|                   ELSE
|                      IF CZAZSTCK-ACTION = 64
|                         MOVE 'I'     TO CZAZSOFT-MSG-TYPE
|                         MOVE 'GBC43' TO CZAZSOFT-MSG
|                         PERFORM SZAZSOFT-SCREEN-LEVEL-MESS
|                      END-IF
|                   END-IF
|                ELSE
|                   IF CZAZSTCK-ACTION = 64
|                      MOVE 'I'        TO CZAZSOFT-MSG-TYPE
|                      MOVE 'GBC43'    TO CZAZSOFT-MSG
|                      PERFORM SZAZSOFT-SCREEN-LEVEL-MESS
|                   END-IF
|                END-IF
|             END-IF
|          END-PERFORM
|
|
|     *****************************************************************
|     * CCB-RETRIEVE-TEXT                                             *
|     *****************************************************************
|      CCB-RETRIEVE-TEXT SECTION.
|
|     *--- IF ACTION (52) = DETAIL LINES
|     *--- AND THE AUTO HEADER TEXT FLAG IS 'Y'
|     *--- OR ACTION (64) = DISPLAY HEADER TEXT
|     *--- THEN THE TEXT ASSOCIATED WITH THE INVOICE HEADER MUST BE
|     *--- RETRIEVED.
|          IF (CZAZSTCK-ACTION = 52
|          AND TPACNTRL-INVCE-TXT-FLAG = 'Y' )
|          OR  CZAZSTCK-ACTION = 64
|     *--- IF THERE IS ONLY NON-TARGETTED TEXT ASSCOCIATED WITH INVOICE
|     *--- HEADER
|     *--- AND THE NON TARGET TEXT AVAILABLE FLAG IS NOT 'Y'
|     *--- THEN THE NON-TARGET TEXT SHOULD'NT BE SHOWN.
|             IF (CZAZSTCK-ACTION = 52
|             AND CPM3-TXT-IND  = CPM3-TXT-ORDR
|             AND TPACNTRL-TRGT-TXT-FLAG NOT = 'Y')
|                 CONTINUE
|             ELSE
|                IF TPACNTRL-TRGT-TXT-FLAG = 'Y'
|                   MOVE SPACES        TO CPX5-DOC-TRGT
|                   MOVE CPX5-TRGT-TXT-INVCE
|                                      TO CPX5-TRGT-TXT-IND
|                ELSE
|                   MOVE CPX5-TRGT-TXT-NO
|                                       TO CPX5-TRGT-TXT-IND
|                END-IF
|                PERFORM INVOKE-DOWN-FPX5
|             END-IF
|           ELSE
|             IF  CZAZSTCK-ACTION = 52
|             AND TPACNTRL-INVCE-TXT-FLAG NOT = 'Y'
|                MOVE 'I'              TO CZAZSOFT-MSG-TYPE
|                MOVE 'GBC42'          TO CZAZSOFT-MSG
|                PERFORM SZAZSOFT-SCREEN-LEVEL-MESS
|             END-IF
|           END-IF
++END-IF

      ******************************************************************
      * SECTION:EAA-PROCESS-EGPU0                                      *
      *         Rebuild EGPU0 EWS from TGBBARSP - GL Responsibility    *
      ******************************************************************
       EAA-PROCESS-EGPU0 SECTION.

           IF  TGOAUTHC-AUTH-LVL = '1'
           AND EGBC0R-LOG-ENTRY  > 1
              GO TO +++-EXIT
           END-IF

           ADD +1                      TO CGBB-O-NEXT-GO7-GRP
           MOVE CGBB-O-NEXT-GO7-GRP    TO CGBB-O-GO7-GRP
           IF TGOAUTHC-AUTH-LVL = '1'
              MOVE CGBB-O-NEXT-GO7-GRP TO EGBB0-GO7-GRP
           ELSE
              MOVE CGBB-O-NEXT-GO7-GRP TO EGBC0-GO7-GRP
           END-IF

           PERFORM EGPU0-DEFINE
           MOVE CGBB-CMPY              TO TGBBARSP-CMPY
           MOVE CGBB-BTCH-NUM          TO TGBBARSP-BTCH-NUM

           IF TGOAUTHC-AUTH-LVL = '1'
              MOVE EGBB0-TRAN-SEQ-NUM  TO TGBBARSP-TRAN-SEQ-NUM
              MOVE ZEROS               TO TGBBARSP-DETL-SEQ-NUM
           ELSE
              MOVE TGBBDETL-TRAN-SEQ-NUM
                                       TO TGBBARSP-TRAN-SEQ-NUM
              MOVE TGBBDETL-DETL-SEQ-NUM
                                       TO TGBBARSP-DETL-SEQ-NUM
           END-IF

           PERFORM SQL-CURSOR-TGBBARSP
           PERFORM SQL-FETCH-TGBBARSP

           PERFORM UNTIL SQLCODE = WZAZSQL-NOT-FOUND
              MOVE EGPU0R-NENTRIES     TO EGPU0P-LOG-AFTER
              PERFORM EGPU0-CREATE
              MOVE EGPU0R-NENTRIES     TO EGPU0-RSP-SEQ-NUM
              MOVE TGBBARSP-GL-CMPY    TO EGPU0-GL-CMPY
              MOVE TGBBARSP-ELEM       TO EGPU0-ELEM
              MOVE TGBBARSP-PATH-KEY   TO EGPU0-PATH-KEY
              MOVE TGBBARSP-ACCS       TO EGPU0-ACCS
              MOVE TGBBARSP-AUTH-ELEM  TO EGPU0-AUTH-ELEM
              MOVE TGBBARSP-AUTH-PATH-KEY
                                       TO EGPU0-AUTH-PATH-KEY
              MOVE TGBBARSP-AUTH-ACCS  TO EGPU0-AUTH-ACCS
              MOVE TGBBARSP-MIN-AUTH   TO EGPU0-MIN-AUTH
              MOVE TGBBARSP-ACT-AUTH   TO EGPU0-ACT-AUTH
              MOVE TGBBARSP-AMT-TO-AUTH
                                       TO EGPU0-AMT-TO-AUTH
              MOVE TGBBARSP-VAL-LVL    TO EGPU0-VAL-LVL
              MOVE TGBBARSP-BUILT-FLAG TO EGPU0-BUILT-FLAG

              PERFORM EAA-SET-EGPU0-S-FIELDS

              PERFORM EAAA-PROCESS-EGPV0

              PERFORM SQL-FETCH-TGBBARSP
           END-PERFORM

           PERFORM EGPU0-CLOSE


      ******************************************************************
      * SECTION:EAA-SET-EGPU0-S-FIELDS                                 *
      *         Set up Map Related fields                              *
      ******************************************************************
       EAA-SET-EGPU0-S-FIELDS SECTION.

           IF EGPU0-GL-CMPY       = SPACES
              MOVE 'N'                 TO EGPU0-GL-CMPY-S
           ELSE
              MOVE 'Y'                 TO EGPU0-GL-CMPY-S
           END-IF

           IF EGPU0-PATH-KEY      = SPACES
              MOVE 'N'                 TO EGPU0-PATH-KEY-S
           ELSE
              MOVE 'Y'                 TO EGPU0-PATH-KEY-S
           END-IF

           IF EGPU0-ELEM          = SPACES
              MOVE 'N'                 TO EGPU0-ELEM-S
           ELSE
              MOVE 'Y'                 TO EGPU0-ELEM-S
           END-IF

           IF EGPU0-ACCS          = SPACES
              MOVE 'N'                 TO EGPU0-ACCS-S
           ELSE
              MOVE 'Y'                 TO EGPU0-ACCS-S
           END-IF

           IF EGPU0-AUTH-PATH-KEY = SPACES
              MOVE 'N'                 TO EGPU0-AUTH-PATH-KEY-S
           ELSE
              MOVE 'Y'                 TO EGPU0-AUTH-PATH-KEY-S
           END-IF

           IF EGPU0-AUTH-ELEM     = SPACES
              MOVE 'N'                 TO EGPU0-AUTH-ELEM-S
           ELSE
              MOVE 'Y'                 TO EGPU0-AUTH-ELEM-S
           END-IF

           IF EGPU0-AUTH-ACCS     = SPACES
              MOVE 'N'                 TO EGPU0-AUTH-ACCS-S
           ELSE
              MOVE 'Y'                 TO EGPU0-AUTH-ACCS-S
           END-IF

           IF EGPU0-AMT-TO-AUTH   = ZEROS
              MOVE 'N'                 TO EGPU0-AMT-TO-AUTH-S
           ELSE
              MOVE 'Y'                 TO EGPU0-AMT-TO-AUTH-S
           END-IF

           IF EGPU0-MIN-AUTH      = ZEROS
              MOVE 'N'                 TO EGPU0-MIN-AUTH-S
           ELSE
              MOVE 'Y'                 TO EGPU0-MIN-AUTH-S
           END-IF

           IF EGPU0-ACT-AUTH      = ZEROS
              MOVE 'N'                 TO EGPU0-ACT-AUTH-S
           ELSE
              MOVE 'Y'                 TO EGPU0-ACT-AUTH-S
           END-IF

           IF EGPU0-BUILT-FLAG    = SPACES
              MOVE 'N'                 TO EGPU0-BUILT-FLAG-S
           ELSE
              MOVE 'Y'                 TO EGPU0-BUILT-FLAG-S
           END-IF

           IF EGPU0-VAL-LVL       = SPACES
              MOVE 'N'                 TO EGPU0-VAL-LVL-S
           ELSE
              MOVE 'Y'                 TO EGPU0-VAL-LVL-S
           END-IF


      ******************************************************************
      * SECTION:EAAA-PROCESS-EGPV0                                     *
      *         Rebuild EGPV0 EWS from TGBBTAUT - GL Responsibility    *
      ******************************************************************
       EAAA-PROCESS-EGPV0 SECTION.

           ADD +1                      TO CGBB-O-NEXT-GPV-GRP
           MOVE CGBB-O-NEXT-GPV-GRP    TO EGPU0-GPV-GRP
           PERFORM EGPV0-DEFINE

           MOVE CGBB-CMPY              TO TGBBTAUT-CMPY
           MOVE CGBB-BTCH-NUM          TO TGBBTAUT-BTCH-NUM

           IF TGOAUTHC-AUTH-LVL = '1'
              MOVE EGBB0-TRAN-SEQ-NUM  TO TGBBTAUT-TRAN-SEQ-NUM
              MOVE ZEROS               TO TGBBTAUT-DETL-SEQ-NUM
           ELSE
              MOVE TGBBDETL-TRAN-SEQ-NUM
                                       TO TGBBTAUT-TRAN-SEQ-NUM
              MOVE TGBBDETL-DETL-SEQ-NUM
                                       TO TGBBTAUT-DETL-SEQ-NUM
           END-IF

           MOVE TGBBARSP-RSP-SEQ-NUM   TO TGBBTAUT-RSP-SEQ-NUM

           PERFORM SQL-CURSOR-TGBBTAUT
           PERFORM SQL-FETCH-TGBBTAUT

           PERFORM UNTIL SQLCODE = WZAZSQL-NOT-FOUND
              MOVE EGPV0R-NENTRIES     TO EGPV0P-LOG-AFTER
              PERFORM EGPV0-CREATE
              MOVE TGBBTAUT-SEL-FLAG   TO EGPV0-SEL
                                          EGPV0-SEL-S
              MOVE TGBBTAUT-USR        TO EGPV0-USR
              MOVE 'Y'                 TO EGPV0-USR-S
              MOVE TGBBTAUT-QRY-AUTH-FLAG
                                       TO EGPV0-QRY-AUTH-FLAG
              MOVE TGBBTAUT-BUILT-FLAG TO EGPV0-ORIG-FLAG

              MOVE TGBBTAUT-AUTH-SEQ-NUM
                                       TO EGPV0-AUTH-SEQ-NUM
              IF EGPV0-AUTH-SEQ-NUM NOT = ZERO
                 MOVE 'Y'              TO EGPV0-AUTH-SEQ-NUM-S
              END-IF

      *---    RE-READ USER DESCRIPTIONS FOR ALL 'SYSTEM BUILT' USERS
      *---
              IF TGBBTAUT-BUILT-FLAG = 'Y'
                 MOVE TGBBTAUT-USR     TO TAFUSR-USR
                 PERFORM SQL-SELECT-TAFUSR

                 IF SQLCODE = WZAZSQL-OK
                    MOVE TAFUSR-DESCR  TO EGPV0-DESCR-USR
                    MOVE 'Y'           TO EGPV0-DESCR-USR-S
                 ELSE
                    MOVE 'N'           TO EGPV0-DESCR-USR-S
                 END-IF
              END-IF

              PERFORM SQL-FETCH-TGBBTAUT

           END-PERFORM

           PERFORM EGPV0-CLOSE


      ******************************************************************
      * SECTION:EAB-PROCESS-EGO70                                      *
      *        Rebuild EGO70 EWS from TGBBTAUT - Non GL Responsibility *
      ******************************************************************
       EAB-PROCESS-EGO70 SECTION.

           IF  TGOAUTHC-AUTH-LVL = '1'
           AND EGBC0R-LOG-ENTRY  > 1
              GO TO +++-EXIT
           END-IF

           ADD +1                      TO CGBB-O-NEXT-GO7-GRP
           MOVE CGBB-O-NEXT-GO7-GRP    TO CGBB-O-GO7-GRP
                                          CGBB-O-GO6-GRP
           IF TGOAUTHC-AUTH-LVL = '1'
              MOVE CGBB-O-NEXT-GO7-GRP TO EGBB0-GO7-GRP
                                          EGBB0-GO6-GRP
           ELSE
              MOVE CGBB-O-NEXT-GO7-GRP TO EGBC0-GO7-GRP
                                          EGBC0-GO6-GRP
           END-IF

           PERFORM EGO70-DEFINE

           MOVE CGBB-CMPY              TO TGBBTAUT-CMPY
           MOVE CGBB-BTCH-NUM          TO TGBBTAUT-BTCH-NUM

           IF TGOAUTHC-AUTH-LVL = '1'
              MOVE EGBB0-TRAN-SEQ-NUM  TO TGBBTAUT-TRAN-SEQ-NUM
              MOVE ZEROS               TO TGBBTAUT-DETL-SEQ-NUM
           ELSE
              MOVE TGBBDETL-TRAN-SEQ-NUM
                                       TO TGBBTAUT-TRAN-SEQ-NUM
              MOVE TGBBDETL-DETL-SEQ-NUM
                                       TO TGBBTAUT-DETL-SEQ-NUM
           END-IF

           MOVE ZEROS                  TO TGBBTAUT-RSP-SEQ-NUM

           PERFORM SQL-CURSOR-TGBBTAUT
           PERFORM SQL-FETCH-TGBBTAUT

           PERFORM UNTIL SQLCODE = WZAZSQL-NOT-FOUND
              MOVE EGO70R-NENTRIES     TO EGO70P-LOG-AFTER
              PERFORM EGO70-CREATE
              MOVE TGBBTAUT-SEL-FLAG   TO EGO70-SEL
                                          EGO70-SEL-S
              MOVE TGBBTAUT-USR        TO EGO70-USR
              MOVE 'Y'                 TO EGO70-USR-S
              MOVE TGBBTAUT-QRY-AUTH-FLAG
                                       TO EGO70-QRY-AUTH-FLAG
              MOVE TGBBTAUT-BUILT-FLAG TO EGO70-ORIG-FLAG

              MOVE TGBBTAUT-AUTH-SEQ-NUM
                                       TO EGO70-AUTH-SEQ-NUM
              IF EGO70-AUTH-SEQ-NUM NOT = ZERO
                 MOVE 'Y'              TO EGO70-AUTH-SEQ-NUM-S
              END-IF

      *---    RE-READ USER DESCRIPTIONS FOR ALL 'SYSTEM BUILT' USERS
      *---
              IF TGBBTAUT-BUILT-FLAG = 'Y'
                 MOVE TGBBTAUT-USR     TO TAFUSR-USR
                 PERFORM SQL-SELECT-TAFUSR

                 IF SQLCODE = WZAZSQL-OK
                    MOVE TAFUSR-DESCR  TO EGO70-DESCR-USR
                    MOVE 'Y'           TO EGO70-DESCR-USR-S
                 ELSE
                    MOVE 'N'           TO EGO70-DESCR-USR-S
                 END-IF
              END-IF

              PERFORM SQL-FETCH-TGBBTAUT

           END-PERFORM

           PERFORM EGO70-CLOSE

      ******************************************************************
      *SECTION:LAA-SUSPEND                                             *
      *        ON SUSPENSION OF AN ORDER RELATED INVOICE BUILD DETAIL  *
      *        LINES IF NONE HAVE BEEN BUILT                           *
      ******************************************************************
       LAA-SUSPEND SECTION.

++IF TARGET(POP=Y)
|     *--- BUILD LINES FROM THE ORDR IF ENTERED ON THE HEADER
|          IF   CZAZSTCK-DATA-VALID
|          AND (EGBB0-ORDR-REF        NOT = SPACES
|          OR   EGBB0-ADVC-NOTE       NOT = SPACES)
|              IF  CGBB-C-ORDRS-FLAG     NOT = 'Y'
|              AND CGBB-C-DETL-DISP-FLAG NOT = 'Y'
|                  PERFORM UE-ORDR-BUILD-LINES
|     *--- if any errors returned, dont build lines
|                  IF CDOZ-ERR = CDOZ-ERROR
|                  OR CDOZ-USR-LOCKED = 'Y'
|                     GO TO +++-EXIT
|                  END-IF
|                  PERFORM EGBC0-GET
|                  IF EGBC0R-NENTRIES > 0
|                     MOVE ZERO        TO EGBB0-ORDR-VAL
|                     PERFORM UI-BUILD-MAP-DETAIL
|                             VARYING EGBC0P-LOG-ENTRY
|                             FROM 1 BY 1
|                             UNTIL EGBC0P-LOG-ENTRY > EGBC0R-NENTRIES
|                     MOVE 'Y'         TO CGBB-C-ORDRS-FLAG
|                  END-IF
|              END-IF
|              GO TO +++-EXIT
|          END-IF
|
|     *--- BUILD THE DETAIL LINES FROM ORDR-REFS/ADVICE-NOTES FROM
|     *--- EGRA0
|          PERFORM EGRA0-DEFINE
|          IF  CZAZSTCK-DATA-VALID
|          AND EGRA0R-NENTRIES           NOT = ZERO
|              IF  CGBB-C-ORDRS-FLAG     NOT = 'Y'
|              AND CGBB-C-DETL-DISP-FLAG NOT = 'Y'
|                  IF EGBC0R-NENTRIES NOT > ZERO
|                     PERFORM EGBB0-CLOSE
|                     PERFORM NAA-PROC-ORDR-EWS
|                             VARYING EGRA0P-LOG-ENTRY
|                             FROM  1 BY 1
|                             UNTIL EGRA0P-LOG-ENTRY
|                                 > EGRA0R-NENTRIES
|                     PERFORM EGBC0-DEFINE
|                     IF EGBC0R-NENTRIES > 0
|                        PERFORM EGBB0-DEFINE
|                        MOVE CGBB-C-LOG-ENTRY   TO EGBB0P-LOG-ENTRY
|                        PERFORM EGBB0-GET
|                        MOVE ZERO     TO EGBB0-ORDR-VAL
|                        PERFORM UI-BUILD-MAP-DETAIL
|                                VARYING EGBC0P-LOG-ENTRY
|                                FROM  1 BY 1
|                                UNTIL EGBC0P-LOG-ENTRY
|                                    > EGBC0R-NENTRIES
|                        MOVE 'Y'      TO CGBB-C-ORDRS-FLAG
|                        PERFORM EGBB0-CLOSE
|                     END-IF
|                     PERFORM EGBC0-CLOSE
|                  END-IF
|              END-IF
|          END-IF
|          PERFORM EGRA0-CLOSE
|
++END-IF


       LOAD-USR-DATA SECTION.

      *--- ENSURE USER ANALYSIS DATA TURNED ON FOR PL COMPANY
           IF TGACNTRL-USR-ANAL = SPACES
              GO TO +++-EXIT
           END-IF

           MOVE TGBTRAN-CMPY          TO TAUADCTL-CMPY
           MOVE 'GT'                  TO TAUADCTL-TYPE
           MOVE TGACNTRL-USR-ANAL     TO TAUADCTL-FRMAT

           PERFORM SQL-SELECT-TAUADCTL

           IF SQLCODE = WZAZSQL-NOT-FOUND
              GO TO +++-EXIT
           END-IF
           MOVE WAZ0ANAL-REQUEST-DECODE
                                       TO WAZ0ANAL-REQUEST
           MOVE SPACES                 TO WAZ0ANAL-SEGMENT

           MOVE TGBTRAN-USR-DATA-TEXT (1:TGBTRAN-USR-DATA-LEN)
             TO WAZ0ANAL-SEGMENT      (1:TGBTRAN-USR-DATA-LEN)

           PERFORM SAZ0ANAL
           IF WAZ0ANAL-INVALID-CONTROL-REC
           OR WAZ0ANAL-INVALID-REQUEST
              GO TO +++-EXIT
           END-IF

           IF TAUADCTL-CHAR-LEN > ZERO
              MOVE WAZ0ANAL-CHARACTERS (1:TAUADCTL-CHAR-LEN)
                TO MGBC-HDR-USR-DATA   (1:TAUADCTL-CHAR-LEN)
              MOVE 'Y'
                TO MGBC-HDR-USR-DATA-S
           END-IF
           PERFORM VARYING TALLY FROM 1 BY 1
                     UNTIL TALLY > TAUADCTL-DATE-FLDS
              IF WAZ0ANAL-DATE (TALLY) <=
                 WZAZLITS-MIN-DATE
                MOVE ZERO
                  TO MGBC-HDR-USR-DATE   (TALLY)
                MOVE 'N'
                  TO MGBC-HDR-USR-DATE-S (TALLY)
              ELSE
                MOVE WAZ0ANAL-DATE       (TALLY)
                  TO MGBC-HDR-USR-DATE   (TALLY)
                MOVE WAZ0ANAL-DATE-S     (TALLY)
                  TO MGBC-HDR-USR-DATE-S (TALLY)
              END-IF
           END-PERFORM

           PERFORM VARYING TALLY FROM 1 BY 1
                     UNTIL TALLY > TAUADCTL-NUM-FLDS
              MOVE WAZ0ANAL-NUMERIC       (TALLY)
                TO MGBC-HDR-USR-NUMERIC   (TALLY)
              MOVE WAZ0ANAL-NUMERIC-S     (TALLY)
                TO MGBC-HDR-USR-NUMERIC-S (TALLY)
           END-PERFORM

       ENCODE-USR-DATA SECTION.

      *--- ENSURE USER ANALYSIS DATA TURNED ON FOR PL COMPANY
           IF TGACNTRL-USR-ANAL = SPACES
              GO TO +++-EXIT
           END-IF

           MOVE CGBB-CMPY              TO TAUADCTL-CMPY
           MOVE 'GT'                   TO TAUADCTL-TYPE
           MOVE TGACNTRL-USR-ANAL      TO TAUADCTL-FRMAT

           PERFORM SQL-SELECT-TAUADCTL

           IF SQLCODE = WZAZSQL-NOT-FOUND
              GO TO +++-EXIT
           END-IF

      *--- ENCODE USER DATA USING SAZ0ANAL
           MOVE WAZ0ANAL-REQUEST-CODE  TO WAZ0ANAL-REQUEST
           INITIALIZE WAZ0ANAL-MAP-FIELDS

           IF TAUADCTL-CHAR-LEN > ZERO
              MOVE MGBC-HDR-USR-DATA   (1:TAUADCTL-CHAR-LEN)
                TO WAZ0ANAL-CHARACTERS (1:TAUADCTL-CHAR-LEN)
           END-IF

           PERFORM VARYING TALLY FROM 1 BY 1
                     UNTIL TALLY > TAUADCTL-DATE-FLDS
              MOVE MGBC-HDR-USR-DATE   (TALLY)
                TO WAZ0ANAL-DATE       (TALLY)
              MOVE MGBC-HDR-USR-DATE-S (TALLY)
                TO WAZ0ANAL-DATE-S     (TALLY)
           END-PERFORM

           PERFORM VARYING TALLY FROM 1 BY 1
                     UNTIL TALLY > TAUADCTL-NUM-FLDS
              MOVE MGBC-HDR-USR-NUMERIC   (TALLY)
                TO WAZ0ANAL-NUMERIC       (TALLY)
              MOVE MGBC-HDR-USR-NUMERIC-S (TALLY)
                TO WAZ0ANAL-NUMERIC-S     (TALLY)
           END-PERFORM

           PERFORM SAZ0ANAL

           IF WAZ0ANAL-INVALID-CONTROL-REC
           OR WAZ0ANAL-INVALID-REQUEST
              GO TO +++-EXIT
           END-IF

           IF WAZ0ANAL-TOTAL-CHARACTERS > ZERO
              MOVE WAZ0ANAL-SEGMENT (1:WAZ0ANAL-TOTAL-CHARACTERS)
                TO CGBVIN-USR-DATA  (1:WAZ0ANAL-TOTAL-CHARACTERS)
           END-IF

       DECODE-USR-DATA SECTION.

      *--- ENSURE USER ANALYSIS DATA TURNED ON FOR COMPANY
           IF TGACNTRL-USR-ANAL = SPACE
              GO TO +++-EXIT
           END-IF

           IF TGACNTRL-USR-ANAL = TAUADCTL-FRMAT
              CONTINUE
           ELSE
              MOVE CGBB-CMPY           TO TAUADCTL-CMPY
              MOVE 'GT'                TO TAUADCTL-TYPE
              MOVE TGACNTRL-USR-ANAL   TO TAUADCTL-FRMAT
              PERFORM SQL-SELECT-TAUADCTL

              IF SQLCODE = WZAZSQL-NOT-FOUND
                 MOVE SPACES TO TAUADCTL-FRMAT
                 GO TO +++-EXIT
              END-IF
           END-IF

           IF TGBTRAN-USR-DATA-LEN = 0
              GO TO +++-EXIT
           END-IF

      *--- DECODE USER DATA USING SAZ0ANAL
           MOVE WAZ0ANAL-REQUEST-DECODE
                                       TO WAZ0ANAL-REQUEST
           MOVE SPACES                 TO WAZ0ANAL-SEGMENT

           MOVE CGBVIN-USR-DATA        TO WAZ0ANAL-SEGMENT

           PERFORM SAZ0ANAL

           IF WAZ0ANAL-INVALID-CONTROL-REC
           OR WAZ0ANAL-INVALID-REQUEST
              GO TO +++-EXIT
           END-IF

           IF TAUADCTL-CHAR-LEN > ZERO
              MOVE WAZ0ANAL-CHARACTERS (1:TAUADCTL-CHAR-LEN)
                TO MGBC-HDR-USR-DATA
              IF MGBC-HDR-USR-DATA NOT = SPACES
                 MOVE 'Y'              TO MGBC-HDR-USR-DATA-S
              END-IF
           END-IF

           PERFORM VARYING TALLY FROM 1 BY 1
                     UNTIL TALLY > TAUADCTL-DATE-FLDS
              MOVE WAZ0ANAL-DATE       (TALLY)
                                       TO MGBC-HDR-USR-DATE   (TALLY)
              MOVE WAZ0ANAL-DATE-S     (TALLY)
                                       TO MGBC-HDR-USR-DATE-S (TALLY)
           END-PERFORM

           PERFORM VARYING TALLY FROM 1 BY 1
                     UNTIL TALLY > TAUADCTL-NUM-FLDS
              MOVE WAZ0ANAL-NUMERIC    (TALLY)
                                       TO MGBC-HDR-USR-NUMERIC   (TALLY)
              MOVE WAZ0ANAL-NUMERIC-S  (TALLY)
                                       TO MGBC-HDR-USR-NUMERIC-S (TALLY)
           END-PERFORM

++IF TARGET(POP=Y)
|
|      NAA-PROC-ORDR-EWS SECTION.
|
|     *--- BUILD THE LINES FROM THE ORDR-REFS ENTERED ON HEADER
|
|          PERFORM EGRA0-GET
|
|          IF EGRA0-SEL NOT = 'Y'
|             GO TO +++-EXIT
|          END-IF
|
|          INITIALIZE CGRM
|
|          MOVE CGBB-NEXT-EGBD0-GRP    TO CGRM-NEXT-EGBD0-GRP
|          MOVE CGBB-NEXT-EGRB0-GRP    TO CGRM-NEXT-EGRB0-GRP
|
|     *--- LOCK ORDERS THAT ARE SELECTED VIA THEIR ADVICE NOTES
|
|          MOVE EGRA0-ORDR-REF         TO CDOZ-ORDR-REF
|          MOVE CDOZ-FGRND-LOCK        TO CDOZ-FUNC
|          MOVE CGBB-CMPY              TO CDOZ-CMPY
|          MOVE TDOORDER-DOC-ORDR      TO CDOZ-DOC-IND
|          MOVE CZAZPUBL-USR           TO CDOZ-LOCK-USR
|          MOVE CZAZSTCK-CURR-SESS     TO CDOZ-LOCK-SESS
|
|          EXEC QSP CALL ORDR_LOCK_UNLOCK
|               CDOZ
|          END-EXEC
|          IF CDOZ-USR-LOCKED = 'Y'
|             MOVE 'Y'                 TO WS-INVALID-HEADER-FLAG
|             MOVE 'E'                 TO CZAZSOFT-MSG-TYPE
|             MOVE 'GBC47'             TO CZAZSOFT-MSG
|             MOVE MGBC-ADVC-NOTE-F    TO CZAZSOFT-FIELD
|             MOVE EGRA0-ORDR-REF      TO CZAZSOFT-SUBTEXT
|             PERFORM SZAZSOFT-SET-APPL
|             PERFORM EGRA0-DELETE
|             MOVE EGRA0R-NENTRIES     TO EGRA0P-LOG-ENTRY
|             GO TO +++-EXIT
|          END-IF
|
|          IF CDOZ-ERR = 'E'
|             MOVE 'Y'                 TO WS-INVALID-HEADER-FLAG
|             MOVE 'E'                 TO CZAZSOFT-MSG-TYPE
|             MOVE 'GBC51'             TO CZAZSOFT-MSG
|             MOVE MGBC-ADVC-NOTE-F    TO CZAZSOFT-FIELD
|             MOVE EGRA0-ORDR-REF      TO CZAZSOFT-SUBTEXT
|             PERFORM SZAZSOFT-SET-APPL
              PERFORM EGRA0-DELETE
|             MOVE EGRA0R-NENTRIES     TO EGRA0P-LOG-ENTRY
|             GO TO +++-EXIT
|          END-IF
|
|          MOVE CGRM-BUILD-C-B-D       TO CGRM-FUNC
|          MOVE CGRM-DOC-ORDR          TO CGRM-DOC-IND
|          MOVE CGBB-CMPY              TO CGRM-CMPY
|          MOVE CGBB-TRAN-TYPE         TO CGRM-TRAN-TYPE
|          MOVE EGRA0-ORDR-REF         TO CGRM-ORDR-REF
|          MOVE EGRA0-ADVC-NOTE        TO CGRM-ADVC-NOTE
|                                         CGRM-RA-ADVC-NOTE
|          MOVE EGRA0-AUTO-GRN-FLAG    TO CGRM-RA-AUTO-GRN-FLAG
|          MOVE MGBC-SLFASSD-TAX-IND   TO CGRM-SLFASSD-TAX-IND
|
|          MOVE CGBB-EWS-INSTANCE      TO CGRM-EWS-INSTANCE
|          MOVE CGBB-C-ESN             TO CGRM-C-ESN
|          MOVE CGBB-RA-ESN            TO CGRM-RA-ESN
|          MOVE CGBB-RB-ESN            TO CGRM-RB-ESN
|          MOVE CGBB-C-LOG-ENTRY       TO CGRM-B-LOG-ENTRY
|
|          MOVE MGBC-CURR              TO CGRM-TRAN-CURR
|          MOVE WAZCMPYD-BASE-CURR     TO CGRM-BASE-CURR
|
|          EXEC QSP CALL BUILD_EWS_PL_TRAN
|               CGRM
|          END-EXEC
|
|          MOVE CGRM-NEXT-EGRB0-GRP    TO CGBB-NEXT-EGRB0-GRP
|          MOVE CGRM-NEXT-EGBD0-GRP    TO CGBB-NEXT-EGBD0-GRP
|
|          PERFORM EGBC0-COPY-EWS
|          PERFORM VARYING CF-SUB
|                  FROM 1 BY 1
|                  UNTIL CF-SUB > CGRM-COUNT
|            MOVE CGRM-ERR (CF-SUB)    TO CZAZSOFT-MSG-TYPE
|            MOVE CGRM-MSG  (CF-SUB)   TO CZAZSOFT-MSG
|            MOVE CGRM-MAND (CF-SUB)   TO CZAZSOFT-MANDATORY
|            IF CGRM-FLD-NO (CF-SUB) = -2
|               MOVE MGBC-QTY-INVCD-F  TO CZAZSOFT-FIELD
|            ELSE
|               MOVE CGRM-FLD-NO  (CF-SUB)
|                                      TO CZAZSOFT-FIELD
|            END-IF
|
|            MOVE CGRM-SUBTXT  (CF-SUB)
|                                      TO CZAZSOFT-SUBTEXT
|            MOVE CGRM-SUBFIELD-IDX  (CF-SUB)
|                                      TO CZAZSOFT-SUBFIELD-IDX
|
|            MOVE CGBB-C-MAP-LINE      TO CZAZSOFT-ROW
|            IF CGRM-MSG (CF-SUB) = SPACES
|     *---      PERFORM SZAZSOFT-SET-APPL
|               CONTINUE
|            ELSE
|               IF CGRM-ERR (CF-SUB) = 'E'
|                  MOVE 'Y'               TO WS-INVALID-HEADER-FLAG
|                  MOVE MGBC-ORDR-REF-F   TO CZAZSOFT-FIELD
|                  PERFORM SZAZSOFT-SET-APPL
|                  MOVE EGRA0-ORDR-REF TO CDOZ-ORDR-REF
|                  MOVE CDOZ-FGRND-UNLOCK
|                                      TO CDOZ-FUNC
|                  MOVE CGBB-CMPY      TO CDOZ-CMPY
|                  MOVE TDOORDER-DOC-ORDR
|                                      TO CDOZ-DOC-IND
|                  MOVE CZAZPUBL-USR   TO CDOZ-LOCK-USR
|                  MOVE CZAZSTCK-CURR-SESS
|                                      TO CDOZ-LOCK-SESS
|
|                  EXEC QSP CALL ORDR_LOCK_UNLOCK
|                       CDOZ
|                  END-EXEC
|
|                  GO TO +++-EXIT
|               END-IF
|               PERFORM XA-SET-WARNING
|
|               IF CGRM-MSG (CF-SUB) = 'GBX78' OR 'GBX79'
|                                   OR 'GBX80'
|                  MOVE MGBC-ITEM-PRC-F
|                                      TO CZAZSOFT-FIELD
|                  MOVE CGRM-ERR (CF-SUB)
|                                      TO CZAZSOFT-MSG-TYPE
|                  MOVE CGRM-MSG  (CF-SUB)
|                                      TO CZAZSOFT-MSG
|                  MOVE CGBB-C-MAP-LINE
|                                      TO CZAZSOFT-ROW
|                  PERFORM XA-SET-WARNING
|               END-IF
|
|            END-IF
|          END-PERFORM
|
++END-IF
       S1-INCREMENT-TOTALS  SECTION.

      *--- THIS SECTION INCREMENTS THE TRANSACTION TOTAL FIELDS
           ADD MGBC-LINE-TOT-AMT       TO EGBB0-DETL-GROSS-AMT

           ADD MGBC-LINE-TAX-AMT       TO EGBB0-DETL-TAX-AMT
           IF MGBC-TAX-ONLY-FLAG NOT = 'Y'
              ADD MGBC-LINE-TAX-AMT    TO EGBB0-DETL-GROSS-AMT
           END-IF

           ADD MGBC-VAT-NON-REC-VALUE  TO EGBB0-INV-VAT-NON-REC
           ADD MGBC-VAT-REC-VALUE      TO EGBB0-INV-VAT-REC

           IF  MGBC-PRO-RATA-IND        = '0'
           AND EGBC0-PRO-RATA-IND NOT   = '0'
               IF EGBC0-PRO-RATA-IND    = '2'
                  SUBTRACT 1           FROM EGBB0-PR-LINES
               END-IF
               ADD 1                   TO EGBB0-PR-RCVD-LINES
               MOVE MGBC-PRO-RATA-IND  TO EGBC0-PRO-RATA-IND
           END-IF

           IF MGBC-PRO-RATA-IND        = '1'
              IF EGBC0-PRO-RATA-IND    = '0'
                 SUBTRACT 1            FROM EGBB0-PR-RCVD-LINES
                 MOVE MGBC-PRO-RATA-IND
                                       TO EGBC0-PRO-RATA-IND
              ELSE
                 IF EGBC0-PRO-RATA-IND = '2'
                    SUBTRACT 1         FROM EGBB0-PR-LINES
                    MOVE MGBC-PRO-RATA-IND
                                       TO EGBC0-PRO-RATA-IND
                 END-IF
              END-IF
           END-IF

           IF  MGBC-PRO-RATA-IND       = '2'
           AND EGBC0-PRO-RATA-IND NOT  = '2'
               IF EGBC0-PRO-RATA-IND   = '0'
                  SUBTRACT 1           FROM EGBB0-PR-RCVD-LINES
               END-IF
               ADD 1                   TO EGBB0-PR-LINES
               MOVE MGBC-PRO-RATA-IND  TO EGBC0-PRO-RATA-IND
           END-IF

           IF MGBC-PRO-RATA-IND = '0'
              ADD 1                    TO EGBB0-PR-RCVD-LINES
           END-IF
           IF MGBC-PRO-RATA-IND = '2'
              ADD 1                    TO EGBB0-PR-LINES
           END-IF

           IF MGBC-SA-TYPE NOT = '0'
              ADD 1                    TO EGBB0-SA-LINES
           END-IF

           IF MGBC-WHOLD-USE-IND = '1'
              EVALUATE TGACNTRL-WHOLD-TYPE-IND
                 WHEN TGACNTRL-CIT
                    COMPUTE EGBB0-CIT-GROSS-AMT =
                            EGBB0-CIT-GROSS-AMT +
                            MGBC-LINE-TOT-AMT
                 WHEN TGACNTRL-1099
                    COMPUTE EGBB0-CIT-GROSS-AMT =
                            EGBB0-CIT-GROSS-AMT +
                            MGBC-LINE-TOT-AMT   +
                            MGBC-LINE-TAX-AMT
                 WHEN TGACNTRL-PPS
                    COMPUTE EGBB0-CIT-GROSS-AMT =
                            EGBB0-CIT-GROSS-AMT +
                            MGBC-LINE-TOT-AMT
              END-EVALUATE
           END-IF

           IF EGBC0-TAX-INCL-FLAG = 'Y'
              COMPUTE EGBB0-TAX-INCL-GROSS-AMT =
                      EGBB0-TAX-INCL-GROSS-AMT +
                      MGBC-LINE-TOT-AMT        +
                      MGBC-LINE-TAX-AMT
           END-IF

++IF TARGET(POP=Y)
|          IF MGBC-PRO-RATA-IND NOT = '2'
|          AND (TPBSUPP-AUTH-NEG-FLAG = 'Y'
|          OR   MGBC-LINE-TOT-AMT > 0)
|             IF  MGBC-DETL-ORDR-REF NOT = SPACES
|             AND MGBC-ORDR-LINE-NUM    > 0
|             AND CGBVOUT-AUTH-ORDR-RLTD = SPACE
|             OR (MGBC-DETL-ORDR-REF NOT = SPACES
|             AND MGBC-ORDR-LINE-NUM = ZERO
|             AND WS-AUTH-CHRG-FLAG = SPACE)
|                CONTINUE
|             ELSE
|                IF EGBC0-TAX-RCVBLE-FLAG = '1'
|                   COMPUTE EGBB0-AMT-TO-AUTH =
|                           EGBB0-AMT-TO-AUTH +
|                           MGBC-LINE-TOT-AMT
|                ELSE
|                   COMPUTE EGBB0-AMT-TO-AUTH =
|                           EGBB0-AMT-TO-AUTH +
|                           MGBC-LINE-TOT-AMT +
|                           MGBC-LINE-TAX-AMT +
|                           MGBC-LINE-SLFASSD-AMT
|                END-IF
|                IF EGBC0-TAX-RCVBLE-FLAG = '2'
|                   SUBTRACT MGBC-VAT-REC-VALUE
|                       FROM EGBB0-AMT-TO-AUTH
|                END-IF
|             END-IF
|          END-IF
++ELSE
|          IF MGBC-PRO-RATA-IND NOT = '2'
|          AND (TPBSUPP-AUTH-NEG-FLAG = 'Y'
|          OR   MGBC-LINE-TOT-AMT > 0)
|             IF EGBC0-TAX-RCVBLE-FLAG = '1'
|                COMPUTE EGBB0-AMT-TO-AUTH =
|                        EGBB0-AMT-TO-AUTH +
|                        MGBC-LINE-TOT-AMT
|             ELSE
|                COMPUTE EGBB0-AMT-TO-AUTH =
|                        EGBB0-AMT-TO-AUTH +
|                        MGBC-LINE-TOT-AMT +
|                        MGBC-LINE-TAX-AMT +
|                        MGBC-LINE-SLFASSD-AMT
|             END-IF
|             IF EGBC0-TAX-RCVBLE-FLAG = '2'
|                SUBTRACT MGBC-VAT-REC-VALUE
|                    FROM EGBB0-AMT-TO-AUTH
|             END-IF
|          END-IF
++END-IF

++IF TARGET(POP=Y)
|
|          IF  MGBC-DETL-ORDR-REF NOT = SPACES
|          AND MGBC-ORDR-LINE-NUM NOT = ZERO
|              COMPUTE EGBB0-ORDR-VAL = EGBB0-ORDR-VAL
|                                     + MGBC-LINE-TOT-AMT
|          END-IF
|
++END-IF

      ******************************************************************
      * VALIDATE LINE ON UPDATE IF IT CAME FROM AN ITEM KIT            *
      ******************************************************************
       PA-KIT-VALIDATE SECTION.

           move 'Y' to CZAZSTCK-NO-SOFTSCR-MSG-FLAG
           move 1   to +CIDL+-MAP-LINE
           perform V-VALIDATE-ROW
  |        move SPACE to CZAZSTCK-NO-SOFTSCR-MSG-FLAG
           IF WS-LINE-ERROR = '0'
           AND CZAZSTCK-LINE-ERROR NOT = '0'
               MOVE 'Y'                TO WS-UPDATE-ERROR
           END-IF


       S1-INCREMENT-FROM-EWS SECTION.

      *--- THIS SECTION INCREMENTS THE TRANSACTION TOTAL FIELDS
           ADD EGBC0-LINE-TOT-AMT       TO EGBB0-DETL-GROSS-AMT

           ADD EGBC0-LINE-TAX-AMT       TO EGBB0-DETL-TAX-AMT
                                           EGBB0-DETL-GROSS-AMT

           ADD EGBC0-VAT-NON-REC-VALUE  TO EGBB0-INV-VAT-NON-REC
           ADD EGBC0-VAT-REC-VALUE      TO EGBB0-INV-VAT-REC

      *--- Code added to determine amount to auth if required
      *--- based on tax code
++IF TARGET(POP=Y)
|          IF EGBC0-PRO-RATA-IND NOT = '2'
|          AND (TPBSUPP-AUTH-NEG-FLAG = 'Y'
|          OR   EGBC0-LINE-TOT-AMT > 0)
|             IF  EGBC0-ORDR-REF NOT = SPACES
|             AND EGBC0-ORDR-LINE-NUM    > 0
|             OR (EGBC0-ORDR-REF NOT = SPACES
|             AND EGBC0-ORDR-LINE-NUM = ZERO)
|                CONTINUE
|             ELSE
|                IF EGBC0-TAX-RCVBLE-FLAG = 'Y'
|                   COMPUTE EGBB0-AMT-TO-AUTH =
|                           EGBB0-AMT-TO-AUTH +
|                           EGBC0-LINE-TOT-AMT
|                ELSE
|                   COMPUTE EGBB0-AMT-TO-AUTH =
|                           EGBB0-AMT-TO-AUTH +
|                           EGBC0-LINE-TOT-AMT +
|                           EGBC0-LINE-TAX-AMT +
|                           EGBC0-LINE-SLFASSD-AMT
|                END-IF
|             END-IF
|          END-IF
++ELSE
|          IF EGBC0-PRO-RATA-IND NOT = '2'
|          AND (TPBSUPP-AUTH-NEG-FLAG = 'Y'
|          OR   EGBC0-LINE-TOT-AMT > 0)
|             IF EGBC0-TAX-RCVBLE-FLAG = 'Y'
|                COMPUTE EGBB0-AMT-TO-AUTH =
|                        EGBB0-AMT-TO-AUTH +
|                        EGBC0-LINE-TOT-AMT
|             ELSE
|                COMPUTE EGBB0-AMT-TO-AUTH =
|                        EGBB0-AMT-TO-AUTH +
|                        EGBC0-LINE-TOT-AMT +
|                        EGBC0-LINE-TAX-AMT +
|                        EGBC0-LINE-SLFASSD-AMT
|             END-IF
|          END-IF
++END-IF

           IF EGBC0-SA-TYPE NOT = '0'
              ADD 1                    TO EGBB0-SA-LINES
           END-IF

           IF EGBC0-WHOLD-USE-IND = '1'
              EVALUATE TGACNTRL-WHOLD-TYPE-IND
                 WHEN TGACNTRL-CIT
                    COMPUTE EGBB0-CIT-GROSS-AMT =
                            EGBB0-CIT-GROSS-AMT +
                            EGBC0-LINE-TOT-AMT
                 WHEN TGACNTRL-1099
                    COMPUTE EGBB0-CIT-GROSS-AMT =
                            EGBB0-CIT-GROSS-AMT +
                            EGBC0-LINE-TOT-AMT   +
                            EGBC0-LINE-TAX-AMT
                 WHEN TGACNTRL-PPS
                    COMPUTE EGBB0-CIT-GROSS-AMT =
                            EGBB0-CIT-GROSS-AMT +
                            EGBC0-LINE-TOT-AMT
              END-EVALUATE
           END-IF

           IF EGBC0-TAX-INCL-FLAG = 'Y'
              COMPUTE EGBB0-TAX-INCL-GROSS-AMT =
                      EGBB0-TAX-INCL-GROSS-AMT +
                      EGBC0-LINE-TOT-AMT        +
                      EGBC0-LINE-TAX-AMT
           END-IF


       S2-DECREMENT-TOTALS SECTION.

      *--- THIS SECTION DECREMENTS THE TRANSACTION TOTAL FIELDS
           SUBTRACT EGBC0-LINE-TOT-AMT
                                     FROM EGBB0-DETL-GROSS-AMT

           SUBTRACT EGBC0-LINE-TAX-AMT
                                     FROM EGBB0-DETL-TAX-AMT
           IF MGBC-TAX-ONLY-FLAG NOT = 'Y'
              SUBTRACT EGBC0-LINE-TAX-AMT
                                     FROM EGBB0-DETL-GROSS-AMT
           END-IF

           SUBTRACT EGBC0-VAT-NON-REC-VALUE
                                     FROM EGBB0-INV-VAT-NON-REC
           SUBTRACT EGBC0-VAT-REC-VALUE
                                     FROM EGBB0-INV-VAT-REC

           IF  MGBC-PRO-RATA-IND        = '0'
           AND EGBC0-PRO-RATA-IND NOT   = '0'
               IF EGBC0-PRO-RATA-IND    = '2'
                  SUBTRACT 1           FROM EGBB0-PR-LINES
               END-IF
               ADD 1                   TO EGBB0-PR-RCVD-LINES
               MOVE MGBC-PRO-RATA-IND  TO EGBC0-PRO-RATA-IND
           END-IF

           IF MGBC-PRO-RATA-IND        = '1'
              IF EGBC0-PRO-RATA-IND    = '0'
                 SUBTRACT 1            FROM EGBB0-PR-RCVD-LINES
                 MOVE MGBC-PRO-RATA-IND
                                       TO EGBC0-PRO-RATA-IND
              ELSE
                 IF EGBC0-PRO-RATA-IND = '2'
                    SUBTRACT 1         FROM EGBB0-PR-LINES
                    MOVE MGBC-PRO-RATA-IND
                                       TO EGBC0-PRO-RATA-IND
                 END-IF
              END-IF
           END-IF

           IF  MGBC-PRO-RATA-IND       = '2'
           AND EGBC0-PRO-RATA-IND NOT  = '2'
               IF EGBC0-PRO-RATA-IND   = '0'
                  SUBTRACT 1           FROM EGBB0-PR-RCVD-LINES
               END-IF
               ADD 1                   TO EGBB0-PR-LINES
               MOVE MGBC-PRO-RATA-IND  TO EGBC0-PRO-RATA-IND
           END-IF

           IF EGBC0-PRO-RATA-IND = '0'
              SUBTRACT 1             FROM EGBB0-PR-RCVD-LINES
           END-IF
           IF EGBC0-PRO-RATA-IND = '2'
              SUBTRACT 1             FROM EGBB0-PR-LINES
           END-IF

           IF EGBC0-SA-TYPE NOT = '0'
              SUBTRACT 1             FROM EGBB0-SA-LINES
           END-IF

           IF EGBC0-WHOLD-USE-IND = '1'
              EVALUATE TGACNTRL-WHOLD-TYPE-IND
                 WHEN TGACNTRL-CIT
                    COMPUTE EGBB0-CIT-GROSS-AMT =
                            EGBB0-CIT-GROSS-AMT -
                            EGBC0-LINE-TOT-AMT
                 WHEN TGACNTRL-1099
                    COMPUTE EGBB0-CIT-GROSS-AMT =
                            EGBB0-CIT-GROSS-AMT -
                            EGBC0-LINE-TOT-AMT  -
                            EGBC0-LINE-TAX-AMT
                 WHEN TGACNTRL-PPS
                    COMPUTE EGBB0-CIT-GROSS-AMT =
                            EGBB0-CIT-GROSS-AMT -
                            EGBC0-LINE-TOT-AMT
              END-EVALUATE
           END-IF

           IF EGBC0-TAX-INCL-FLAG = 'Y'
              COMPUTE EGBB0-TAX-INCL-GROSS-AMT =
                      EGBB0-TAX-INCL-GROSS-AMT -
                      EGBC0-LINE-TOT-AMT       -
                      EGBC0-LINE-TAX-AMT
           END-IF

++IF TARGET(POP=Y)
|          IF EGBC0-PRO-RATA-IND NOT = '2'
|          AND (TPBSUPP-AUTH-NEG-FLAG = 'Y'
|          OR EGBC0-LINE-TOT-AMT > 0)
|             IF  EGBC0-ORDR-REF     NOT = SPACES
|             AND EGBC0-ORDR-LINE-NUM    > 0
|             AND CGBVOUT-AUTH-ORDR-RLTD = SPACE
|             OR (EGBC0-ORDR-REF NOT = SPACES
|             AND EGBC0-ORDR-LINE-NUM = ZERO
|             AND WS-AUTH-CHRG-FLAG = SPACE)
|                CONTINUE
|             ELSE
|                IF EGBC0-TAX-RCVBLE-FLAG = '1'
|                   COMPUTE EGBB0-AMT-TO-AUTH =
|                           EGBB0-AMT-TO-AUTH -
|                           EGBC0-LINE-TOT-AMT
|                ELSE
|                   COMPUTE EGBB0-AMT-TO-AUTH =
|                           EGBB0-AMT-TO-AUTH -
|                           EGBC0-LINE-TOT-AMT -
|                           EGBC0-LINE-SLFASSD-AMT -
|                           EGBC0-LINE-TAX-AMT
|                END-IF
|                IF EGBC0-TAX-RCVBLE-FLAG = '2'
|                   ADD EGBC0-VAT-REC-VALUE
|                    TO EGBB0-AMT-TO-AUTH
|                END-IF
|             END-IF
|          END-IF
++ELSE
|          IF EGBC0-PRO-RATA-IND NOT = '2'
|          AND (TPBSUPP-AUTH-NEG-FLAG = 'Y'
|          OR  EGBC0-LINE-TOT-AMT > 0)
|             IF EGBC0-TAX-RCVBLE-FLAG = '1'
|                COMPUTE EGBB0-AMT-TO-AUTH =
|                        EGBB0-AMT-TO-AUTH -
|                        EGBC0-LINE-TOT-AMT
|             ELSE
|                COMPUTE EGBB0-AMT-TO-AUTH =
|                        EGBB0-AMT-TO-AUTH -
|                        EGBC0-LINE-TOT-AMT -
|                        EGBC0-LINE-SLFASSD-AMT -
|                        EGBC0-LINE-TAX-AMT
|             END-IF
|             IF EGBC0-TAX-RCVBLE-FLAG = '2'
|                ADD EGBC0-VAT-REC-VALUE
|                 TO EGBB0-AMT-TO-AUTH
|             END-IF
|          END-IF
++END-IF

++IF TARGET(POP=Y)
|
|          IF  EGBC0-ORDR-REF      NOT = SPACES
|          AND EGBC0-ORDR-LINE-NUM NOT = ZERO
|              COMPUTE EGBB0-ORDR-VAL = EGBB0-ORDR-VAL
|                                     - EGBC0-LINE-TOT-AMT
|          END-IF
|
++END-IF

       S3-INCREMENT-TOTALS-EWS  SECTION.

           IF EGBC0-SEL NOT = 'Y'
              GO TO +++-EXIT
           END-IF

      *--- THIS SECTION IS NECESSARY BECAUSE THE S1 SECTION INCREMENTS
      *--- USING MAP FIELDS. THIS IS USED ON RETURN FROM GGRM WHEN THE
      *--- MAP FIELDS HAVE NOT BEEN UPDATED
           ADD EGBC0-LINE-TOT-AMT      TO EGBB0-DETL-GROSS-AMT

           ADD EGBC0-LINE-TAX-AMT      TO EGBB0-DETL-TAX-AMT
           IF MGBC-TAX-ONLY-FLAG NOT = 'Y'
              ADD EGBC0-LINE-TAX-AMT   TO EGBB0-DETL-GROSS-AMT
           END-IF

           ADD EGBC0-VAT-NON-REC-VALUE TO EGBB0-INV-VAT-NON-REC
           ADD EGBC0-VAT-REC-VALUE     TO EGBB0-INV-VAT-REC

           IF  MGBC-PRO-RATA-IND        = '0'
           AND EGBC0-PRO-RATA-IND NOT   = '0'
               IF EGBC0-PRO-RATA-IND    = '2'
                  SUBTRACT 1           FROM EGBB0-PR-LINES
               END-IF
               ADD 1                   TO EGBB0-PR-RCVD-LINES
               MOVE MGBC-PRO-RATA-IND  TO EGBC0-PRO-RATA-IND
           END-IF

           IF MGBC-PRO-RATA-IND        = '1'
              IF EGBC0-PRO-RATA-IND    = '0'
                 SUBTRACT 1            FROM EGBB0-PR-RCVD-LINES
                 MOVE MGBC-PRO-RATA-IND
                                       TO EGBC0-PRO-RATA-IND
              ELSE
                 IF EGBC0-PRO-RATA-IND = '2'
                    SUBTRACT 1         FROM EGBB0-PR-LINES
                    MOVE MGBC-PRO-RATA-IND
                                       TO EGBC0-PRO-RATA-IND
                 END-IF
              END-IF
           END-IF

           IF  MGBC-PRO-RATA-IND       = '2'
           AND EGBC0-PRO-RATA-IND NOT  = '2'
               IF EGBC0-PRO-RATA-IND   = '0'
                  SUBTRACT 1           FROM EGBB0-PR-RCVD-LINES
               END-IF
               ADD 1                   TO EGBB0-PR-LINES
               MOVE MGBC-PRO-RATA-IND  TO EGBC0-PRO-RATA-IND
           END-IF

           IF EGBC0-PRO-RATA-IND = '0'
              ADD 1                    TO EGBB0-PR-RCVD-LINES
           END-IF
           IF EGBC0-PRO-RATA-IND = '2'
              ADD 1                    TO EGBB0-PR-LINES
           END-IF

           IF MGBC-SA-TYPE NOT = '0'
              ADD 1                    TO EGBB0-SA-LINES
           END-IF

           IF MGBC-WHOLD-USE-IND = '1'
              EVALUATE TGACNTRL-WHOLD-TYPE-IND
                 WHEN TGACNTRL-CIT
                    COMPUTE EGBB0-CIT-GROSS-AMT =
                            EGBB0-CIT-GROSS-AMT +
                            EGBC0-LINE-TOT-AMT
                 WHEN TGACNTRL-1099
                    COMPUTE EGBB0-CIT-GROSS-AMT =
                            EGBB0-CIT-GROSS-AMT +
                            EGBC0-LINE-TOT-AMT  +
                            EGBC0-LINE-TAX-AMT
                 WHEN TGACNTRL-PPS
                    COMPUTE EGBB0-CIT-GROSS-AMT =
                            EGBB0-CIT-GROSS-AMT +
                            EGBC0-LINE-TOT-AMT
              END-EVALUATE
           END-IF

           IF EGBC0-TAX-INCL-FLAG = 'Y'
              COMPUTE EGBB0-TAX-INCL-GROSS-AMT =
                      EGBB0-TAX-INCL-GROSS-AMT +
                      EGBC0-LINE-TOT-AMT       +
                      EGBC0-LINE-TAX-AMT
           END-IF

++IF TARGET(POP=Y)
|          IF MGBC-PRO-RATA-IND NOT = '2'
|          AND (TPBSUPP-AUTH-NEG-FLAG = 'Y'
|          OR   EGBC0-LINE-TOT-AMT > 0)
|             IF  EGBC0-ORDR-REF     NOT = SPACES
|             AND EGBC0-ORDR-LINE-NUM    > 0
|             AND CGBVOUT-AUTH-ORDR-RLTD = SPACE
|             OR (EGBC0-ORDR-REF NOT = SPACES
|             AND EGBC0-ORDR-LINE-NUM = ZERO
|             AND WS-AUTH-CHRG-FLAG = SPACE)
|                CONTINUE
|             ELSE
|                IF EGBC0-TAX-RCVBLE-FLAG = '1'
|                   COMPUTE EGBB0-AMT-TO-AUTH =
|                           EGBB0-AMT-TO-AUTH +
|                           EGBC0-LINE-TOT-AMT
|                ELSE
|                   COMPUTE EGBB0-AMT-TO-AUTH  =
|                           EGBB0-AMT-TO-AUTH  +
|                           EGBC0-LINE-TOT-AMT +
|                           EGBC0-LINE-TAX-AMT +
|                           EGBC0-LINE-SLFASSD-AMT
|                END-IF
|             IF EGBC0-TAX-RCVBLE-FLAG = '2'
|                SUBTRACT EGBC0-VAT-REC-VALUE
|                    FROM EGBB0-AMT-TO-AUTH
|             END-IF
|             END-IF
|          END-IF
++ELSE
|          IF MGBC-PRO-RATA-IND NOT = '2'
|          AND (TPBSUPP-AUTH-NEG-FLAG = 'Y'
|          OR   EGBC0-LINE-TOT-AMT > 0)
|             IF EGBC0-TAX-RCVBLE-FLAG = '1'
|                COMPUTE EGBB0-AMT-TO-AUTH =
|                        EGBB0-AMT-TO-AUTH +
|                        EGBC0-LINE-TOT-AMT
|             ELSE
|                COMPUTE EGBB0-AMT-TO-AUTH  =
|                        EGBB0-AMT-TO-AUTH  +
|                        EGBC0-LINE-TOT-AMT +
|                        EGBC0-LINE-TAX-AMT +
|                        EGBC0-LINE-SLFASSD-AMT
|             END-IF
|             IF EGBC0-TAX-RCVBLE-FLAG = '2'
|                SUBTRACT EGBC0-VAT-REC-VALUE
|                    FROM EGBB0-AMT-TO-AUTH
|             END-IF
|          END-IF
++END-IF

++IF TARGET(POP=Y)
|
|          IF  EGBC0-ORDR-REF      NOT = SPACES
|          AND EGBC0-ORDR-LINE-NUM NOT = ZERO
|              COMPUTE EGBB0-ORDR-VAL = EGBB0-ORDR-VAL
|                                     + EGBC0-LINE-TOT-AMT
|          END-IF
|
++END-IF

       S4-HDR-COMPARE-SRC  SECTION.

      *--- THIS SECTION COMPARES MAP HEADER FIELDS WITH CORRESPONDING
      *--- ROW OF EWS EGBB0
           MOVE 0                      TO CF-CHANGES-MADE

           IF   MGBC-SKEL-CODE-S NOT = EGBB0-SKEL-CODE-S
           OR  (MGBC-SKEL-CODE-S     = 'Y'
           AND  MGBC-SKEL-CODE   NOT = EGBB0-SKEL-CODE)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF  MGBC-SYSREF = 0 AND EGBB0-SYSREF = 0
               CONTINUE
           ELSE
               IF   MGBC-SYSREF-S NOT = EGBB0-SYSREF-S
               OR  (MGBC-SYSREF-S     = 'Y'
               AND  MGBC-SYSREF   NOT = EGBB0-SYSREF)
                    ADD 1              TO CF-CHANGES-MADE
               END-IF
           END-IF

           IF   MGBC-ENTRY-DATE-S NOT = EGBB0-ENTRY-DATE-S
           OR  (MGBC-ENTRY-DATE-S     = 'Y'
           AND  MGBC-ENTRY-DATE   NOT = EGBB0-ENTRY-DATE)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-SUPP-S NOT = EGBB0-SUPP-S
           OR  (MGBC-SUPP-S     = 'Y'
           AND  MGBC-SUPP   NOT = EGBB0-SUPP)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-TRAN-REF-S NOT = EGBB0-TRAN-REF-S
           OR  (MGBC-TRAN-REF-S     = 'Y'
           AND  MGBC-TRAN-REF   NOT = EGBB0-TRAN-REF)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-TRAN-DATE-S NOT = EGBB0-TRAN-DATE-S
           OR  (MGBC-TRAN-DATE-S     = 'Y'
           AND  MGBC-TRAN-DATE   NOT = EGBB0-TRAN-DATE)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-ELEM-S NOT = EGBB0-ELEM-S
           OR  (MGBC-ELEM-S     = 'Y'
           AND  MGBC-ELEM   NOT = EGBB0-ELEM)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-PER-S NOT = EGBB0-PER-S
           OR  (MGBC-PER-S     = 'Y'
           AND  MGBC-PER   NOT = EGBB0-PER)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-YY-S NOT = EGBB0-YY-S
           OR  (MGBC-YY-S     = 'Y'
           AND  MGBC-YY   NOT = EGBB0-YY)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-TRAN-STYPE-S NOT = EGBB0-TRAN-STYPE-S
           OR  (MGBC-TRAN-STYPE-S     = 'Y'
           AND  MGBC-TRAN-STYPE   NOT = EGBB0-TRAN-STYPE)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-PYMNT-DUE-DATE-S NOT = EGBB0-PYMNT-DUE-DATE-S
           OR  (MGBC-PYMNT-DUE-DATE-S     = 'Y'
           AND  MGBC-PYMNT-DUE-DATE   NOT = EGBB0-PYMNT-DUE-DATE)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-CURR-S NOT = EGBB0-CURR-S
           OR  (MGBC-CURR-S     = 'Y'
           AND  MGBC-CURR   NOT = EGBB0-CURR)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-RATE-TYPE-S NOT = EGBB0-RATE-TYPE-S
           OR  (MGBC-RATE-TYPE-S     = 'Y'
           AND  MGBC-RATE-TYPE   NOT = EGBB0-RATE-TYPE)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-EFF-DATE-S NOT = EGBB0-EFF-DATE-S
           OR  (MGBC-EFF-DATE-S     = 'Y'
           AND  MGBC-EFF-DATE   NOT = EGBB0-EFF-DATE)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-EXCH-RATE-S NOT = EGBB0-EXCH-RATE-S
           OR  (MGBC-EXCH-RATE-S     = 'Y'
           AND  MGBC-EXCH-RATE   NOT = EGBB0-EXCH-RATE)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-INV-GROSS-AMT-S NOT = EGBB0-INV-GROSS-AMT-S
           OR  (MGBC-INV-GROSS-AMT-S     = 'Y'
           AND  MGBC-INV-GROSS-AMT   NOT = EGBB0-INV-GROSS-AMT)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-INV-TAX-AMT-S NOT = EGBB0-INV-TAX-AMT-S
           OR  (MGBC-INV-TAX-AMT-S     = 'Y'
           AND  MGBC-INV-TAX-AMT   NOT = EGBB0-INV-TAX-AMT)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-TAKE-DSCNT-IND-S NOT = EGBB0-TAKE-DSCNT-IND-S
           OR  (MGBC-TAKE-DSCNT-IND-S     = 'Y'
           AND  MGBC-TAKE-DSCNT-IND   NOT = EGBB0-TAKE-DSCNT-IND)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-DSCNT-AMT-S NOT = EGBB0-DSCNT-AMT-S
           OR  (MGBC-DSCNT-AMT-S     = 'Y'
           AND  MGBC-DSCNT-AMT   NOT = EGBB0-DSCNT-AMT)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-DSCNT-PERC-S NOT = EGBB0-DSCNT-PERC-S
           OR  (MGBC-DSCNT-PERC-S     = 'Y'
           AND  MGBC-DSCNT-PERC   NOT = EGBB0-DSCNT-PERC)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-DSCNT-TERM-1-S NOT = EGBB0-DSCNT-TERM-1-S
           OR  (MGBC-DSCNT-TERM-1-S     = 'Y'
           AND  MGBC-DSCNT-TERM-1   NOT = EGBB0-DSCNT-TERM-1)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-DSCNT-TERM-2-S NOT = EGBB0-DSCNT-TERM-2-S
           OR  (MGBC-DSCNT-TERM-2-S     = 'Y'
           AND  MGBC-DSCNT-TERM-2   NOT = EGBB0-DSCNT-TERM-2)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-DSCNT-TERM-3-S NOT = EGBB0-DSCNT-TERM-3-S
           OR  (MGBC-DSCNT-TERM-3-S     = 'Y'
           AND  MGBC-DSCNT-TERM-3   NOT = EGBB0-DSCNT-TERM-3)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-STLMNT-S     NOT = EGBB0-STLMNT-S
           OR  (MGBC-STLMNT-S         = 'Y'
           AND  MGBC-STLMNT       NOT = EGBB0-STLMNT)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-PAYEE-NAME-S NOT = EGBB1-PAYEE-NAME-S
           OR  (MGBC-PAYEE-NAME-S     = 'Y'
           AND  MGBC-PAYEE-NAME   NOT = EGBB1-PAYEE-NAME)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-ADDR-LINE-S (1) NOT = EGBB1-ADDR-LINE-S (1)
           OR  (MGBC-ADDR-LINE-S (1)     = 'Y'
           AND  MGBC-ADDR-LINE   (1) NOT = EGBB1-ADDR-LINE (1))
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-ADDR-LINE-S (2) NOT = EGBB1-ADDR-LINE-S (2)
           OR  (MGBC-ADDR-LINE-S (2)     = 'Y'
           AND  MGBC-ADDR-LINE   (2) NOT = EGBB1-ADDR-LINE (2))
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-ADDR-LINE-S (3) NOT = EGBB1-ADDR-LINE-S (3)
           OR  (MGBC-ADDR-LINE-S (3)     = 'Y'
           AND  MGBC-ADDR-LINE   (3) NOT = EGBB1-ADDR-LINE (3))
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-ADDR-LINE-S (4) NOT = EGBB1-ADDR-LINE-S (4)
           OR  (MGBC-ADDR-LINE-S (4)     = 'Y'
           AND  MGBC-ADDR-LINE   (4) NOT = EGBB1-ADDR-LINE (4))
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-ADDR-LINE-S (5) NOT = EGBB1-ADDR-LINE-S (5)
           OR  (MGBC-ADDR-LINE-S (5)     = 'Y'
           AND  MGBC-ADDR-LINE   (5) NOT = EGBB1-ADDR-LINE (5))
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-ADDR-LINE-S (6) NOT = EGBB1-ADDR-LINE-S (6)
           OR  (MGBC-ADDR-LINE-S (6)     = 'Y'
           AND  MGBC-ADDR-LINE   (6) NOT = EGBB1-ADDR-LINE (6))
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-POSTCODE-S NOT = EGBB1-POSTCODE-S
           OR  (MGBC-POSTCODE-S     = 'Y'
           AND  MGBC-POSTCODE   NOT = EGBB1-POSTCODE)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-PHONE-S NOT = EGBB1-PHONE-S
           OR  (MGBC-PHONE-S     = 'Y'
           AND  MGBC-PHONE   NOT = EGBB1-PHONE)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-OVRD-FACTOR-S NOT = EGBB0-OVRD-FACTOR-S
           OR  (MGBC-OVRD-FACTOR-S = 'Y'
           AND  MGBC-OVRD-FACTOR NOT = EGBB0-OVRD-FACTOR)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-NCIS-EXCLD-S NOT = EGBB0-NCIS-EXCLD-S
           OR  (MGBC-NCIS-EXCLD-S = 'Y'
           AND  MGBC-NCIS-EXCLD NOT = EGBB0-NCIS-EXCLD)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-BANK-CNTRY-S NOT = EGBB1-BANK-CNTRY-S
           OR  (MGBC-BANK-CNTRY-S = 'Y'
           AND  MGBC-BANK-CNTRY NOT = EGBB1-BANK-CNTRY)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-BANK-ACCT-S NOT = EGBB1-BANK-ACCT-S
           OR  (MGBC-BANK-ACCT-S     = 'Y'
           AND  MGBC-BANK-ACCT   NOT = EGBB1-BANK-ACCT)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-SRT-CODE-S NOT = EGBB1-SRT-CODE-S
           OR  (MGBC-SRT-CODE-S     = 'Y'
           AND  MGBC-SRT-CODE   NOT = EGBB1-SRT-CODE)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-THIRD-PARTY-ACCT-S NOT = EGBB1-THIRD-PARTY-ACCT-S
           OR  (MGBC-THIRD-PARTY-ACCT-S     = 'Y'
           AND  MGBC-THIRD-PARTY-ACCT   NOT = EGBB1-THIRD-PARTY-ACCT)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-IBAN-S NOT = EGBB1-IBAN-S
           OR  (MGBC-IBAN-S     = 'Y'
           AND  MGBC-IBAN   NOT = EGBB1-IBAN)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-PAYEE-USR-DATA-S NOT = EGBB1-PAYEE-USR-DATA-S
           OR  (MGBC-PAYEE-USR-DATA-S     = 'Y'
           AND  MGBC-PAYEE-USR-DATA   NOT = EGBB1-PAYEE-USR-DATA)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-PAYEE-EMAIL-ADDR-S NOT = EGBB1-PAYEE-EMAIL-ADDR-S
           OR  (MGBC-PAYEE-EMAIL-ADDR-S     = 'Y'
           AND  MGBC-PAYEE-EMAIL-ADDR   NOT = EGBB1-PAYEE-EMAIL-ADDR)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-PAYEE-FAX-S NOT = EGBB1-PAYEE-FAX-S
           OR  (MGBC-PAYEE-FAX-S     = 'Y'
           AND  MGBC-PAYEE-FAX   NOT = EGBB1-PAYEE-FAX)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-PAYEE-TRANS-MECH-S NOT = EGBB1-PAYEE-TRANS-MECH-S
           OR  (MGBC-PAYEE-TRANS-MECH-S     = 'Y'
           AND  MGBC-PAYEE-TRANS-MECH   NOT = EGBB1-PAYEE-TRANS-MECH)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF MGBC-TAX-REG-IND-S NOT = EGBB1-TAX-REG-IND-S
           OR (MGBC-TAX-REG-IND-S = 'Y'
           AND MGBC-TAX-REG-IND NOT = EGBB1-TAX-REG-IND)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF MGBC-TAX-REG-NUM-S NOT = EGBB1-TAX-REG-NUM-S
           OR (MGBC-TAX-REG-NUM-S = 'Y'
           AND MGBC-TAX-REG-NUM NOT = EGBB1-TAX-REG-NUM)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-RECUR-INTRVL-S NOT = EGBB0-RECUR-INTRVL-S
           OR  (MGBC-RECUR-INTRVL-S     = 'Y'
           AND  MGBC-RECUR-INTRVL   NOT = EGBB0-RECUR-INTRVL)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-RECUR-OCCUR-S NOT = EGBB0-RECUR-OCCUR-S
           OR  (MGBC-RECUR-OCCUR-S     = 'Y'
           AND  MGBC-RECUR-OCCUR   NOT = EGBB0-RECUR-OCCUR)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-PRPYMNT-OCCUR-S NOT = EGBB0-PRPYMNT-OCCUR-S
           OR  (MGBC-PRPYMNT-OCCUR-S     = 'Y'
           AND  MGBC-PRPYMNT-OCCUR   NOT = EGBB0-PRPYMNT-OCCUR)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-PRPYMNT-STRT-PER-S NOT = EGBB0-PRPYMNT-STRT-PER-S
           OR  (MGBC-PRPYMNT-STRT-PER-S     = 'Y'
           AND  MGBC-PRPYMNT-STRT-PER   NOT = EGBB0-PRPYMNT-STRT-PER)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-PRPYMNT-STRT-YY-S NOT = EGBB0-PRPYMNT-STRT-YY-S
           OR  (MGBC-PRPYMNT-STRT-YY-S     = 'Y'
           AND  MGBC-PRPYMNT-STRT-YY   NOT = EGBB0-PRPYMNT-STRT-YY)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-PRE-STTLD-BANK-S NOT = EGBB0-PRE-STTLD-BANK-S
           OR  (MGBC-PRE-STTLD-BANK-S     = 'Y'
           AND  MGBC-PRE-STTLD-BANK   NOT = EGBB0-PRE-STTLD-BANK)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-PRE-STTLD-REF-S NOT = EGBB0-PRE-STTLD-REF-S
           OR  (MGBC-PRE-STTLD-REF-S     = 'Y'
           AND  MGBC-PRE-STTLD-REF   NOT = EGBB0-PRE-STTLD-REF)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-TRAN-TAX-CODE-S NOT = EGBB0-TAX-CODE-S
           OR  (MGBC-TRAN-TAX-CODE-S     = 'Y'
           AND  MGBC-TRAN-TAX-CODE   NOT = EGBB0-TAX-CODE)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-SNGL-CHQ-FLAG-S NOT = EGBB0-SNGL-CHQ-FLAG-S
           OR  (MGBC-SNGL-CHQ-FLAG-S     = 'Y'
           AND  MGBC-SNGL-CHQ-FLAG   NOT = EGBB0-SNGL-CHQ-FLAG)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-TRAN-TAX-TYPE-S NOT = EGBB0-TAX-TYPE-S
           OR  (MGBC-TRAN-TAX-TYPE-S     = 'Y'
           AND  MGBC-TRAN-TAX-TYPE   NOT = EGBB0-TAX-TYPE)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-TRAN-LOCTN-S NOT = EGBB0-LOCTN-S
           OR  (MGBC-TRAN-LOCTN-S     = 'Y'
           AND  MGBC-TRAN-LOCTN   NOT = EGBB0-LOCTN)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-TRAN-HAND-S NOT = EGBB0-HAND-S
           OR  (MGBC-TRAN-HAND-S     = 'Y'
           AND  MGBC-TRAN-HAND   NOT = EGBB0-HAND)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-TRAN-TAX-DATE-S NOT = EGBB0-TAX-DATE-S
           OR  (MGBC-TRAN-TAX-DATE-S     = 'Y'
           AND  MGBC-TRAN-TAX-DATE   NOT = EGBB0-TAX-DATE)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-SLFASSD-TAX-IND-S NOT = EGBB0-SLFASSD-TAX-IND-S
           OR  (MGBC-SLFASSD-TAX-IND-S     = 'Y'
           AND  MGBC-SLFASSD-TAX-IND   NOT = EGBB0-SLFASSD-TAX-IND)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-TAX-ONLY-FLAG-S NOT = EGBB0-TAX-ONLY-FLAG-S
           OR  (MGBC-TAX-ONLY-FLAG-S     = 'Y'
           AND  MGBC-TAX-ONLY-FLAG   NOT = EGBB0-TAX-ONLY-FLAG)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-HDR-GL-CMPY-S NOT = EGBB0-GL-CMPY-S
           OR  (MGBC-HDR-GL-CMPY-S     = 'Y'
           AND  MGBC-HDR-GL-CMPY   NOT = EGBB0-GL-CMPY)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-HDR-GL-ACCT-S NOT = EGBB0-GL-ACCT-S
           OR  (MGBC-HDR-GL-ACCT-S     = 'Y'
           AND  MGBC-HDR-GL-ACCT   NOT = EGBB0-GL-ACCT)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-HDR-USR-DATA-S NOT = EGBB0-USR-DATA-S
           OR  (MGBC-HDR-USR-DATA-S     = 'Y'
           AND  MGBC-HDR-USR-DATA   NOT = EGBB0-USR-DATA)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-PYMNT-ADDR-S NOT = EGBB0-PYMNT-ADDR-S
           OR  (MGBC-PYMNT-ADDR-S     = 'Y'
           AND  MGBC-PYMNT-ADDR   NOT = EGBB0-PYMNT-ADDR)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

++IF TARGET(POP=Y)
|
|          IF   MGBC-ORDR-REF-S     NOT = EGBB0-ORDR-REF-S
|          OR  (MGBC-ORDR-REF-S         = 'Y'
|          AND  MGBC-ORDR-REF       NOT = EGBB0-ORDR-REF)
|               ADD 1                  TO CF-CHANGES-MADE
|          END-IF
|
|          IF   MGBC-ADVC-NOTE-S    NOT = EGBB0-ADVC-NOTE-S
|          OR  (MGBC-ADVC-NOTE-S        = 'Y'
|          AND  MGBC-ADVC-NOTE      NOT = EGBB0-ADVC-NOTE)
|               ADD 1                  TO CF-CHANGES-MADE
|          END-IF
|
|          IF   MGBC-SEL-ALL-S      NOT = EGBB0-SEL-ALL-S
|          OR  (MGBC-SEL-ALL-S          = 'Y'
|          AND  MGBC-SEL-ALL        NOT = EGBB0-SEL-ALL)
|               ADD 1                  TO CF-CHANGES-MADE
|          END-IF
|
|          IF   MGBC-SEL-AUTO-S     NOT = EGBB0-SEL-AUTO-S
|          OR  (MGBC-SEL-AUTO-S         = 'Y'
|          AND  MGBC-SEL-AUTO       NOT = EGBB0-SEL-AUTO)
|               ADD 1                  TO CF-CHANGES-MADE
|          END-IF
|
++END-IF

           IF   MGBC-CRN-INV-REF-S NOT = EGBB0-CRN-INV-REF-S
           OR  (MGBC-CRN-INV-REF-S     = 'Y'
           AND  MGBC-CRN-INV-REF   NOT = EGBB0-CRN-INV-REF)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           IF   MGBC-CRN-INV-SYSREF-S NOT = EGBB0-CRN-INV-SYSREF-S
           OR  (MGBC-CRN-INV-SYSREF-S     = 'Y'
           AND  MGBC-CRN-INV-SYSREF   NOT = EGBB0-CRN-INV-SYSREF)
                ADD 1                  TO CF-CHANGES-MADE
           END-IF

           PERFORM VARYING CF-SUB
              FROM 1 BY 1
             UNTIL CF-SUB > R-EGBB0-USR-DATE
              IF   MGBC-HDR-USR-DATE-S (CF-SUB) NOT =
                   EGBB0-USR-DATE-S (CF-SUB)
              OR  (MGBC-HDR-USR-DATE-S (CF-SUB) = 'Y'
              AND  MGBC-HDR-USR-DATE (CF-SUB)   NOT =
                   EGBB0-USR-DATE (CF-SUB))
                   ADD 1                  TO CF-CHANGES-MADE
              END-IF
           END-PERFORM

           PERFORM VARYING CF-SUB
              FROM 1 BY 1
             UNTIL CF-SUB > R-EGBB0-USR-NUMERIC
              IF   MGBC-HDR-USR-NUMERIC-S (CF-SUB) NOT =
                   EGBB0-USR-NUMERIC-S (CF-SUB)
              OR  (MGBC-HDR-USR-NUMERIC-S (CF-SUB) = 'Y'
              AND  MGBC-HDR-USR-NUMERIC (CF-SUB)   NOT =
                   EGBB0-USR-NUMERIC (CF-SUB))
                   ADD 1                  TO CF-CHANGES-MADE
              END-IF
           END-PERFORM

       S5-MOVE-HDR-TO-SRC  SECTION.

      *--- THIS SECTION UPDATES EGBB0 WITH MAP HEADER AND DETAIL INFO,
      *--- WHICH IS SOURCED FROM TWO EWS (EGBB0 & EGBB1), WHICH IS IN
      *--- SOME CASES DUPLICATED, AS A RESULT ++POUR IS NOT USED SINCE
      *--- THE WRONG INFORMATION CAN BE OBTAINED

           MOVE MGBC-SKEL-CODE         TO EGBB0-SKEL-CODE
           MOVE MGBC-SKEL-CODE-S       TO EGBB0-SKEL-CODE-S
           MOVE MGBC-TRAN-SEQ-NUM      TO EGBB0-TRAN-SEQ-NUM
           MOVE MGBC-TRAN-SEQ-NUM-S    TO EGBB0-TRAN-SEQ-NUM-S
           MOVE MGBC-ENTRY-DATE        TO EGBB0-ENTRY-DATE
           MOVE MGBC-ENTRY-DATE-S      TO EGBB0-ENTRY-DATE-S
           IF CGBB-LOG-FLAG = SPACES
           AND MGBC-SYSREF = 0
           AND EGBB0-SYSREF = 0
              MOVE MGBC-SYSREF         TO EGBB0-SYSREF
              MOVE MGBC-SYSREF-S       TO EGBB0-SYSREF-S
           END-IF
           MOVE MGBC-TRAN-REF          TO EGBB0-TRAN-REF
           MOVE MGBC-TRAN-REF-S        TO EGBB0-TRAN-REF-S
           MOVE MGBC-TRAN-DATE         TO EGBB0-TRAN-DATE
           MOVE MGBC-TRAN-DATE-S       TO EGBB0-TRAN-DATE-S
           MOVE MGBC-ELEM              TO EGBB0-ELEM
           MOVE MGBC-ELEM-S            TO EGBB0-ELEM-S
           MOVE MGBC-PER               TO EGBB0-PER
           MOVE MGBC-PER-S             TO EGBB0-PER-S
           MOVE MGBC-YY                TO EGBB0-YY
           MOVE MGBC-YY-S              TO EGBB0-YY-S
           MOVE MGBC-TRAN-TYPE         TO EGBB0-TRAN-TYPE
           MOVE MGBC-TRAN-TYPE-S       TO EGBB0-TRAN-TYPE-S
           MOVE MGBC-TRAN-STYPE        TO EGBB0-TRAN-STYPE
           MOVE MGBC-TRAN-STYPE-S      TO EGBB0-TRAN-STYPE-S
           MOVE MGBC-PYMNT-DUE-DATE    TO EGBB0-PYMNT-DUE-DATE
           MOVE MGBC-PYMNT-DUE-DATE-S  TO EGBB0-PYMNT-DUE-DATE-S
           MOVE MGBC-CURR              TO EGBB0-CURR
           MOVE MGBC-CURR-S            TO EGBB0-CURR-S
           MOVE MGBC-RATE-TYPE         TO EGBB0-RATE-TYPE
           MOVE MGBC-RATE-TYPE-S       TO EGBB0-RATE-TYPE-S
           MOVE MGBC-EFF-DATE          TO EGBB0-EFF-DATE
           MOVE MGBC-EFF-DATE-S        TO EGBB0-EFF-DATE-S
           MOVE MGBC-EXCH-RATE         TO EGBB0-EXCH-RATE
           MOVE MGBC-EXCH-RATE-S       TO EGBB0-EXCH-RATE-S
           MOVE MGBC-INV-GROSS-AMT     TO EGBB0-INV-GROSS-AMT
           MOVE MGBC-INV-GROSS-AMT-S   TO EGBB0-INV-GROSS-AMT-S
           MOVE MGBC-INV-TAX-AMT       TO EGBB0-INV-TAX-AMT
           MOVE MGBC-INV-TAX-AMT-S     TO EGBB0-INV-TAX-AMT-S

           MOVE MGBC-SNGL-CHQ-FLAG     TO EGBB0-SNGL-CHQ-FLAG
           MOVE MGBC-SNGL-CHQ-FLAG-S   TO EGBB0-SNGL-CHQ-FLAG-S
           MOVE MGBC-TAKE-DSCNT-IND    TO EGBB0-TAKE-DSCNT-IND
           MOVE MGBC-TAKE-DSCNT-IND-S  TO EGBB0-TAKE-DSCNT-IND-S
           MOVE MGBC-DSCNT-AMT         TO EGBB0-DSCNT-AMT
           MOVE MGBC-DSCNT-AMT-S       TO EGBB0-DSCNT-AMT-S
           MOVE MGBC-DSCNT-PERC        TO EGBB0-DSCNT-PERC
           MOVE MGBC-DSCNT-PERC-S      TO EGBB0-DSCNT-PERC-S
           MOVE MGBC-DSCNT-TERM-1      TO EGBB0-DSCNT-TERM-1
           MOVE MGBC-DSCNT-TERM-1-S    TO EGBB0-DSCNT-TERM-1-S
           MOVE MGBC-DSCNT-TERM-2      TO EGBB0-DSCNT-TERM-2
           MOVE MGBC-DSCNT-TERM-2-S    TO EGBB0-DSCNT-TERM-2-S
           MOVE MGBC-DSCNT-TERM-3      TO EGBB0-DSCNT-TERM-3
           MOVE MGBC-DSCNT-TERM-3-S    TO EGBB0-DSCNT-TERM-3-S
           MOVE MGBC-DSCNT-DATE-1      TO EGBB0-DSCNT-DATE-1
           MOVE MGBC-DSCNT-DATE-1-S    TO EGBB0-DSCNT-DATE-1-S
           MOVE MGBC-DSCNT-DATE-2      TO EGBB0-DSCNT-DATE-2
           MOVE MGBC-DSCNT-DATE-2-S    TO EGBB0-DSCNT-DATE-2-S
           MOVE MGBC-DSCNT-DATE-3      TO EGBB0-DSCNT-DATE-3
           MOVE MGBC-DSCNT-DATE-3-S    TO EGBB0-DSCNT-DATE-3-S
           IF EGBB0-STLMNT NOT = MGBC-STLMNT
              MOVE EGBB0-STLMNT        TO EGBB0-STLMNT-OLD
           END-IF
           MOVE MGBC-STLMNT            TO EGBB0-STLMNT
           MOVE MGBC-STLMNT-S          TO EGBB0-STLMNT-S
           MOVE MGBC-DETL-GROSS-AMT-TOT
                                       TO EGBB0-DETL-GROSS-AMT
           MOVE MGBC-DETL-GROSS-AMT-TOT-S
                                       TO EGBB0-DETL-GROSS-AMT-S
           MOVE MGBC-DETL-TAX-AMT-TOT  TO EGBB0-DETL-TAX-AMT
           MOVE MGBC-DETL-TAX-AMT-TOT-S
                                       TO EGBB0-DETL-TAX-AMT-S
           MOVE MGBC-INV-VAT-NON-REC   TO EGBB0-INV-VAT-NON-REC
           MOVE MGBC-INV-VAT-NON-REC-S TO EGBB0-INV-VAT-NON-REC-S
           MOVE MGBC-INV-VAT-REC       TO EGBB0-INV-VAT-REC
           MOVE MGBC-INV-VAT-REC-S     TO EGBB0-INV-VAT-REC-S
           MOVE MGBC-RECUR-INTRVL      TO EGBB0-RECUR-INTRVL
           MOVE MGBC-RECUR-INTRVL-S    TO EGBB0-RECUR-INTRVL-S
           MOVE MGBC-RECUR-OCCUR       TO EGBB0-RECUR-OCCUR
           MOVE MGBC-RECUR-OCCUR-S     TO EGBB0-RECUR-OCCUR-S
           MOVE MGBC-PRPYMNT-OCCUR     TO EGBB0-PRPYMNT-OCCUR
           MOVE MGBC-PRPYMNT-OCCUR-S   TO EGBB0-PRPYMNT-OCCUR-S
           MOVE MGBC-PRPYMNT-STRT-PER  TO EGBB0-PRPYMNT-STRT-PER
           MOVE MGBC-PRPYMNT-STRT-PER-S
                                       TO EGBB0-PRPYMNT-STRT-PER-S
           MOVE MGBC-PRPYMNT-STRT-YY   TO EGBB0-PRPYMNT-STRT-YY
           MOVE MGBC-PRPYMNT-STRT-YY-S TO EGBB0-PRPYMNT-STRT-YY-S
           MOVE MGBC-PRE-STTLD-BANK    TO EGBB0-PRE-STTLD-BANK
           MOVE MGBC-PRE-STTLD-BANK-S  TO EGBB0-PRE-STTLD-BANK-S
           MOVE MGBC-PRE-STTLD-REF     TO EGBB0-PRE-STTLD-REF
           MOVE MGBC-PRE-STTLD-REF-S   TO EGBB0-PRE-STTLD-REF-S
           MOVE MGBC-TRAN-TAX-CODE     TO EGBB0-TAX-CODE
           MOVE MGBC-TRAN-TAX-CODE-S   TO EGBB0-TAX-CODE-S
           MOVE MGBC-TRAN-TAX-TYPE     TO EGBB0-TAX-TYPE
           MOVE MGBC-TRAN-TAX-TYPE-S   TO EGBB0-TAX-TYPE-S
           MOVE MGBC-TRAN-LOCTN        TO EGBB0-LOCTN
           MOVE MGBC-TRAN-LOCTN-S      TO EGBB0-LOCTN-S
           MOVE MGBC-TRAN-HAND         TO EGBB0-HAND
           MOVE MGBC-TRAN-HAND-S       TO EGBB0-HAND-S
           MOVE MGBC-TRAN-TAX-DATE     TO EGBB0-TAX-DATE
           MOVE MGBC-TRAN-TAX-DATE-S   TO EGBB0-TAX-DATE-S
           MOVE MGBC-SLFASSD-TAX-IND   TO EGBB0-SLFASSD-TAX-IND
           MOVE MGBC-SLFASSD-TAX-IND-S TO EGBB0-SLFASSD-TAX-IND-S
           MOVE MGBC-TAX-ONLY-FLAG     TO EGBB0-TAX-ONLY-FLAG
           MOVE MGBC-TAX-ONLY-FLAG-S   TO EGBB0-TAX-ONLY-FLAG-S
           MOVE MGBC-AUTH-CNTRL        TO EGBB0-AUTH-CNTRL
           MOVE MGBC-AUTH-CNTRL-S      TO EGBB0-AUTH-CNTRL-S
           MOVE MGBC-AUTH-GRP          TO EGBB0-AUTH-GRP
           MOVE MGBC-AUTH-GRP-S        TO EGBB0-AUTH-GRP-S
           MOVE MGBC-OVRD-FACTOR       TO EGBB0-OVRD-FACTOR
           MOVE MGBC-OVRD-FACTOR-S     TO EGBB0-OVRD-FACTOR-S
           MOVE MGBC-NCIS-EXCLD        TO EGBB0-NCIS-EXCLD
           MOVE MGBC-NCIS-EXCLD-S      TO EGBB0-NCIS-EXCLD-S
           MOVE MGBC-HDR-GL-CMPY       TO EGBB0-GL-CMPY
           MOVE MGBC-HDR-GL-CMPY-S     TO EGBB0-GL-CMPY-S
           MOVE MGBC-HDR-GL-ACCT       TO EGBB0-GL-ACCT
           MOVE MGBC-HDR-GL-ACCT-S     TO EGBB0-GL-ACCT-S
           MOVE MGBC-HDR-USR-DATA      TO EGBB0-USR-DATA

           MOVE MGBC-HDR-USR-DATA-S    TO EGBB0-USR-DATA-S
           MOVE MGBC-HDR-USR-DATE-G    TO EGBB0-USR-DATE-G
           MOVE MGBC-HDR-USR-NUMERIC-G TO EGBB0-USR-NUMERIC-G
           MOVE MGBC-PYMNT-ADDR        TO EGBB0-PYMNT-ADDR
           MOVE MGBC-PYMNT-ADDR-S      TO EGBB0-PYMNT-ADDR-S
           MOVE TPBSUPP-ACCT-TYPE      TO EGBB0-ACCT-TYPE
           MOVE 'Y'                    TO EGBB0-ACCT-TYPE-S
           MOVE MGBC-CRN-INV-SYSREF    TO EGBB0-CRN-INV-SYSREF
           MOVE MGBC-CRN-INV-SYSREF-S  TO EGBB0-CRN-INV-SYSREF-S
           MOVE MGBC-CRN-INV-REF       TO EGBB0-CRN-INV-REF
           MOVE MGBC-CRN-INV-REF-S     TO EGBB0-CRN-INV-REF-S
           MOVE MGBC-DBN-MEMO-FLAG     TO EGBB0-DBN-MEMO-FLAG
           MOVE MGBC-DBN-MEMO-FLAG-S   TO EGBB0-DBN-MEMO-FLAG-S


++IF TARGET(POP=Y)
|          MOVE MGBC-ORDR-REF          TO EGBB0-ORDR-REF
|          MOVE MGBC-ORDR-REF-S        TO EGBB0-ORDR-REF-S
|          MOVE MGBC-ADVC-NOTE         TO EGBB0-ADVC-NOTE
|          MOVE MGBC-ADVC-NOTE-S       TO EGBB0-ADVC-NOTE-S
|          MOVE MGBC-SEL-ALL           TO EGBB0-SEL-ALL
|          MOVE MGBC-SEL-ALL-S         TO EGBB0-SEL-ALL-S
|          MOVE MGBC-SEL-AUTO          TO EGBB0-SEL-AUTO
|          MOVE MGBC-SEL-AUTO-S        TO EGBB0-SEL-AUTO-S
++END-IF

           IF   EGBB0-SUND-LOG-ENTRY = ZERO
           AND (MGBC-PAYEE-NAME-S       = 'Y'
           OR   MGBC-POSTCODE-S         = 'Y'
           OR   MGBC-PHONE-S            = 'Y'
           OR   MGBC-ADDR-LINE-S (1)    = 'Y'
           OR   MGBC-ADDR-LINE-S (2)    = 'Y'
           OR   MGBC-ADDR-LINE-S (3)    = 'Y'
           OR   MGBC-ADDR-LINE-S (4)    = 'Y'
           OR   MGBC-ADDR-LINE-S (5)    = 'Y'
           OR   MGBC-ADDR-LINE-S (6)    = 'Y'
           OR   MGBC-BANK-CNTRY-S       = 'Y'
           OR   MGBC-BANK-ACCT-S        = 'Y'
           OR   MGBC-SRT-CODE-S         = 'Y'
           OR   MGBC-THIRD-PARTY-ACCT-S = 'Y'
           OR   MGBC-IBAN-S             = 'Y'
           OR   MGBC-PAYEE-USR-DATA-S   = 'Y')
                MOVE EGBB1R-NENTRIES   TO EGBB1P-LOG-AFTER
                PERFORM EGBB1-CREATE
                MOVE EGBB1R-LOG-ENTRY  TO EGBB0-SUND-LOG-ENTRY
           END-IF

           MOVE MGBC-PAYEE-NAME        TO EGBB1-PAYEE-NAME
           MOVE MGBC-PAYEE-NAME-S      TO EGBB1-PAYEE-NAME-S
           MOVE MGBC-POSTCODE          TO EGBB1-POSTCODE
           MOVE MGBC-POSTCODE-S        TO EGBB1-POSTCODE-S
           MOVE MGBC-PHONE             TO EGBB1-PHONE
           MOVE MGBC-PHONE-S           TO EGBB1-PHONE-S
           MOVE MGBC-BANK-CNTRY        TO EGBB1-BANK-CNTRY
           MOVE MGBC-BANK-CNTRY-S      TO EGBB1-BANK-CNTRY-S
           MOVE MGBC-BANK-ACCT         TO EGBB1-BANK-ACCT
           MOVE MGBC-BANK-ACCT-S       TO EGBB1-BANK-ACCT-S
           MOVE MGBC-SRT-CODE          TO EGBB1-SRT-CODE
           MOVE MGBC-SRT-CODE-S        TO EGBB1-SRT-CODE-S
           MOVE MGBC-THIRD-PARTY-ACCT  TO EGBB1-THIRD-PARTY-ACCT
           MOVE MGBC-THIRD-PARTY-ACCT-S TO EGBB1-THIRD-PARTY-ACCT-S
           MOVE MGBC-IBAN              TO EGBB1-IBAN
           MOVE MGBC-IBAN-S            TO EGBB1-IBAN-S
           MOVE MGBC-PAYEE-USR-DATA    TO EGBB1-PAYEE-USR-DATA
           MOVE MGBC-PAYEE-USR-DATA-S  TO EGBB1-PAYEE-USR-DATA-S
           MOVE MGBC-ADDR-LINE-G       TO EGBB1-ADDR-LINE-G
           MOVE MGBC-PAYEE-EMAIL-ADDR  TO EGBB1-PAYEE-EMAIL-ADDR
           MOVE MGBC-PAYEE-EMAIL-ADDR-S TO EGBB1-PAYEE-EMAIL-ADDR-S
           MOVE MGBC-PAYEE-FAX         TO EGBB1-PAYEE-FAX
           MOVE MGBC-PAYEE-FAX-S       TO EGBB1-PAYEE-FAX-S
           MOVE MGBC-PAYEE-TRANS-MECH  TO EGBB1-PAYEE-TRANS-MECH
           MOVE MGBC-PAYEE-TRANS-MECH-S TO EGBB1-PAYEE-TRANS-MECH-S
           MOVE MGBC-TAX-REG-IND       TO EGBB1-TAX-REG-IND
           MOVE MGBC-TAX-REG-IND-S     TO EGBB1-TAX-REG-IND-S
           MOVE MGBC-TAX-REG-NUM       TO EGBB1-TAX-REG-NUM
           MOVE MGBC-TAX-REG-NUM-S     TO EGBB1-TAX-REG-NUM-S

       S6-RECALC-EGBD0-2 SECTION.
           PERFORM EGBD0-DEFINE
           MOVE WS-TOT-AMT             TO WS-D-LINE-VAL-REMAIN
                                          WS-D-LINE-VAL
           MOVE MGBC-QTY-INVCD         TO WS-D-LINE-QTY-REMAIN
                                          WS-D-LINE-QTY
           MOVE +100                   TO WS-D-LINE-PERC-REMAIN
                                          WS-D-LINE-PERC
           MOVE ZERO                   TO WS-D-TOT-VAL
                                          WS-D-TOT-PERC
                                          WS-D-TOT-QTY
           COMPUTE WS-DIV = WS-D-LINE-VAL-REMAIN
                          / WS-D-LINE-PERC-REMAIN
           PERFORM S7-RECALC-EWS-VALUES-2
              VARYING EGBD0P-LOG-ENTRY
                      FROM 1 BY 1
              UNTIL   EGBD0P-LOG-ENTRY > EGBD0R-NENTRIES
           MOVE WS-D-LINE-VAL-REMAIN   TO CGBB-D-LINE-VAL-REMAIN
           MOVE WS-D-LINE-VAL          TO CGBB-D-LINE-VAL
           MOVE WS-D-LINE-QTY-REMAIN   TO CGBB-D-LINE-QTY-REMAIN
           MOVE WS-D-LINE-QTY          TO CGBB-D-LINE-QTY
           MOVE WS-D-LINE-PERC-REMAIN
                                       TO CGBB-D-LINE-PERC-REMAIN
           MOVE WS-D-LINE-PERC         TO CGBB-D-LINE-PERC
           MOVE WS-D-TOT-VAL           TO CGBB-D-TOT-VAL
           MOVE WS-D-TOT-PERC          TO CGBB-D-TOT-PERC
           MOVE WS-D-TOT-QTY           TO CGBB-D-TOT-QTY
           MOVE WS-D-TOT-VAL           TO EGBC0-SA-VALUE
           MOVE WS-D-TOT-QTY           TO EGBC0-SA-QTY
           PERFORM EGBD0-CLOSE

       S7-RECALC-EWS-VALUES-2 SECTION.

           PERFORM EGBD0-GET
           IF WS-D-LINE-PERC-REMAIN NOT = 0
           AND ((WS-D-LINE-PERC-REMAIN > 0
           AND   WS-D-LINE-PERC-REMAIN >= EGBD0-LINE-PERC)
           OR   (WS-D-LINE-PERC-REMAIN < 0
           AND   WS-D-LINE-PERC-REMAIN <= EGBD0-LINE-PERC))
              COMPUTE WS-MAX-DECIMAL3   = EGBD0-LINE-PERC
                                        * WS-DIV
              IF WS-MAX-DECIMAL3 > ZERO
                 COMPUTE WS-MAX-DECIMAL3 = WS-MAX-DECIMAL3 + 0.005
              END-IF
              IF WS-MAX-DECIMAL3 < ZERO
                 COMPUTE WS-MAX-DECIMAL3 = WS-MAX-DECIMAL3 - 0.005
              END-IF
              MOVE WS-MAX-DECIMAL3     TO EGBD0-LINE-VAL

              IF EGBD0-LINE-VAL > WS-D-LINE-VAL-REMAIN
                 MOVE WS-D-LINE-VAL-REMAIN
                                       TO EGBD0-LINE-VAL
              END-IF

              IF WS-D-LINE-QTY-REMAIN > EGBD0-LINE-QTY
                 CONTINUE
              ELSE
                 MOVE WS-D-LINE-QTY-REMAIN
                                       TO EGBD0-LINE-QTY
              END-IF
           ELSE
              IF WS-D-LINE-PERC NOT = 0
                 COMPUTE WS-MAX-DECIMAL3   = EGBD0-LINE-PERC
                                           * WS-D-LINE-VAL
                                           / WS-D-LINE-PERC
                 IF WS-MAX-DECIMAL3 > ZERO
                    COMPUTE WS-MAX-DECIMAL3 = WS-MAX-DECIMAL3 + 0.005
                 END-IF
                 IF WS-MAX-DECIMAL3 < ZERO
                    COMPUTE WS-MAX-DECIMAL3 = WS-MAX-DECIMAL3 - 0.005
                 END-IF
                 MOVE WS-MAX-DECIMAL3  TO EGBD0-LINE-VAL
                 IF WS-D-LINE-QTY > EGBD0-LINE-QTY
                    CONTINUE
                 ELSE
                    MOVE WS-D-LINE-QTY
                                       TO EGBD0-LINE-QTY
                 END-IF
              END-IF
           END-IF
           COMPUTE WS-D-LINE-PERC-REMAIN =
                   WS-D-LINE-PERC-REMAIN - EGBD0-LINE-PERC

           COMPUTE WS-D-LINE-VAL-REMAIN =
                   WS-D-LINE-VAL-REMAIN - EGBD0-LINE-VAL
           COMPUTE WS-D-LINE-QTY-REMAIN =
                   WS-D-LINE-QTY-REMAIN - EGBD0-LINE-QTY
           COMPUTE WS-D-TOT-VAL =
                   WS-D-TOT-VAL + EGBD0-LINE-VAL
           COMPUTE WS-D-TOT-QTY =
                   WS-D-TOT-QTY + EGBD0-LINE-QTY

       VA-VALIDATE-MISC-CHRG SECTION.

++IF TARGET(POP=Y)
|
|     *--- NO ORDER ENTERED
|          IF MGBC-DETL-ORDR-REF-S = 'N'
|             GO TO +++-EXIT
|          END-IF
|
|          MOVE SPACE                  TO WS-FIND-ORDER-FLAG
|
|     *--- FIND MATCHING EGRA0 LINE
|          PERFORM EGRA0-DEFINE
|          PERFORM VARYING EGRA0P-LOG-ENTRY
|                  FROM    1 BY 1
|                  UNTIL   EGRA0P-LOG-ENTRY   > EGRA0R-NENTRIES
|                  OR      WS-FIND-ORDER-FLAG = 'Y'
|             PERFORM EGRA0-GET
|             IF MGBC-DETL-ORDR-REF = EGRA0-ORDR-REF AND
|                EGRA0-SEL          = 'Y'
|                MOVE 'Y'              TO WS-FIND-ORDER-FLAG
|             END-IF
|          END-PERFORM
|
|     *--- CHECK IF ORDR-REF ENTERED ON THE LINE EXISTS ON THE EGRA0
|          IF WS-FIND-ORDER-FLAG = 'Y'
|             MOVE EGRA0-AUTO-GRN-FLAG TO EGBC0-AUTO-GRN-FLAG
|             MOVE EGRA0-PRC-TOLRN-FLAG
|                                      TO EGBC0-PRC-TOLRN-FLAG
|             MOVE EGRA0-MISC-CHRGS-FLAG
|                                      TO EGBC0-MISC-CHRGS-FLAG
|             MOVE EGRA0-BYR           TO EGBC0-BYR
|          ELSE
|             MOVE 'E'                 TO CZAZSOFT-MSG-TYPE
|             MOVE 'GBC31'             TO CZAZSOFT-MSG
|             MOVE MGBC-DETL-ORDR-REF-F
|                                      TO CZAZSOFT-FIELD
|             MOVE CGBB-C-MAP-LINE     TO CZAZSOFT-ROW
|             PERFORM SZAZSOFT-SET-APPL
|          END-IF
|
|          PERFORM EGRA0-CLOSE
|
++END-IF

       VA-SA-PEV-CALC SECTION.

           IF  CGBXIN-TRAN-TYPE     = WGZZCNTL-TYPE-DRN
           AND TGACNTRL-TAX-DRN-IND = TGACNTRL-TDRN-NONE
               GO TO +++-EXIT
           END-IF

           PERFORM EGBD0-GET

      *--- Perform the tax validation and calculation
           INITIALIZE CRA0IN
           INITIALIZE CRA0OUT

           MOVE CRA0IN-CALC-PL-EXCL-INV
                                       TO CRA0IN-FUNC
           MOVE CRA0IN-PL              TO CRA0IN-SYS

           MOVE CGBB-CMPY              TO CRA0IN-CMPY
           MOVE MGBC-DETL-TAX-CODE     TO CRA0IN-TAX-CODE
           MOVE MGBC-DETL-LOCTN        TO CRA0IN-LOCTN
           MOVE MGBC-DETL-TAX-TYPE     TO CRA0IN-TAX-TYPE
           MOVE MGBC-DETL-TAX-DATE     TO CRA0IN-EFF-DATE
           MOVE MGBC-DETL-HAND         TO CRA0IN-HAND
           IF TPACNTRL-GL-RLTN-IND = TPACNTRL-SINGLE
              MOVE TPACNTRL-GL-HOLDING-CMPY
                                       TO CRA0IN-GL-CMPY
           ELSE
              MOVE CGBB-CMPY           TO CRA0IN-GL-CMPY
           END-IF
           MOVE 'Y'                    TO CRA0IN-ACCT-FLAG

           MOVE ZERO                   TO CRA0IN-GROSS-VALUE
           MOVE EGBB0-DSCNT-AMT        TO CRA0IN-DSCNT-VALUE
           MOVE EGBB0-DSCNT-PERC       TO CRA0IN-DSCNT-PERC
           MOVE ZERO                   TO CRA0IN-TAX-VALUE
           MOVE ZERO                   TO CRA0IN-ITEM-VALUE
           MOVE ZERO                   TO CRA0IN-NETT-VALUE

           IF MGBC-TAKE-DSCNT-IND   = '2'
           OR MGBC-EXCLD-DSCNT-FLAG = 'Y'
              MOVE SPACES              TO CRA0IN-PL-VAT-NET-FLAG
           ELSE
              PERFORM VAA-CHECK-PPD
           END-IF
           MOVE MGBC-TAKE-DSCNT-IND    TO CRA0IN-PL-TAKE-DSCNT-IND
           MOVE MGBC-DSCNT-TERM-1      TO CRA0IN-PL-DSCNT-1

           IF TRAHAND-INCL-FLAG = 'Y'

      *---    If the split percentage is not 100% then there are more
      *---    than one split analysis lines so the tax needs to be pro
      *---    rata over the splits.  Percentage is populated for all
      *---    Split Analysis types.

              IF EGBD0-LINE-PERC NOT = 100
                 COMPUTE CRA0IN-PL-TOT-AMT ROUNDED
                       = EGBD0-LINE-PERC
                       * MGBC-LINE-TAX-AMT
                       / 100

                 COMPUTE CRA0IN-PL-TOT-AMT = CRA0IN-PL-TOT-AMT
                                           + EGBD0-LINE-VAL
              ELSE
                 COMPUTE CRA0IN-PL-TOT-AMT = EGBD0-LINE-VAL
                                           + MGBC-LINE-TAX-AMT
              END-IF
           ELSE
              MOVE EGBD0-LINE-VAL      TO CRA0IN-PL-TOT-AMT
           END-IF

           MOVE SPACES                 TO CRA0IN-LEDGR
           MOVE MGBC-SUPP              TO CRA0IN-TRADER
           MOVE SPACES                 TO CRA0IN-TRADER-TAX-CODE

           MOVE MGBC-DETL-TAX-CODE-S   TO CRA0IN-TAX-CODE-S
           MOVE MGBC-DETL-LOCTN-S      TO CRA0IN-LOCTN-S
           MOVE MGBC-DETL-TAX-TYPE-S   TO CRA0IN-TAX-TYPE-S
           MOVE EGBB0-INV-TAX-AMT-S    TO CRA0IN-TAX-VALUE-S

           MOVE MGBC-DETL-TAX-CODE-F   TO CRA0IN-TAX-CODE-F
           MOVE MGBC-DETL-LOCTN-F      TO CRA0IN-LOCTN-F
           MOVE MGBC-DETL-TAX-TYPE-F   TO CRA0IN-TAX-TYPE-F
           MOVE MGBC-LINE-TAX-AMT-F    TO CRA0IN-TAX-VALUE-F
           MOVE MGBC-DETL-HAND-F       TO CRA0IN-HAND-F

           MOVE EGBD0-GL-ACCT          TO CRA0IN-GL-ACCT
           MOVE MGBC-SA-TYPE           TO CRA0IN-SA-TYPE

           EXEC QSP CALL CALC_TAX_VAL
                CRA0IN
                CRA0OUT
           END-EXEC

           IF CRA0OUT-ERR-CNT > ZERO
              PERFORM VARYING CF-SUB  FROM 1 BY 1
                UNTIL CF-SUB > CRA0OUT-ERR-CNT
                   IF CRA0OUT-ERR (CF-SUB) = CRA0OUT-ERROR
                      MOVE CRA0OUT-ERR (CF-SUB)
                                       TO CZAZSOFT-MSG-TYPE
                      MOVE CRA0OUT-MSG (CF-SUB)
                                       TO CZAZSOFT-MSG
                      PERFORM SZAZSOFT-SCREEN-LEVEL-MESS
                   END-IF
              END-PERFORM
           END-IF

      *--- Total up the recoverable and non recoverable values for each
      *--- split to get the values for the line.
           COMPUTE WS-D-VAT-NON-REC-VALUE =
                   WS-D-VAT-NON-REC-VALUE + CRA0OUT-VAT-NON-REC-VALUE
           COMPUTE WS-D-VAT-REC-VALUE =
                   WS-D-VAT-REC-VALUE + CRA0OUT-VAT-REC-VALUE

       VAA-CHECK-PPD SECTION.

      *--- Assume the current value of the supplier code setting until proven
      *--- otherwise

           MOVE TPBSUPP-VAT-NET-FLAG   TO CRA0IN-PL-VAT-NET-FLAG

      *--- If Prompt Payment Discount is in use, then the option to consider
      *--- discount in the VAT calculation isn't required and will only be
      *--- checked upon payment of the transaction. If this is the case, then
      *--- the option must be turned off for VAT calculations

           IF TPBSUPP-VAT-NET-FLAG NOT = 'Y'
              GO TO +++-EXIT
           END-IF

      *--- If ICA is active then retrieve the control account associated
      *--- with the ICA Element otherwise take the supplier/company
      *--- control account code

           MOVE CRA0IN-GL-CMPY         TO TGALEDGR-CMPY

           IF MGBC-ELEM = SPACES
              IF TPBSUPP-DFLT-LEDGR = SPACES
                 MOVE TGACNTRL-DFLT-LEDGR
                                       TO TGALEDGR-LEDGR
              ELSE
                 MOVE TPBSUPP-DFLT-LEDGR
                                       TO TGALEDGR-LEDGR
              END-IF
           ELSE
              INITIALIZE CAKWIN
              MOVE CAKWIN-VLDTE-ELEM   TO CAKWIN-FUNC
              MOVE CAKWIN-SYS-PL       TO CAKWIN-SYS
              MOVE CRA0IN-GL-CMPY      TO CAKWIN-CMPY
              MOVE MGBC-ELEM           TO CAKWIN-HEAD-ELEM
              EXEC QSP CALL VLDTE_ICA
                   CAKWIN
                   CAKWOUT
              END-EXEC
              MOVE CAKWOUT-CNTRL       TO TGALEDGR-LEDGR
              IF TGALEDGR-LEDGR = SPACES
                 MOVE TGACNTRL-DFLT-LEDGR
                                       TO TGALEDGR-LEDGR
              END-IF
           END-IF

           IF WS-LEDGR NOT = TGALEDGR-LEDGR
              MOVE SPACES              TO TGALEDGR-PPD-VAT-ACCT
              PERFORM SQL-SELECT-TGALEDGR
              MOVE TGALEDGR-LEDGR      TO WS-LEDGR
           END-IF

           IF  TGALEDGR-PPD-VAT-ACCT NOT = SPACES
           AND TGALEDGR-PPD-VAT-ACCT NOT = LOW-VALUES
               MOVE SPACES             TO CRA0IN-PL-VAT-NET-FLAG
           END-IF

      ******************************************************************
      * VB-VLDTE-SELECTION                                             *
      ******************************************************************
       VB-VLDTE-SELECTION SECTION.

      *--- ITEM ALREADY SELECTED - REQUESTED ACTION IS INVALID
           IF MGBC-ACTION = 11
           IF MGBC-SEL NOT = SPACES
              MOVE 'E'                 TO CZAZSOFT-MSG-TYPE
              MOVE 'GBC38'             TO CZAZSOFT-MSG
              MOVE MGBC-ACTION-F       TO CZAZSOFT-FIELD
              MOVE CGBB-C-MAP-LINE     TO CZAZSOFT-ROW
              MOVE ZEROES              TO MGBC-ACTION
              MOVE ZEROES              TO EGBC0-ACTION
              PERFORM SZAZSOFT-SET-APPL
              GO TO +++-EXIT
           END-IF
           END-IF

      *--- THIS SECTION INCREMENTS THE TRANSACTION TOTAL FIELDS
           ADD EGBC0-LINE-TOT-AMT      TO EGBB0-DETL-GROSS-AMT

           ADD EGBC0-LINE-TAX-AMT      TO EGBB0-DETL-TAX-AMT
           IF MGBC-TAX-ONLY-FLAG NOT = 'Y'
              ADD EGBC0-LINE-TAX-AMT   TO EGBB0-DETL-GROSS-AMT
           END-IF

           ADD EGBC0-VAT-NON-REC-VALUE TO EGBB0-INV-VAT-NON-REC
           ADD EGBC0-VAT-REC-VALUE     TO EGBB0-INV-VAT-REC

           IF MGBC-PRO-RATA-IND = '0'
              ADD 1                    TO EGBB0-PR-RCVD-LINES
           END-IF
           IF MGBC-PRO-RATA-IND = '2'
              ADD 1                    TO EGBB0-PR-LINES
           END-IF

           IF MGBC-SA-TYPE NOT = '0'
              ADD 1                    TO EGBB0-SA-LINES
           END-IF

           IF MGBC-WHOLD-USE-IND = '1'
              EVALUATE TGACNTRL-WHOLD-TYPE-IND
                 WHEN TGACNTRL-CIT
                    COMPUTE EGBB0-CIT-GROSS-AMT =
                            EGBB0-CIT-GROSS-AMT +
                            MGBC-LINE-TOT-AMT
                 WHEN TGACNTRL-1099
                    COMPUTE EGBB0-CIT-GROSS-AMT =
                            EGBB0-CIT-GROSS-AMT +
                            MGBC-LINE-TOT-AMT   +
                            MGBC-LINE-TAX-AMT
                 WHEN TGACNTRL-PPS
                    COMPUTE EGBB0-CIT-GROSS-AMT =
                            EGBB0-CIT-GROSS-AMT +
                            MGBC-LINE-TOT-AMT
              END-EVALUATE
           END-IF

           IF EGBC0-TAX-INCL-FLAG = 'Y'
              COMPUTE EGBB0-TAX-INCL-GROSS-AMT =
                      EGBB0-TAX-INCL-GROSS-AMT +
                      MGBC-LINE-TOT-AMT        +
                      MGBC-LINE-TAX-AMT
           END-IF

++IF TARGET(POP=Y)
|          IF MGBC-PRO-RATA-IND NOT = '2'
|          AND (TPBSUPP-AUTH-NEG-FLAG = 'Y'
|          OR   MGBC-LINE-TOT-AMT > 0)
|             IF  EGBC0-ORDR-REF     NOT = SPACES
|             AND EGBC0-ORDR-LINE-NUM    > 0
|             AND CGBVOUT-AUTH-ORDR-RLTD = SPACE
|             OR (EGBC0-ORDR-REF NOT = SPACES
|             AND EGBC0-ORDR-LINE-NUM = ZERO
|             AND WS-AUTH-CHRG-FLAG = SPACE)
|                CONTINUE
|             ELSE
|                IF EGBC0-TAX-RCVBLE-FLAG = '1'
|                   COMPUTE EGBB0-AMT-TO-AUTH =
|                           EGBB0-AMT-TO-AUTH +
|                           MGBC-LINE-TOT-AMT
|                ELSE
|                   COMPUTE EGBB0-AMT-TO-AUTH =
|                           EGBB0-AMT-TO-AUTH +
|                           MGBC-LINE-TOT-AMT +
|                           MGBC-LINE-TAX-AMT +
|                           MGBC-LINE-SLFASSD-AMT
|                END-IF
|                IF EGBC0-TAX-RCVBLE-FLAG = '2'
|                   SUBTRACT MGBC-VAT-REC-VALUE
|                       FROM EGBB0-AMT-TO-AUTH
|                END-IF
|             END-IF
|          END-IF
++ELSE
|          IF MGBC-PRO-RATA-IND NOT = '2'
|          AND (TPBSUPP-AUTH-NEG-FLAG = 'Y'
|          OR   MGBC-LINE-TOT-AMT > 0)
|             IF EGBC0-TAX-RCVBLE-FLAG = '1'
|                COMPUTE EGBB0-AMT-TO-AUTH =
|                        EGBB0-AMT-TO-AUTH +
|                        MGBC-LINE-TOT-AMT
|             ELSE
|                COMPUTE EGBB0-AMT-TO-AUTH =
|                        EGBB0-AMT-TO-AUTH +
|                        MGBC-LINE-TOT-AMT +
|                        MGBC-LINE-TAX-AMT +
|                        MGBC-LINE-SLFASSD-AMT
|             END-IF
|             IF EGBC0-TAX-RCVBLE-FLAG = '2'
|                SUBTRACT MGBC-VAT-REC-VALUE
|                    FROM EGBB0-AMT-TO-AUTH
|             END-IF
|          END-IF
++END-IF

++IF TARGET(POP=Y)
|
|          IF  MGBC-DETL-ORDR-REF NOT = SPACES
|          AND MGBC-ORDR-LINE-NUM NOT = ZERO
|              COMPUTE EGBB0-ORDR-VAL = EGBB0-ORDR-VAL
|                                     + MGBC-LINE-TOT-AMT
|          END-IF
|
++END-IF

           MOVE 'Y'                    TO MGBC-SEL
           MOVE 'Y'                    TO MGBC-SEL-S
           MOVE 'Y'                    TO EGBC0-SEL
           MOVE 'Y'                    TO EGBC0-SEL-S
           MOVE ZERO                   TO MGBC-ACTION
           MOVE 'N'                    TO MGBC-ACTION-S
           MOVE 11                     TO CGBB-C-LAST-ACTION

      ******************************************************************
      * VBA-VLDTE-SELECTION                                             *
      ******************************************************************
       VBA-VLDTE-SELECTION SECTION.

      *--- THIS SECTION INCREMENTS THE TRANSACTION TOTAL FIELDS
           ADD EGBC0-LINE-TOT-AMT      TO EGBB0-DETL-GROSS-AMT

           ADD EGBC0-LINE-TAX-AMT      TO EGBB0-DETL-TAX-AMT
           IF MGBC-TAX-ONLY-FLAG NOT = 'Y'
              ADD EGBC0-LINE-TAX-AMT   TO EGBB0-DETL-GROSS-AMT
           END-IF

           ADD EGBC0-VAT-NON-REC-VALUE TO EGBB0-INV-VAT-NON-REC
           ADD EGBC0-VAT-REC-VALUE     TO EGBB0-INV-VAT-REC

           IF EGBC0-PRO-RATA-IND = '0'
              ADD 1                    TO EGBB0-PR-RCVD-LINES
           END-IF
           IF EGBC0-PRO-RATA-IND = '2'
              ADD 1                    TO EGBB0-PR-LINES
           END-IF

           IF EGBC0-SA-TYPE NOT = '0'
              ADD 1                    TO EGBB0-SA-LINES
           END-IF

           IF EGBC0-WHOLD-USE-IND = '1'
              EVALUATE TGACNTRL-WHOLD-TYPE-IND
                 WHEN TGACNTRL-CIT
                    COMPUTE EGBB0-CIT-GROSS-AMT =
                            EGBB0-CIT-GROSS-AMT +
                            EGBC0-LINE-TOT-AMT
                 WHEN TGACNTRL-1099
                    COMPUTE EGBB0-CIT-GROSS-AMT =
                            EGBB0-CIT-GROSS-AMT +
                            EGBC0-LINE-TOT-AMT   +
                            EGBC0-LINE-TAX-AMT
                 WHEN TGACNTRL-PPS
                    COMPUTE EGBB0-CIT-GROSS-AMT =
                            EGBB0-CIT-GROSS-AMT +
                            EGBC0-LINE-TOT-AMT
              END-EVALUATE
           END-IF

           IF EGBC0-TAX-INCL-FLAG = 'Y'
              COMPUTE EGBB0-TAX-INCL-GROSS-AMT =
                      EGBB0-TAX-INCL-GROSS-AMT +
                      EGBC0-LINE-TOT-AMT        +
                      EGBC0-LINE-TAX-AMT
           END-IF

++IF TARGET(POP=Y)
|          IF EGBC0-PRO-RATA-IND NOT = '2'
|          AND (TPBSUPP-AUTH-NEG-FLAG = 'Y'
|          OR   EGBC0-LINE-TOT-AMT > 0)
|             IF  EGBC0-ORDR-REF     NOT = SPACES
|             AND EGBC0-ORDR-LINE-NUM    > 0
|             AND CGBVOUT-AUTH-ORDR-RLTD = SPACE
|             OR (EGBC0-ORDR-REF NOT = SPACES
|             AND EGBC0-ORDR-LINE-NUM = ZERO
|             AND WS-AUTH-CHRG-FLAG = SPACE)
|                CONTINUE
|             ELSE
|                IF EGBC0-TAX-RCVBLE-FLAG = '1'
|                   COMPUTE EGBB0-AMT-TO-AUTH =
|                           EGBB0-AMT-TO-AUTH +
|                           EGBC0-LINE-TOT-AMT
|                ELSE
|                   COMPUTE EGBB0-AMT-TO-AUTH =
|                           EGBB0-AMT-TO-AUTH +
|                           EGBC0-LINE-TOT-AMT +
|                           EGBC0-LINE-TAX-AMT +
|                           EGBC0-LINE-SLFASSD-AMT
|                END-IF
|                IF EGBC0-TAX-RCVBLE-FLAG = '2'
|                   SUBTRACT EGBC0-VAT-REC-VALUE
|                       FROM EGBB0-AMT-TO-AUTH
|                END-IF
|             END-IF
|          END-IF
++ELSE
|          IF EGBC0-PRO-RATA-IND NOT = '2'
|          AND (TPBSUPP-AUTH-NEG-FLAG = 'Y'
|          OR   EGBC0-LINE-TOT-AMT > 0)
|             IF EGBC0-TAX-RCVBLE-FLAG = '1'
|                COMPUTE EGBB0-AMT-TO-AUTH =
|                        EGBB0-AMT-TO-AUTH +
|                        EGBC0-LINE-TOT-AMT
|             ELSE
|                COMPUTE EGBB0-AMT-TO-AUTH =
|                        EGBB0-AMT-TO-AUTH +
|                        EGBC0-LINE-TOT-AMT +
|                        EGBC0-LINE-TAX-AMT +
|                        EGBC0-LINE-SLFASSD-AMT
|             END-IF
|             IF EGBC0-TAX-RCVBLE-FLAG = '2'
|                SUBTRACT EGBC0-VAT-REC-VALUE
|                    FROM EGBB0-AMT-TO-AUTH
|             END-IF
|          END-IF
++END-IF

++IF TARGET(POP=Y)
|
|          IF  MGBC-DETL-ORDR-REF NOT = SPACES
|          AND EGBC0-ORDR-LINE-NUM NOT = ZERO
|              COMPUTE EGBB0-ORDR-VAL = EGBB0-ORDR-VAL
|                                     + EGBC0-LINE-TOT-AMT
|          END-IF
|
++END-IF

           MOVE 'Y'                    TO EGBC0-SEL
           MOVE 'Y'                    TO EGBC0-SEL-S
           MOVE ZERO                   TO MGBC-ACTION
           MOVE 'N'                    TO MGBC-ACTION-S

      ******************************************************************
      * VC-VLDTE-DESELECTION                                           *
      ******************************************************************
       VC-VLDTE-DESELECTION SECTION.

      *--- ITEM NOT SELECTED - REQUESTED ACTION IS INVALID
           IF MGBC-ACTION = 12
           IF MGBC-SEL NOT = 'Y'
              MOVE 'E'                 TO CZAZSOFT-MSG-TYPE
              MOVE 'GBC39'             TO CZAZSOFT-MSG
              MOVE MGBC-ACTION-F       TO CZAZSOFT-FIELD
              MOVE CGBB-C-MAP-LINE     TO CZAZSOFT-ROW
              PERFORM SZAZSOFT-SET-APPL
              GO TO +++-EXIT
           END-IF
           END-IF

++IF TARGET(POP=Y)
|
|     *--- DO NOT ALLOW ACTION 'DESELECTION' WHEN NON ORDER RELATED
|     *--- LINES ARE ENTERED
|     *--- IF (MGBC-ORDR-REF      = SPACES
|     *--- AND MGBC-ADVC-NOTE     = SPACES)
|          IF  MGBC-DETL-ORDR-REF = SPACES
|          OR  MGBC-ORDR-LINE-NUM = ZERO
|              MOVE 'E'                TO CZAZSOFT-MSG-TYPE
|              MOVE 'GBC40'            TO CZAZSOFT-MSG
|              MOVE MGBC-ACTION-F      TO CZAZSOFT-FIELD
|              MOVE CGBB-C-MAP-LINE    TO CZAZSOFT-ROW
|              PERFORM SZAZSOFT-SET-APPL
|              GO TO +++-EXIT
|          END-IF
|
++END-IF

           PERFORM S2-DECREMENT-TOTALS

           MOVE SPACES                 TO MGBC-SEL
           MOVE 'N'                    TO MGBC-SEL-S
           MOVE SPACES                 TO EGBC0-SEL
           MOVE 'N'                    TO EGBC0-SEL-S
           MOVE ZERO                   TO MGBC-ACTION
           MOVE 'N'                    TO MGBC-ACTION-S
           MOVE 12                     TO CGBB-C-LAST-ACTION

      *--- SCAN THROUGH ALL THE EWS FOR THE ORDER REF OF THE DETAIL LINE
      *--- TO SEE IF WE CAN UNLOCK THE ORDER
           IF MGBC-DETL-ORDR-REF NOT = SPACES
              MOVE EGBC0P-LOG-ENTRY    TO WS-SAVE-ENTRY
              MOVE MGBC-DETL-ORDR-REF  TO WS-ORDR-REF
              MOVE ZERO                TO WS-COUNT
              PERFORM VARYING EGBC0P-LOG-ENTRY
                      FROM 1 BY 1
                      UNTIL EGBC0P-LOG-ENTRY > EGBC0R-NENTRIES
                      OR WS-COUNT > 1
                 PERFORM EGBC0-GET
                 IF  EGBC0-ORDR-REF = WS-ORDR-REF
                 AND EGBC0-SEL = 'Y'
                   ADD 1               TO WS-COUNT
                 END-IF
              END-PERFORM
              IF WS-COUNT = 0
      *--- THERE ARE NO OTHER OCCURRENCES OF THE ORDER REF, SO UNLOCK IT
                 MOVE WS-ORDR-REF      TO CDOZ-ORDR-REF
                 MOVE CDOZ-FGRND-UNLOCK
                                       TO CDOZ-FUNC
                 MOVE CGBB-CMPY  TO CDOZ-CMPY
                 MOVE TDOORDER-DOC-ORDR
                                       TO CDOZ-DOC-IND
                 MOVE CZAZPUBL-USR     TO CDOZ-LOCK-USR
                 MOVE CZAZSTCK-CURR-SESS
                                       TO CDOZ-LOCK-SESS
                 EXEC QSP CALL ORDR_LOCK_UNLOCK
                      CDOZ
                 END-EXEC
              END-IF
              MOVE WS-SAVE-ENTRY          TO EGBC0P-LOG-ENTRY
              PERFORM EGBC0-GET
           END-IF

      ******************************************************************
      * VCA-VLDTE-DESELECTION                                           *
      ******************************************************************
       VCA-VLDTE-DESELECTION SECTION.


++IF TARGET(POP=Y)
|
|     *--- DO NOT ALLOW ACTION 'DESELECTION' WHEN NON ORDER RELATED
|     *--- LINES ARE ENTERED
|     *--- IF (MGBC-ORDR-REF      = SPACES
|     *--- AND MGBC-ADVC-NOTE     = SPACES)
|          IF  EGBC0-ORDR-REF = SPACES
|          OR  EGBC0-ORDR-LINE-NUM = ZERO
|              GO TO +++-EXIT
|          END-IF
|
++END-IF

      *--- THIS SECTION DECREMENTS THE TRANSACTION TOTAL FIELDS
           SUBTRACT EGBC0-LINE-TOT-AMT
                                     FROM EGBB0-DETL-GROSS-AMT

           SUBTRACT EGBC0-LINE-TAX-AMT
                                     FROM EGBB0-DETL-TAX-AMT
           IF MGBC-TAX-ONLY-FLAG NOT = 'Y'
              SUBTRACT EGBC0-LINE-TAX-AMT
                                     FROM EGBB0-DETL-GROSS-AMT
           END-IF

           SUBTRACT EGBC0-VAT-NON-REC-VALUE
                                     FROM EGBB0-INV-VAT-NON-REC
           SUBTRACT EGBC0-VAT-REC-VALUE
                                     FROM EGBB0-INV-VAT-REC


           IF EGBC0-PRO-RATA-IND = '0'
              SUBTRACT 1             FROM EGBB0-PR-RCVD-LINES
           END-IF
           IF EGBC0-PRO-RATA-IND = '2'
              SUBTRACT 1             FROM EGBB0-PR-LINES
           END-IF

           IF EGBC0-SA-TYPE NOT = '0'
              SUBTRACT 1             FROM EGBB0-SA-LINES
           END-IF

           IF EGBC0-WHOLD-USE-IND = '1'
              EVALUATE TGACNTRL-WHOLD-TYPE-IND
                 WHEN TGACNTRL-CIT
                    COMPUTE EGBB0-CIT-GROSS-AMT =
                            EGBB0-CIT-GROSS-AMT -
                            EGBC0-LINE-TOT-AMT
                 WHEN TGACNTRL-1099
                    COMPUTE EGBB0-CIT-GROSS-AMT =
                            EGBB0-CIT-GROSS-AMT -
                            EGBC0-LINE-TOT-AMT  -
                            EGBC0-LINE-TAX-AMT
                 WHEN TGACNTRL-PPS
                    COMPUTE EGBB0-CIT-GROSS-AMT =
                            EGBB0-CIT-GROSS-AMT -
                            EGBC0-LINE-TOT-AMT
              END-EVALUATE
           END-IF

           IF EGBC0-TAX-INCL-FLAG = 'Y'
              COMPUTE EGBB0-TAX-INCL-GROSS-AMT =
                      EGBB0-TAX-INCL-GROSS-AMT -
                      EGBC0-LINE-TOT-AMT       -
                      EGBC0-LINE-TAX-AMT
           END-IF

++IF TARGET(POP=Y)
|          IF EGBC0-PRO-RATA-IND NOT = '2'
|          AND (TPBSUPP-AUTH-NEG-FLAG = 'Y'
|          OR EGBC0-LINE-TOT-AMT > 0)
|             IF  EGBC0-ORDR-REF     NOT = SPACES
|             AND EGBC0-ORDR-LINE-NUM    > 0
|             AND CGBVOUT-AUTH-ORDR-RLTD = SPACE
|             OR (EGBC0-ORDR-REF NOT = SPACES
|             AND EGBC0-ORDR-LINE-NUM = ZERO
|             AND WS-AUTH-CHRG-FLAG = SPACE)
|                CONTINUE
|             ELSE
|                IF EGBC0-TAX-RCVBLE-FLAG = '1'
|                   COMPUTE EGBB0-AMT-TO-AUTH =
|                           EGBB0-AMT-TO-AUTH -
|                           EGBC0-LINE-TOT-AMT
|                ELSE
|                   COMPUTE EGBB0-AMT-TO-AUTH =
|                           EGBB0-AMT-TO-AUTH -
|                           EGBC0-LINE-TOT-AMT -
|                           EGBC0-LINE-SLFASSD-AMT -
|                           EGBC0-LINE-TAX-AMT
|                   IF EGBC0-TAX-RCVBLE-FLAG = '2'
|                      SUBTRACT EGBC0-VAT-REC-VALUE
|                          FROM EGBB0-AMT-TO-AUTH
|                   END-IF
|                END-IF
|             END-IF
|          END-IF
++ELSE
|          IF EGBC0-PRO-RATA-IND NOT = '2'
|          AND (TPBSUPP-AUTH-NEG-FLAG = 'Y'
|          OR  EGBC0-LINE-TOT-AMT > 0)
|             IF EGBC0-TAX-RCVBLE-FLAG = '1'
|                COMPUTE EGBB0-AMT-TO-AUTH =
|                        EGBB0-AMT-TO-AUTH -
|                        EGBC0-LINE-TOT-AMT
|             ELSE
|                COMPUTE EGBB0-AMT-TO-AUTH =
|                        EGBB0-AMT-TO-AUTH -
|                        EGBC0-LINE-TOT-AMT -
|                        EGBC0-LINE-SLFASSD-AMT -
|                        EGBC0-LINE-TAX-AMT
|                IF EGBC0-TAX-RCVBLE-FLAG = '2'
|                   SUBTRACT EGBC0-VAT-REC-VALUE
|                       FROM EGBB0-AMT-TO-AUTH
|                END-IF
|             END-IF
|          END-IF
++END-IF

++IF TARGET(POP=Y)
|
|          IF  EGBC0-ORDR-REF      NOT = SPACES
|          AND EGBC0-ORDR-LINE-NUM NOT = ZERO
|              COMPUTE EGBB0-ORDR-VAL = EGBB0-ORDR-VAL
|                                     - EGBC0-LINE-TOT-AMT
|          END-IF
|
++END-IF

           MOVE SPACES                 TO MGBC-SEL
           MOVE 'N'                    TO MGBC-SEL-S
           MOVE SPACES                 TO EGBC0-SEL
           MOVE 'N'                    TO EGBC0-SEL-S
           MOVE ZERO                   TO MGBC-ACTION
           MOVE 'N'                    TO MGBC-ACTION-S
           MOVE 12                     TO CGBB-C-LAST-ACTION

      *--- SCAN THROUGH ALL THE EWS FOR THE ORDER REF OF THE DETAIL LINE
      *--- TO SEE IF WE CAN UNLOCK THE ORDER
           IF MGBC-DETL-ORDR-REF NOT = SPACES
              MOVE EGBC0P-LOG-ENTRY    TO WS-SAVE-ENTRY
              MOVE MGBC-DETL-ORDR-REF  TO WS-ORDR-REF
              MOVE ZERO                TO WS-COUNT
              PERFORM VARYING EGBC0P-LOG-ENTRY
                      FROM 1 BY 1
                      UNTIL EGBC0P-LOG-ENTRY > EGBC0R-NENTRIES
                      OR WS-COUNT > 1
                 PERFORM EGBC0-GET
                 IF  EGBC0-ORDR-REF = WS-ORDR-REF
                 AND EGBC0-SEL = 'Y'
                   ADD 1               TO WS-COUNT
                 END-IF
              END-PERFORM
              IF WS-COUNT = 0
      *--- THERE ARE NO OTHER OCCURRENCES OF THE ORDER REF, SO UNLOCK IT
                 MOVE WS-ORDR-REF      TO CDOZ-ORDR-REF
                 MOVE CDOZ-FGRND-UNLOCK
                                       TO CDOZ-FUNC
                 MOVE CGBB-CMPY  TO CDOZ-CMPY
                 MOVE TDOORDER-DOC-ORDR
                                       TO CDOZ-DOC-IND
                 MOVE CZAZPUBL-USR     TO CDOZ-LOCK-USR
                 MOVE CZAZSTCK-CURR-SESS
                                       TO CDOZ-LOCK-SESS
                 EXEC QSP CALL ORDR_LOCK_UNLOCK
                      CDOZ
                 END-EXEC
              END-IF
              MOVE WS-SAVE-ENTRY          TO EGBC0P-LOG-ENTRY
              PERFORM EGBC0-GET
           END-IF


      ******************************************************************
      * VD-VLDTE-GRN                                                   *
      ******************************************************************
       VD-VLDTE-GRN         SECTION.

      *--- IF THE GRN EWS CONTAINS ANY ENTRIES, THEN IF THERE IS ONLY ONE
      *--- ENTRY THEN WE SHOULD AMEND THE GRN VALUE, OTHERWISE
      *--- OUTPUT AN ERROR MESSAGE
++IF TARGET(POP=Y)
|          PERFORM EGRB0-DEFINE
|          IF EGRB0R-NENTRIES = 0
|             GO TO +++-EXIT
|          END-IF
|
|          IF EGRB0R-NENTRIES > 1
|              MOVE 'E'                TO CZAZSOFT-MSG-TYPE
|              MOVE 'GBC53'            TO CZAZSOFT-MSG
|              MOVE MGBC-QTY-INVCD-F   TO CZAZSOFT-FIELD
|              MOVE CGBB-C-MAP-LINE    TO CZAZSOFT-ROW
|              PERFORM SZAZSOFT-SET-APPL
|              GO TO +++-EXIT
|          END-IF
|
|          MOVE 1                      TO EGRB0P-LOG-ENTRY
|          PERFORM EGRB0-GET
|
|          IF EGBC0-LINE-TYPE-IND = '2'
|             MOVE MGBC-ITEM-PRC       TO EGRB0-VAL-TO-MTCH
|          ELSE
|             MOVE MGBC-QTY-INVCD      TO EGRB0-QTY-TO-MTCH
|          END-IF
|
|          IF EGBC0-LINE-TYPE-IND = '2'
|             MOVE MGBC-ITEM-PRC
|                                      TO EGBC0-GRN-VAL
|                                         EGBC0-ITEM-PRC
|                                         EGBC0-ORDR-PRC
|                                         EGBC0-LINE-TOT-AMT
|          ELSE
|             MOVE MGBC-QTY-INVCD
|                                      TO MGBC-QTY-REC
|                                         EGBC0-QTY-INVCD
|             IF MGBC-QTY-REC = ZEROES
|                MOVE 'N'              TO MGBC-QTY-REC-S
|                                         MGBC-QTY-INVCD-S
|             ELSE
|                MOVE 'Y'              TO MGBC-QTY-REC-S
|                                         MGBC-QTY-INVCD-S
|             END-IF
|          END-IF
|
|          INITIALIZE CGRM
|
|          MOVE CGRM-UPDATE-D          TO CGRM-FUNC
|
|          MOVE CGBB-CMPY              TO CGRM-CMPY
|          MOVE CGBB-TRAN-TYPE         TO CGRM-TRAN-TYPE
|          MOVE CGBB-EWS-INSTANCE      TO CGRM-EWS-INSTANCE
|          MOVE CGBB-C-ESN             TO CGRM-C-ESN
|          MOVE CGBB-RA-ESN            TO CGRM-RA-ESN
|          MOVE CGBB-RB-ESN            TO CGRM-RB-ESN
|          MOVE CGBB-C-LOG-ENTRY       TO CGRM-B-LOG-ENTRY
|          MOVE EGBC0P-LOG-ENTRY       TO CGRM-C-LOG-ENTRY
|          MOVE CGBB-RB-TRAN-SEQ-NUM
|                                      TO CGRM-RB-TRAN-SEQ-NUM
|
|          MOVE EGBC0-QTY-INVCD        TO CGRM-C-QTY-INVCD
|          MOVE EGBC0-TAX-RCVBLE-FLAG
|                                      TO CGRM-C-TAX-RCVBLE-FLAG
|          MOVE EGBC0-LINE-TOT-AMT     TO CGRM-C-LINE-TOT-AMT
|          MOVE EGBC0-LINE-TAX-AMT     TO CGRM-C-LINE-TAX-AMT
|          MOVE EGBC0-LINE-TYPE-IND
|                                      TO CGRM-C-LINE-TYPE-IND
|          MOVE EGBC0-SA-VALUE         TO CGRM-C-SA-VALUE
|          MOVE EGBC0-ITEM-PRC         TO CGRM-C-ITEM-PRC
|          MOVE EGBC0-QTY-REC          TO CGRM-C-QTY-REC
|          MOVE EGBC0-SA-GRP           TO CGRM-C-SA-GRP
|          MOVE EGBC0-DSCNT-1          TO CGRM-C-DSCNT-1
|          MOVE EGBC0-DSCNT-2          TO CGRM-C-DSCNT-2
|          MOVE EGBC0-DSCNT-3          TO CGRM-C-DSCNT-3
|          MOVE EGBC0-HAND             TO CGRM-C-HAND
|          MOVE EGBC0-TAX-CODE         TO CGRM-C-TAX-CODE
|          MOVE EGBC0-TAX-TYPE         TO CGRM-C-TAX-TYPE
|          MOVE EGBC0-LOCTN            TO CGRM-C-LOCTN
|
|          MOVE MGBC-CURR              TO CGRM-TRAN-CURR
|          MOVE WAZCMPYD-BASE-CURR     TO CGRM-BASE-CURR
|
|          PERFORM EGBC0-CLOSE
|          PERFORM EGBB0-CLOSE
|          PERFORM EGRB0-CLOSE
|
|          EXEC QSP CALL BUILD_EWS_PL_TRAN
|               CGRM
|          END-EXEC
|
|          PERFORM EGBB0-DEFINE
|          MOVE CGRM-B-LOG-ENTRY       TO EGBB0P-LOG-ENTRY
|          PERFORM EGBB0-GET
|          PERFORM EGBC0-DEFINE
|          MOVE CGRM-C-LOG-ENTRY       TO EGBC0P-LOG-ENTRY
|          PERFORM EGBC0-GET
|
|          MOVE 'I'                    TO CZAZSOFT-MSG-TYPE
|          MOVE 'GBC54'                TO CZAZSOFT-MSG
|          PERFORM SZAZSOFT-SCREEN-LEVEL-MESS
++END-IF
       SQL-FETCH-TGBBDETL SECTION.

      *--- THIS SECT REPLACES THE STANDARD FETCH SECTION FOR TGBBDETL
           PERFORM SQL-FETCH-TGBBDETL-1
           IF SQLCODE = WZAZSQL-NOT-FOUND
              GO TO +++-EXIT
           END-IF

           IF TGBBDETL-SA-TYPE = '0'
              MOVE CGBB-CMPY           TO TGBBANAL-CMPY
              MOVE CGBB-BTCH-NUM       TO TGBBANAL-BTCH-NUM
              MOVE TGBBDETL-TRAN-SEQ-NUM
                                       TO TGBBANAL-TRAN-SEQ-NUM
              MOVE TGBBDETL-DETL-SEQ-NUM
                                       TO TGBBANAL-DETL-SEQ-NUM
              MOVE 1                   TO TGBBANAL-ANAL-SEQ-NUM
              PERFORM SQL-SELECT-TGBBANAL
              IF SQLCODE = WZAZSQL-NOT-FOUND
                 MOVE +0               TO SQLCODE
                 INITIALIZE TGBBANAL
              END-IF
           ELSE
              INITIALIZE TGBBANAL
           END-IF

       MAINTAIN-GROSS-TOTALS SECTION.

           IF EGBB0-INV-GROSS-AMT NOT = EGBB0-INV-GROSS-AMT-P
              COMPUTE CGBB-B-GROSS-ENTRD = CGBB-B-GROSS-ENTRD
                                         - EGBB0-INV-GROSS-AMT-P
                                         + EGBB0-INV-GROSS-AMT
              MOVE EGBB0-INV-GROSS-AMT TO EGBB0-INV-GROSS-AMT-P
           END-IF

           IF EGBB0-INV-TAX-AMT NOT = EGBB0-INV-TAX-AMT-P
              COMPUTE CGBB-B-TAX-ENTRD  = CGBB-B-TAX-ENTRD
                                        - EGBB0-INV-TAX-AMT-P
                                        + EGBB0-INV-TAX-AMT
              MOVE EGBB0-INV-TAX-AMT   TO EGBB0-INV-TAX-AMT-P
           END-IF

           PERFORM VARYING CF-WSUB
                   FROM 1 BY 1
                   UNTIL CF-WSUB > R-CGBB-C-WARN-MSG
              MOVE CGBB-C-WARN-MSG       (CF-WSUB)
                TO EGBB0-WARN-MSG-ACCPT  (CF-WSUB)
           END-PERFORM

           IF EGBB0-STATUS-FLAG = '1'
              SUBTRACT 1             FROM CGBB-B-ERROR-COUNT
           ELSE
              IF EGBB0-STATUS-FLAG = '2'
                 SUBTRACT 1          FROM CGBB-B-WARNING-COUNT
              END-IF
           END-IF

           IF CGBB-B-INV-FLAG = 'Y'
              MOVE '1'                 TO EGBB0-STATUS-FLAG
           ELSE
              MOVE CZAZSTCK-ERROR-SWITCH
                                       TO EGBB0-STATUS-FLAG
           END-IF


           IF  EGBB0-STATUS-FLAG = '2'
           AND CZAZSTCK-ACTION = WZAZLITS-ACCEPT-WARNINGS
               MOVE '0'                TO EGBB0-STATUS-FLAG
           END-IF

           IF EGBB0-STATUS-FLAG = '1'
              ADD 1                    TO CGBB-B-ERROR-COUNT
           ELSE
              IF EGBB0-STATUS-FLAG = '2'
                 ADD 1                 TO CGBB-B-WARNING-COUNT
              END-IF
           END-IF

      ******************************************************************
      * Prompt for Payment Address Number                              *
      ******************************************************************

       PROMPT-FPBG SECTION.

           MOVE CGBB-CMPY              TO CPBG-CMPY
           MOVE MGBC-SUPP              TO CPBG-SUPP
           MOVE 0                      TO CPBG-ADDR-NUM-FR
           MOVE 0                      TO CPBG-ADDR-NUM-TO
           MOVE MGBC-PYMNT-ADDR        TO CPBG-ADDR-NUM
           MOVE WZAZLITS-TRF-DOWN      TO CZAZSESS-TRF-FLAG
           PERFORM C-TIDY
           MOVE 'FPBG'                 TO CZAZPUBL-TRF-NEXT-PRG
           MOVE WZAZCOMM-PUSH-COMMAREA TO CZAZSTCK-REQUEST
           MOVE 'GZYE' TO CF-CALL
           CALL CF-CALL USING
                CZAZSERV CZAZPUBL CZAZSESS CZAZSTCK
                CPBG
           IF CZAZSERV-ABEND-CODE NOT = SPACES
              PERFORM SZAZSERV-ABEND
           END-IF
           GO TO A-TERMINATE

      ******************************************************************
      * Handle return from prompt for Payment Address Number           *
      ******************************************************************

       RETURN-PROMPT-FPBG SECTION.

           MOVE WZAZCOMM-GET-PREV-COMMAREA
                                       TO CZAZSTCK-REQUEST
           MOVE 'GZYE' TO CF-CALL
           CALL CF-CALL USING
                CZAZSERV CZAZPUBL CZAZSESS CZAZSTCK
                CPBG
           IF CZAZSERV-ABEND-CODE NOT = SPACES
              PERFORM SZAZSERV-ABEND
           END-IF
           IF (CPBG-CMPY = CGBB-CMPY OR SPACES)
           AND (CPBG-SUPP = MGBC-SUPP OR SPACES)
           AND (CPBG-ADDR-NUM = MGBC-PYMNT-ADDR)
           AND (MGBC-PYMNT-ADDR-S = 'Y')
              MOVE 'ZZZ05'             TO CZAZSOFT-MSG
           ELSE
              MOVE CPBG-SUPP           TO MGBC-SUPP
              MOVE 'Y'                 TO MGBC-SUPP-S
              MOVE CPBG-ADDR-NUM       TO MGBC-PYMNT-ADDR
              MOVE 'Y'                 TO MGBC-PYMNT-ADDR-S
              MOVE 'ZZZ06'             TO CZAZSOFT-MSG
      *---    Re-default Postcode if appropriate
              IF TGACNTRL-POSTCODE-ENT-IND = '0'
                 MOVE SPACES           TO MGBC-SUPP-POSTCODE
                 MOVE 'N'              TO MGBC-SUPP-POSTCODE-S
              END-IF
           END-IF
           MOVE 'I'                    TO CZAZSOFT-MSG-TYPE
           MOVE CZAZSTCK-FLDNO         TO CZAZSOFT-FIELD
           PERFORM SZAZSOFT-SET-APPL
           MOVE WZAZLITS-TRF-NORMAL    TO CZAZSESS-TRF-FLAG
           PERFORM C-TIDY
           GO TO A-TERMINATE

       RETURN-PROMPT-FAKY SECTION.

           MOVE WZAZCOMM-GET-PREV-COMMAREA TO CZAZSTCK-REQUEST
           MOVE 'GZYE' TO CF-CALL
           CALL CF-CALL USING
                CZAZSERV CZAZPUBL CZAZSESS CZAZSTCK
                CAKY
           IF CZAZSERV-ABEND-CODE NOT = SPACES
              PERFORM SZAZSERV-ABEND
           END-IF
           IF (CAKY-CNTRY = MGBC-BANK-CNTRY OR SPACES)
           AND (CAKY-BANK-SRT-CODE = MGBC-SRT-CODE OR SPACES)
              MOVE 'ZZZ05' TO CZAZSOFT-MSG
           ELSE
              MOVE CAKY-CNTRY          TO MGBC-BANK-CNTRY
              MOVE 'Y'                 TO MGBC-BANK-CNTRY-S
              MOVE CAKY-BANK-SRT-CODE  TO MGBC-SRT-CODE
              MOVE 'Y'                 TO MGBC-SRT-CODE-S
              MOVE 'ZZZ06'             TO CZAZSOFT-MSG
           END-IF
           MOVE 'I'                    TO CZAZSOFT-MSG-TYPE
           MOVE CZAZSTCK-FLDNO         TO CZAZSOFT-FIELD
           PERFORM SZAZSOFT-SET-APPL
           MOVE WZAZLITS-TRF-NORMAL    TO CZAZSESS-TRF-FLAG
           PERFORM C-TIDY
           GO TO A-TERMINATE

++SQL


           EXEC QSP SQL SELECT-TPBADDR ALLOW=NOT-FOUND
             SELECT CMPY
                   ,SUPP
                   ,ADDR_NUM
                   ,ADDR_LINE1
                   ,ADDR_LINE2
                   ,ADDR_LINE3
                   ,ADDR_LINE4
                   ,ADDR_LINE5
                   ,ADDR_LINE6
                   ,POSTCODE
                   ,PHONE
                   ,BANK_CNTRY
                   ,BANK_ACCT
                   ,SRT_CODE
                   ,THIRD_PARTY_ACCT
                   ,IBAN
                   ,PAYEE_USR_DATA
                   ,TELEX
                   ,FAX
                   ,PAYEE_NAME
                   ,CNTCT_NAME
                   ,TRANS_MECH
                   ,DSBLD
               INTO :TPBADDR-CMPY
                   ,:TPBADDR-SUPP
                   ,:TPBADDR-ADDR-NUM
                   ,:TPBADDR-ADDR-LINE1
                   ,:TPBADDR-ADDR-LINE2
                   ,:TPBADDR-ADDR-LINE3
                   ,:TPBADDR-ADDR-LINE4
                   ,:TPBADDR-ADDR-LINE5
                   ,:TPBADDR-ADDR-LINE6
                   ,:TPBADDR-POSTCODE
                   ,:TPBADDR-PHONE
                   ,:TPBADDR-BANK-CNTRY
                   ,:TPBADDR-BANK-ACCT
                   ,:TPBADDR-SRT-CODE
                   ,:TPBADDR-THIRD-PARTY-ACCT
                   ,:TPBADDR-IBAN
                   ,:TPBADDR-PAYEE-USR-DATA
                   ,:TPBADDR-TELEX
                   ,:TPBADDR-FAX
                   ,:TPBADDR-PAYEE-NAME
                   ,:TPBADDR-CNTCT-NAME
                   ,:TPBADDR-TRANS-MECH
                   ,:TPBADDR-DSBLD
               FROM TPBADDR
              WHERE CMPY = :TPBADDR-CMPY
                AND SUPP = :TPBADDR-SUPP
                AND ADDR_NUM = :TPBADDR-ADDR-NUM
           END-EXEC.

           EXEC QSP SQL SELECT-TPBSUPP-1 ALLOW=NOT-FOUND
             SELECT A.CMPY
                   ,A.SUPP
                   ,A.NAME
                   ,A.SHORT_NAME
                   ,A.ACCT_TYPE
                   ,A.PUR_FLAG
                   ,A.PL_FLAG
                   ,A.POP_FLAG
                   ,A.IM_FLAG
                   ,A.CURR
                   ,A.CATEG
                   ,A.STLMNT
                   ,A.CURR_REVAL_FLAG
                   ,A.DSCNT_1
                   ,A.DSCNT_2
                   ,A.DSCNT_3
                   ,A.TAKE_DSCNT_IND
                   ,A.ORDR_TRM_IND
                   ,A.DFLT_GL_CMPY
                   ,A.DFLT_GL_MCA
                   ,A.DFLT_ITEM_DESCR
                   ,A.TAX_CODE
                   ,A.LOCTN
                   ,A.TAX_TYPE
                   ,A.HAND
                   ,A.SLFASSD_TAX_IND
                   ,A.CIT_IND
                   ,A.CIT_REG
                   ,A.CIT_DATE
                   ,A.CIT_DTRMNT
                   ,A.NAT_INS_NUM
                   ,A.REG_CARD_TYPE
                   ,A.ORIG_CIT_IND
                   ,A.ORIG_CIT_REG
                   ,A.ORIG_CIT_DATE
                   ,A.ORIG_CIT_DTRMNT
                   ,A.PYMNT_ANAL_IND
                   ,A.PA_CODE_REQD_FLAG
                   ,A.DFLT_PYMNT_ANAL
                   ,A.RPRT_1099_FLAG
                   ,A.FILING_NAME
                   ,A.SPECL_ACCT_FLAG
                   ,A.INTER_CMPY_FLAG
                   ,A.DUP_INVCE_FLAG
                   ,A.VAT_NET_FLAG
                   ,A.STOP_INVCE_FLAG
                   ,A.TNVR_VAL_IND
                   ,A.INCLD_TAX_FLAG
                   ,A.SKEL_CODE
                   ,A.AUTH_CNTRL
                   ,A.AUTH_NEG_FLAG
                   ,A.ASSOC_CUST_CMPY
                   ,A.ASSOC_CUST_LEDGR
                   ,A.ASSOC_CUST_ACCT
                   ,A.DFLT_LEDGR
                   ,A.INVCE_PYMNT_IND
                   ,A.MIN_PYMNT_FLAG
                   ,A.MIN_PYMNT_VAL
                   ,A.RETAIN_NET_IND
                   ,A.RETAIN_PERC
                   ,A.RETAIN_AMT
                   ,A.RETAIN_DAYS
                   ,A.BANK_CNTRY
                   ,A.BANK_ACCT
                   ,A.SRT_CODE
                   ,A.THIRD_PARTY_ACCT
                   ,A.IBAN
                   ,A.SWFT_CHRG_FLAG
                   ,A.CR_TOLRN_REQD_FLAG
                   ,A.CR_TOLRN_TYPE_IND
                   ,A.CR_TOLRN_PERC
                   ,A.CR_TOLRN_AMT
                   ,A.FACT_FLAG
                   ,A.MULT_PYMNT_ADDR
                   ,A.TAX_FILE_NUM
                   ,A.TAX_RATE
                   ,A.TOLRN_REQD_FLAG
                   ,A.TOLRN_TYPE_IND
                   ,A.TOLRN_PERC_PSTV
                   ,A.TOLRN_PERC_NEG
                   ,A.TOLRN_AMT
                   ,A.SUPP_REF_FLAG
                   ,A.LINE_SELN_FLAG
                   ,A.MISC_CHRG_IND
                   ,A.AUTH_CHRG_FLAG
                   ,A.AUTH_STAT_FLAG
                   ,A.MNMM_ORDR_VAL
                   ,A.QA_STAT
                   ,A.STOP_ORDR_FLAG
                   ,A.LEAD_DD
                   ,A.POP_TNVR_VAL_IND
                   ,A.EDI_ORDR_IND
                   ,A.FNCL_LIMIT_FLAG
                   ,A.ACCT_REVW_DATE
                   ,A.DSBLD
                   ,A.UPDT_DATE
                   ,A.UPDT_TIME
                   ,A.UPDT_USR
                   ,A.CRTE_DATE
                   ,A.HOLD_PYMNT_FLAG
                   ,A.RLSE_DATE
                   ,A.NEXT_ADDR
                   ,A.LOCK_USR
                   ,A.LOCK_SESS
                   ,A.LOCK_FLAG
                   ,A.NCIS_PAY_STAT
                   ,A.XML_TRAN_IND
                   ,A.USR_DATA1
                   ,A.USR_DATA2
                   ,B.PYMNT
                   ,B.PYMNT_MTHD
                   ,A.CRN_PRC_FLAG
               INTO :TPBSUPP-CMPY
                   ,:TPBSUPP-SUPP
                   ,:TPBSUPP-NAME
                   ,:TPBSUPP-SHORT-NAME
                   ,:TPBSUPP-ACCT-TYPE
                   ,:TPBSUPP-PUR-FLAG
                   ,:TPBSUPP-PL-FLAG
                   ,:TPBSUPP-POP-FLAG
                   ,:TPBSUPP-IM-FLAG
                   ,:TPBSUPP-CURR
                   ,:TPBSUPP-CATEG
                   ,:TPBSUPP-STLMNT
                   ,:TPBSUPP-CURR-REVAL-FLAG
                   ,:TPBSUPP-DSCNT-1
                   ,:TPBSUPP-DSCNT-2
                   ,:TPBSUPP-DSCNT-3
                   ,:TPBSUPP-TAKE-DSCNT-IND
                   ,:TPBSUPP-ORDR-TRM-IND
                   ,:TPBSUPP-DFLT-GL-CMPY
                   ,:TPBSUPP-DFLT-GL-MCA
                   ,:TPBSUPP-DFLT-ITEM-DESCR
                   ,:TPBSUPP-TAX-CODE
                   ,:TPBSUPP-LOCTN
                   ,:TPBSUPP-TAX-TYPE
                   ,:TPBSUPP-HAND
                   ,:TPBSUPP-SLFASSD-TAX-IND
                   ,:TPBSUPP-CIT-IND
                   ,:TPBSUPP-CIT-REG
                   ,:XPBSUPP-CIT-DATE
                   ,:TPBSUPP-CIT-DTRMNT
                   ,:TPBSUPP-NAT-INS-NUM
                   ,:TPBSUPP-REG-CARD-TYPE
                   ,:TPBSUPP-ORIG-CIT-IND
                   ,:TPBSUPP-ORIG-CIT-REG
                   ,:XPBSUPP-ORIG-CIT-DATE
                   ,:TPBSUPP-ORIG-CIT-DTRMNT
                   ,:TPBSUPP-PYMNT-ANAL-IND
                   ,:TPBSUPP-PA-CODE-REQD-FLAG
                   ,:TPBSUPP-DFLT-PYMNT-ANAL
                   ,:TPBSUPP-RPRT-1099-FLAG
                   ,:TPBSUPP-FILING-NAME
                   ,:TPBSUPP-SPECL-ACCT-FLAG
                   ,:TPBSUPP-INTER-CMPY-FLAG
                   ,:TPBSUPP-DUP-INVCE-FLAG
                   ,:TPBSUPP-VAT-NET-FLAG
                   ,:TPBSUPP-STOP-INVCE-FLAG
                   ,:TPBSUPP-TNVR-VAL-IND
                   ,:TPBSUPP-INCLD-TAX-FLAG
                   ,:TPBSUPP-SKEL-CODE
                   ,:TPBSUPP-AUTH-CNTRL
                   ,:TPBSUPP-AUTH-NEG-FLAG
                   ,:TPBSUPP-ASSOC-CUST-CMPY
                   ,:TPBSUPP-ASSOC-CUST-LEDGR
                   ,:TPBSUPP-ASSOC-CUST-ACCT
                   ,:TPBSUPP-DFLT-LEDGR
                   ,:TPBSUPP-INVCE-PYMNT-IND
                   ,:TPBSUPP-MIN-PYMNT-FLAG
                   ,:TPBSUPP-MIN-PYMNT-VAL
                   ,:TPBSUPP-RETAIN-NET-IND
                   ,:TPBSUPP-RETAIN-PERC
                   ,:TPBSUPP-RETAIN-AMT
                   ,:TPBSUPP-RETAIN-DAYS
                   ,:TPBSUPP-BANK-CNTRY
                   ,:TPBSUPP-BANK-ACCT
                   ,:TPBSUPP-SRT-CODE
                   ,:TPBSUPP-THIRD-PARTY-ACCT
                   ,:TPBSUPP-IBAN
                   ,:TPBSUPP-SWFT-CHRG-FLAG
                   ,:TPBSUPP-CR-TOLRN-REQD-FLAG
                   ,:TPBSUPP-CR-TOLRN-TYPE-IND
                   ,:TPBSUPP-CR-TOLRN-PERC
                   ,:TPBSUPP-CR-TOLRN-AMT
                   ,:TPBSUPP-FACT-FLAG
                   ,:TPBSUPP-MULT-PYMNT-ADDR
                   ,:TPBSUPP-TAX-FILE-NUM
                   ,:TPBSUPP-TAX-RATE
                   ,:TPBSUPP-TOLRN-REQD-FLAG
                   ,:TPBSUPP-TOLRN-TYPE-IND
                   ,:TPBSUPP-TOLRN-PERC-PSTV
                   ,:TPBSUPP-TOLRN-PERC-NEG
                   ,:TPBSUPP-TOLRN-AMT
                   ,:TPBSUPP-SUPP-REF-FLAG
                   ,:TPBSUPP-LINE-SELN-FLAG
                   ,:TPBSUPP-MISC-CHRG-IND
                   ,:TPBSUPP-AUTH-CHRG-FLAG
                   ,:TPBSUPP-AUTH-STAT-FLAG
                   ,:TPBSUPP-MNMM-ORDR-VAL
                   ,:TPBSUPP-QA-STAT
                   ,:TPBSUPP-STOP-ORDR-FLAG
                   ,:TPBSUPP-LEAD-DD
                   ,:TPBSUPP-POP-TNVR-VAL-IND
                   ,:TPBSUPP-EDI-ORDR-IND
                   ,:TPBSUPP-FNCL-LIMIT-FLAG
                   ,:XPBSUPP-ACCT-REVW-DATE
                   ,:TPBSUPP-DSBLD
                   ,:XPBSUPP-UPDT-DATE
                   ,:XPBSUPP-UPDT-TIME
                   ,:TPBSUPP-UPDT-USR
                   ,:XPBSUPP-CRTE-DATE
                   ,:TPBSUPP-HOLD-PYMNT-FLAG
                   ,:XPBSUPP-RLSE-DATE
                   ,:TPBSUPP-NEXT-ADDR
                   ,:TPBSUPP-LOCK-USR
                   ,:TPBSUPP-LOCK-SESS
                   ,:TPBSUPP-LOCK-FLAG
                   ,:TPBSUPP-NCIS-PAY-STAT
                   ,:TPBSUPP-XML-TRAN-IND
                   ,:TPBSUPP-USR-DATA1
                   ,:TPBSUPP-USR-DATA2
                   ,:TPBSCHD-PYMNT
                   ,:TPBSCHD-PYMNT-MTHD
                   ,:TPBSUPP-CRN-PRC-FLAG
               FROM TPBSUPP A
                   ,TPBSCHD B
              WHERE A.CMPY = B.CMPY
                AND A.CMPY = :TPBSUPP-CMPY
                AND A.SUPP = B.SUPP
                AND A.SUPP = :TPBSUPP-SUPP
                AND B.ADDR_NUM = 0
           END-EXEC.

           EXEC QSP SQL CURSOR-TGBBDETL
           OPTIMISE=CZAZPUBL-SRCH-LIMIT
            DECLARE C1 CURSOR
                FOR
             SELECT CMPY
                   ,BTCH_NUM
                   ,TRAN_SEQ_NUM
                   ,DETL_SEQ_NUM
                   ,DESCR
                   ,QTY_INVCD
                   ,ITEM_PRC
                   ,TOT_AMT
                   ,TAX_AMT
                   ,DSCNT_1
                   ,DSCNT_2
                   ,DSCNT_3
                   ,EXCLD_DSCNT_FLAG
                   ,TAX_CODE
                   ,TAX_RCVBLE_FLAG
                   ,TAX_INCL_FLAG
                   ,TAX_PRORAT_FLAG
                   ,TAX_TYPE
                   ,LOCTN
                   ,HAND
                   ,TAX_DATE
                   ,SLFASSD_TAX_AMT
                   ,PRO_RATA_IND
                   ,PRO_RATA_AMT
                   ,PYMNT_ANAL
                   ,WHOLD_USE_IND
                   ,SA_TYPE
                   ,PRPYMNT_IND
                   ,PRPYMNT_STRT_PER
                   ,PRPYMNT_STRT_YY
                   ,PRPYMNT_OCCUR
                   ,QUOM
                   ,PUOM
                   ,LAST_ANAL_SEQ_NUM
                   ,ERR_STAT
                   ,WARN_MSG_ACCPT_1
                   ,WARN_MSG_ACCPT_2
                   ,WARN_MSG_ACCPT_3
                   ,WARN_MSG_ACCPT_4
                   ,WARN_MSG_ACCPT_5
                   ,WARN_MSG_1
                   ,WARN_MSG_2
                   ,WARN_MSG_3
                   ,WARN_MSG_4
                   ,WARN_MSG_5
                   ,MIN_AUTH
                   ,RECALC_MIN_AUTH
                   ,ACT_AUTH
                   ,QRY_AUTH
                   ,AUTH_CNTRL
                   ,AUTH_GRP
                   ,SRVC_CODE
                   ,SRVC_CHRG_TYPE
                   ,SRVC_REF
                   ,SRVC_FROM_DATE
                   ,SRVC_TO_DATE
                   ,SRVC_PREV_METER
                   ,SRVC_CURNT_METER
                   ,SRVC_METER_REF
                   ,SRVC_PREV_BL_TYPE
                   ,SRVC_CURNT_BL_TYPE
                   ,DOC_IND
                   ,ORDR_REF
                   ,ORDR_LINE_NUM
                   ,CMPLT_ORDR_IND
                   ,ORDR_PRC
                   ,AGRD_PRC
                   ,STD_COST_FLAG
                   ,STD_RATE_TYPE
                   ,STD_COST
                   ,NET_RCPT
                   ,BYR
                   ,LEASE
                   ,MISC_CHRG_FLAG
                   ,AUTO_GRN_FLAG
                   ,HEAD_TXT_FLAG
                   ,DETL_TXT_FLAG
                   ,STOCK_FLAG
                   ,CATLG_REF
                   ,LINE_STAT_1
                   ,LINE_STAT_2
                   ,LINE_STAT_3
                   ,LINE_STAT_4
                   ,DLVRY
                   ,ITEM
                   ,ORDR_DSCNT_1
                   ,ORDR_DSCNT_2
                   ,ORDR_DSCNT_3
                   ,ORDR_PUOM
                   ,ORDR_QUOM
                   ,PRC_TOLRN_FLAG
                   ,MISC_CHRG_AMT
                   ,QTY_ACCPT
                   ,ORDR_LINE_TYPE
                   ,SRVC_VAL_ACCPT
                   ,CRN_INV_SYSREF
                   ,CRN_INV_REF
                   ,CRN_INV_LINE
                   ,MTCH_REF
               FROM TGBBDETL
              WHERE CMPY = :TGBBDETL-CMPY
                AND BTCH_NUM = :TGBBDETL-BTCH-NUM
                AND TRAN_SEQ_NUM = :TGBBDETL-TRAN-SEQ-NUM
                AND DETL_SEQ_NUM > :HV-DETL-SEQ-NUM
           ORDER BY CMPY
                   ,BTCH_NUM
                   ,TRAN_SEQ_NUM
                   ,DETL_SEQ_NUM
           END-EXEC.

           EXEC QSP SQL FETCH-TGBBDETL-1 ALLOW=NOT-FOUND
              FETCH C1
               INTO :TGBBDETL-CMPY
                   ,:TGBBDETL-BTCH-NUM
                   ,:TGBBDETL-TRAN-SEQ-NUM
                   ,:TGBBDETL-DETL-SEQ-NUM
                   ,:TGBBDETL-DESCR
                   ,:TGBBDETL-QTY-INVCD
                   ,:TGBBDETL-ITEM-PRC
                   ,:TGBBDETL-TOT-AMT
                   ,:TGBBDETL-TAX-AMT
                   ,:TGBBDETL-DSCNT-1
                   ,:TGBBDETL-DSCNT-2
                   ,:TGBBDETL-DSCNT-3
                   ,:TGBBDETL-EXCLD-DSCNT-FLAG
                   ,:TGBBDETL-TAX-CODE
                   ,:TGBBDETL-TAX-RCVBLE-FLAG
                   ,:TGBBDETL-TAX-INCL-FLAG
                   ,:TGBBDETL-TAX-PRORAT-FLAG
                   ,:TGBBDETL-TAX-TYPE
                   ,:TGBBDETL-LOCTN
                   ,:TGBBDETL-HAND
                   ,:XGBBDETL-TAX-DATE
                   ,:TGBBDETL-SLFASSD-TAX-AMT
                   ,:TGBBDETL-PRO-RATA-IND
                   ,:TGBBDETL-PRO-RATA-AMT
                   ,:TGBBDETL-PYMNT-ANAL
                   ,:TGBBDETL-WHOLD-USE-IND
                   ,:TGBBDETL-SA-TYPE
                   ,:TGBBDETL-PRPYMNT-IND
                   ,:TGBBDETL-PRPYMNT-STRT-PER
                   ,:TGBBDETL-PRPYMNT-STRT-YY
                   ,:TGBBDETL-PRPYMNT-OCCUR
                   ,:TGBBDETL-QUOM
                   ,:TGBBDETL-PUOM
                   ,:TGBBDETL-LAST-ANAL-SEQ-NUM
                   ,:TGBBDETL-ERR-STAT
                   ,:XGBBDETL-WARN-MSG-ACCPT-1
                   ,:XGBBDETL-WARN-MSG-ACCPT-2
                   ,:XGBBDETL-WARN-MSG-ACCPT-3
                   ,:XGBBDETL-WARN-MSG-ACCPT-4
                   ,:XGBBDETL-WARN-MSG-ACCPT-5
                   ,:XGBBDETL-WARN-MSG-1
                   ,:XGBBDETL-WARN-MSG-2
                   ,:XGBBDETL-WARN-MSG-3
                   ,:XGBBDETL-WARN-MSG-4
                   ,:XGBBDETL-WARN-MSG-5
                   ,:TGBBDETL-MIN-AUTH
                   ,:TGBBDETL-RECALC-MIN-AUTH
                   ,:TGBBDETL-ACT-AUTH
                   ,:TGBBDETL-QRY-AUTH
                   ,:TGBBDETL-AUTH-CNTRL
                   ,:TGBBDETL-AUTH-GRP
                   ,:TGBBDETL-SRVC-CODE
                   ,:TGBBDETL-SRVC-CHRG-TYPE
                   ,:TGBBDETL-SRVC-REF
                   ,:XGBBDETL-SRVC-FROM-DATE
                   ,:XGBBDETL-SRVC-TO-DATE
                   ,:TGBBDETL-SRVC-PREV-METER
                   ,:TGBBDETL-SRVC-CURNT-METER
                   ,:TGBBDETL-SRVC-METER-REF
                   ,:TGBBDETL-SRVC-PREV-BL-TYPE
                   ,:TGBBDETL-SRVC-CURNT-BL-TYPE
                   ,:TGBBDETL-DOC-IND
                   ,:TGBBDETL-ORDR-REF
                   ,:TGBBDETL-ORDR-LINE-NUM
                   ,:TGBBDETL-CMPLT-ORDR-IND
                   ,:TGBBDETL-ORDR-PRC
                   ,:TGBBDETL-AGRD-PRC
                   ,:TGBBDETL-STD-COST-FLAG
                   ,:TGBBDETL-STD-RATE-TYPE
                   ,:TGBBDETL-STD-COST
                   ,:TGBBDETL-NET-RCPT
                   ,:TGBBDETL-BYR
                   ,:TGBBDETL-LEASE
                   ,:TGBBDETL-MISC-CHRG-FLAG
                   ,:TGBBDETL-AUTO-GRN-FLAG
                   ,:TGBBDETL-HEAD-TXT-FLAG
                   ,:TGBBDETL-DETL-TXT-FLAG
                   ,:TGBBDETL-STOCK-FLAG
                   ,:TGBBDETL-CATLG-REF
                   ,:TGBBDETL-LINE-STAT-1
                   ,:TGBBDETL-LINE-STAT-2
                   ,:TGBBDETL-LINE-STAT-3
                   ,:TGBBDETL-LINE-STAT-4
                   ,:TGBBDETL-DLVRY
                   ,:TGBBDETL-ITEM
                   ,:TGBBDETL-ORDR-DSCNT-1
                   ,:TGBBDETL-ORDR-DSCNT-2
                   ,:TGBBDETL-ORDR-DSCNT-3
                   ,:TGBBDETL-ORDR-PUOM
                   ,:TGBBDETL-ORDR-QUOM
                   ,:TGBBDETL-PRC-TOLRN-FLAG
                   ,:TGBBDETL-MISC-CHRG-AMT
                   ,:TGBBDETL-QTY-ACCPT
                   ,:TGBBDETL-ORDR-LINE-TYPE
                   ,:TGBBDETL-SRVC-VAL-ACCPT
                   ,:TGBBDETL-CRN-INV-SYSREF
                   ,:TGBBDETL-CRN-INV-REF
                   ,:TGBBDETL-CRN-INV-LINE
                   ,:TGBBDETL-MTCH-REF
           END-EXEC.

           EXEC QSP SQL CURSOR-TGBBANAL
           OPTIMISE=CZAZPUBL-SRCH-LIMIT
            DECLARE C2 CURSOR
                FOR
             SELECT CMPY
                   ,BTCH_NUM
                   ,TRAN_SEQ_NUM
                   ,DETL_SEQ_NUM
                   ,ANAL_SEQ_NUM
                   ,RECON
                   ,PROJ
                   ,VAL
                   ,QTY
                   ,PERC
                   ,ERR_STAT
                   ,WARN_MSG_ACCPT_1
                   ,WARN_MSG_ACCPT_2
                   ,WARN_MSG_ACCPT_3
                   ,WARN_MSG_ACCPT_4
                   ,WARN_MSG_ACCPT_5
                   ,WARN_MSG_1
                   ,WARN_MSG_2
                   ,WARN_MSG_3
                   ,WARN_MSG_4
                   ,WARN_MSG_5
                   ,GL_CMPY
                   ,GL_ACCT
                   ,GL_ANAL
               FROM TGBBANAL
              WHERE CMPY = :TGBBANAL-CMPY
                AND BTCH_NUM = :TGBBANAL-BTCH-NUM
                AND TRAN_SEQ_NUM = :TGBBANAL-TRAN-SEQ-NUM
                AND DETL_SEQ_NUM = :TGBBANAL-DETL-SEQ-NUM
           ORDER BY CMPY
                   ,BTCH_NUM
                   ,TRAN_SEQ_NUM
                   ,DETL_SEQ_NUM
                   ,ANAL_SEQ_NUM
           END-EXEC.

           EXEC QSP SQL FETCH-TGBBANAL ALLOW=NOT-FOUND
              FETCH C2
               INTO :TGBBANAL-CMPY
                   ,:TGBBANAL-BTCH-NUM
                   ,:TGBBANAL-TRAN-SEQ-NUM
                   ,:TGBBANAL-DETL-SEQ-NUM
                   ,:TGBBANAL-ANAL-SEQ-NUM
                   ,:TGBBANAL-RECON
                   ,:TGBBANAL-PROJ
                   ,:TGBBANAL-VAL
                   ,:TGBBANAL-QTY
                   ,:TGBBANAL-PERC
                   ,:TGBBANAL-ERR-STAT
                   ,:XGBBANAL-WARN-MSG-ACCPT-1
                   ,:XGBBANAL-WARN-MSG-ACCPT-2
                   ,:XGBBANAL-WARN-MSG-ACCPT-3
                   ,:XGBBANAL-WARN-MSG-ACCPT-4
                   ,:XGBBANAL-WARN-MSG-ACCPT-5
                   ,:XGBBANAL-WARN-MSG-1
                   ,:XGBBANAL-WARN-MSG-2
                   ,:XGBBANAL-WARN-MSG-3
                   ,:XGBBANAL-WARN-MSG-4
                   ,:XGBBANAL-WARN-MSG-5
                   ,:TGBBANAL-GL-CMPY
                   ,:TGBBANAL-GL-ACCT
                   ,:TGBBANAL-GL-ANAL
           END-EXEC.

           EXEC QSP SQL SELECT-TGBBANAL ALLOW=NOT-FOUND
             SELECT CMPY
                   ,BTCH_NUM
                   ,TRAN_SEQ_NUM
                   ,DETL_SEQ_NUM
                   ,ANAL_SEQ_NUM
                   ,RECON
                   ,PROJ
                   ,VAL
                   ,QTY
                   ,PERC
                   ,ERR_STAT
                   ,WARN_MSG_ACCPT_1
                   ,WARN_MSG_ACCPT_2
                   ,WARN_MSG_ACCPT_3
                   ,WARN_MSG_ACCPT_4
                   ,WARN_MSG_ACCPT_5
                   ,WARN_MSG_1
                   ,WARN_MSG_2
                   ,WARN_MSG_3
                   ,WARN_MSG_4
                   ,WARN_MSG_5
                   ,GL_CMPY
                   ,GL_ACCT
                   ,GL_ANAL
               INTO :TGBBANAL-CMPY
                   ,:TGBBANAL-BTCH-NUM
                   ,:TGBBANAL-TRAN-SEQ-NUM
                   ,:TGBBANAL-DETL-SEQ-NUM
                   ,:TGBBANAL-ANAL-SEQ-NUM
                   ,:TGBBANAL-RECON
                   ,:TGBBANAL-PROJ
                   ,:TGBBANAL-VAL
                   ,:TGBBANAL-QTY
                   ,:TGBBANAL-PERC
                   ,:TGBBANAL-ERR-STAT
                   ,:XGBBANAL-WARN-MSG-ACCPT-1
                   ,:XGBBANAL-WARN-MSG-ACCPT-2
                   ,:XGBBANAL-WARN-MSG-ACCPT-3
                   ,:XGBBANAL-WARN-MSG-ACCPT-4
                   ,:XGBBANAL-WARN-MSG-ACCPT-5
                   ,:XGBBANAL-WARN-MSG-1
                   ,:XGBBANAL-WARN-MSG-2
                   ,:XGBBANAL-WARN-MSG-3
                   ,:XGBBANAL-WARN-MSG-4
                   ,:XGBBANAL-WARN-MSG-5
                   ,:TGBBANAL-GL-CMPY
                   ,:TGBBANAL-GL-ACCT
                   ,:TGBBANAL-GL-ANAL
               FROM TGBBANAL
              WHERE CMPY = :TGBBANAL-CMPY
                AND BTCH_NUM = :TGBBANAL-BTCH-NUM
                AND TRAN_SEQ_NUM = :TGBBANAL-TRAN-SEQ-NUM
                AND DETL_SEQ_NUM = :TGBBANAL-DETL-SEQ-NUM
                AND ANAL_SEQ_NUM = :TGBBANAL-ANAL-SEQ-NUM
           END-EXEC.

           EXEC QSP SQL SELECT-TGBTRAN ALLOW=NOT-FOUND
             SELECT CMPY
                   ,SUPP
                   ,ENTRY_DATE
                   ,SYSREF
                   ,GROSS_AMT
                   ,TAX_AMT
                   ,TAX_CODE
                   ,STLMNT_GROSS
                   ,STLMNT_WHOLD_GROSS
                   ,TAKE_DSCNT_IND
                   ,DSCNT_AMT
                   ,DSCNT_PERC
                   ,DSCNT_TERM_1
                   ,DSCNT_TERM_2
                   ,DSCNT_TERM_3
                   ,DSCNT_DATE_1
                   ,DSCNT_DATE_2
                   ,DSCNT_DATE_3
                   ,STLMNT
                   ,CURR
                   ,BANK_CHRGS
                   ,USR
                   ,TERM
                   ,PER
                   ,YY
                   ,ELEM
                   ,BANK
                   ,PRE_STTLD_REF
                   ,PYMNT_ADDR
                   ,PRPYMNT_OCCUR
                   ,PRPYMNT_STRT_PER
                   ,PRPYMNT_STRT_YY
                   ,RECUR_INTRVL
                   ,RECUR_OCCUR
                   ,ASSOC_TRAN_FLAG
                   ,BTCH_NUM
                   ,MIN_AUTH
                   ,AUTH_TOT_LINES
                   ,CIT_GROSS_AMT
                   ,TRAN_TYPE
                   ,ACCT_TYPE
                   ,TRAN_STYPE
                   ,TRAN_DATE
                   ,PYMNT_DUE_DATE
                   ,USR_DUE_DATE_FLAG
                   ,AWAIT_EXCH_RATE
                   ,RETAIN_AMT
                   ,RETAIN_DATE
                   ,TRF_SUPP
                   ,SUSPEND_IND
                   ,AUTH_STAT
                   ,GNRT_PYMNT_FLAG
                   ,CIT_SYSREF
                   ,VAT_RPRTD_IND
                   ,LOCK_USR
                   ,LOCK_SESS
                   ,LOCK_FLAG
                   ,LINES_AUTH
                   ,ACT_AUTH
                   ,RECON_PYMNT_FLAG
                   ,DAILY_ANAL_FLAG
                   ,MNTHLY_ANAL_FLAG
                   ,EXMPT_VAT_FLAG
                   ,PYMNT_RPRT_FLAG
                   ,CIT_RPRT_FLAG
                   ,PA_RPRTD_IND
                   ,PYMNT_ANAL
                   ,SCHD_NUM
                   ,SCHD_ENTRY_NUM
                   ,DATE_LAST_PAID
                   ,AMT_PAID
                   ,DSCNT_CLMD
                   ,AMT_OUTSTD
                   ,OLD_TRAN_STAT
                   ,TRAN_REF
                   ,TRAN_STAT
                   ,MTCH_TOT
                   ,ORDR_RLTD_FLAG
                   ,TAX_DATE
                   ,SLFASSD_TAX_IND
                   ,SLFASSD_TAX_AMT
                   ,TAX_ONLY_FLAG
                   ,HAND
                   ,VAT_DATE
                   ,SNGL_CHQ_FLAG
                   ,USR_DATA
                   ,OVRD_FACTOR
                   ,SUPP_POSTCODE
                   ,RCVD_DATE
                   ,NCIS_EXCLD
                   ,CRN_INV_SYSREF
                   ,CRN_INV_REF
               INTO :TGBTRAN-CMPY
                   ,:TGBTRAN-SUPP
                   ,:XGBTRAN-ENTRY-DATE
                   ,:TGBTRAN-SYSREF
                   ,:TGBTRAN-GROSS-AMT
                   ,:TGBTRAN-TAX-AMT
                   ,:TGBTRAN-TAX-CODE
                   ,:TGBTRAN-STLMNT-GROSS
                   ,:TGBTRAN-STLMNT-WHOLD-GROSS
                   ,:TGBTRAN-TAKE-DSCNT-IND
                   ,:TGBTRAN-DSCNT-AMT
                   ,:TGBTRAN-DSCNT-PERC
                   ,:TGBTRAN-DSCNT-TERM-1
                   ,:TGBTRAN-DSCNT-TERM-2
                   ,:TGBTRAN-DSCNT-TERM-3
                   ,:XGBTRAN-DSCNT-DATE-1
                   ,:XGBTRAN-DSCNT-DATE-2
                   ,:XGBTRAN-DSCNT-DATE-3
                   ,:TGBTRAN-STLMNT
                   ,:TGBTRAN-CURR
                   ,:TGBTRAN-BANK-CHRGS
                   ,:TGBTRAN-USR
                   ,:TGBTRAN-TERM
                   ,:TGBTRAN-PER
                   ,:TGBTRAN-YY
                   ,:TGBTRAN-ELEM
                   ,:TGBTRAN-BANK
                   ,:TGBTRAN-PRE-STTLD-REF
                   ,:TGBTRAN-PYMNT-ADDR
                   ,:TGBTRAN-PRPYMNT-OCCUR
                   ,:TGBTRAN-PRPYMNT-STRT-PER
                   ,:TGBTRAN-PRPYMNT-STRT-YY
                   ,:TGBTRAN-RECUR-INTRVL
                   ,:TGBTRAN-RECUR-OCCUR
                   ,:TGBTRAN-ASSOC-TRAN-FLAG
                   ,:TGBTRAN-BTCH-NUM
                   ,:TGBTRAN-MIN-AUTH
                   ,:TGBTRAN-AUTH-TOT-LINES
                   ,:TGBTRAN-CIT-GROSS-AMT
                   ,:TGBTRAN-TRAN-TYPE
                   ,:TGBTRAN-ACCT-TYPE
                   ,:TGBTRAN-TRAN-STYPE
                   ,:XGBTRAN-TRAN-DATE
                   ,:XGBTRAN-PYMNT-DUE-DATE
                   ,:TGBTRAN-USR-DUE-DATE-FLAG
                   ,:TGBTRAN-AWAIT-EXCH-RATE
                   ,:TGBTRAN-RETAIN-AMT
                   ,:XGBTRAN-RETAIN-DATE
                   ,:TGBTRAN-TRF-SUPP
                   ,:TGBTRAN-SUSPEND-IND
                   ,:TGBTRAN-AUTH-STAT
                   ,:TGBTRAN-GNRT-PYMNT-FLAG
                   ,:TGBTRAN-CIT-SYSREF
                   ,:TGBTRAN-VAT-RPRTD-IND
                   ,:TGBTRAN-LOCK-USR
                   ,:TGBTRAN-LOCK-SESS
                   ,:TGBTRAN-LOCK-FLAG
                   ,:TGBTRAN-LINES-AUTH
                   ,:TGBTRAN-ACT-AUTH
                   ,:TGBTRAN-RECON-PYMNT-FLAG
                   ,:TGBTRAN-DAILY-ANAL-FLAG
                   ,:TGBTRAN-MNTHLY-ANAL-FLAG
                   ,:TGBTRAN-EXMPT-VAT-FLAG
                   ,:TGBTRAN-PYMNT-RPRT-FLAG
                   ,:TGBTRAN-CIT-RPRT-FLAG
                   ,:TGBTRAN-PA-RPRTD-IND
                   ,:TGBTRAN-PYMNT-ANAL
                   ,:TGBTRAN-SCHD-NUM
                   ,:TGBTRAN-SCHD-ENTRY-NUM
                   ,:XGBTRAN-DATE-LAST-PAID
                   ,:TGBTRAN-AMT-PAID
                   ,:TGBTRAN-DSCNT-CLMD
                   ,:TGBTRAN-AMT-OUTSTD
                   ,:TGBTRAN-OLD-TRAN-STAT
                   ,:TGBTRAN-TRAN-REF
                   ,:TGBTRAN-TRAN-STAT
                   ,:TGBTRAN-MTCH-TOT
                   ,:TGBTRAN-ORDR-RLTD-FLAG
                   ,:XGBTRAN-TAX-DATE
                   ,:TGBTRAN-SLFASSD-TAX-IND
                   ,:TGBTRAN-SLFASSD-TAX-AMT
                   ,:TGBTRAN-TAX-ONLY-FLAG
                   ,:TGBTRAN-HAND
                   ,:XGBTRAN-VAT-DATE
                   ,:TGBTRAN-SNGL-CHQ-FLAG
                   ,:TGBTRAN-USR-DATA
                   ,:TGBTRAN-OVRD-FACTOR
                   ,:TGBTRAN-SUPP-POSTCODE
                   ,:XGBTRAN-RCVD-DATE
                   ,:TGBTRAN-NCIS-EXCLD
                   ,:TGBTRAN-CRN-INV-SYSREF
                   ,:TGBTRAN-CRN-INV-REF
               FROM TGBTRAN
              WHERE CMPY   = :TGBTRAN-CMPY
                AND SYSREF = :TGBTRAN-SYSREF
           END-EXEC.

           EXEC QSP SQL UPDATE-TGBTRAN-UNLOCK ALLOW=NOT-FOUND
             UPDATE TGBTRAN
                SET LOCK_USR           = :TGBTRAN-LOCK-USR
              WHERE CMPY = :TGBTRAN-CMPY
                AND SYSREF = :TGBTRAN-SYSREF
           END-EXEC.

           EXEC QSP SQL UPDATE-TGBTRAN-LOCK ALLOW=NOT-FOUND
             UPDATE TGBTRAN
                SET LOCK_USR = :HV-LOCK-USR
              WHERE CMPY     = :TGBTRAN-CMPY
                AND SYSREF   = :TGBTRAN-SYSREF
                AND LOCK_USR = :TGBTRAN-LOCK-USR
           END-EXEC.

           EXEC QSP SQL SELECT-TGBTRAN-LOCK
             SELECT  LOCK_USR
               INTO :TGBTRAN-LOCK-USR
               FROM TGBTRAN
              WHERE CMPY     = :TGBTRAN-CMPY
                AND SYSREF   = :TGBTRAN-SYSREF
           END-EXEC.

           EXEC QSP SQL SELECT-TGBCURR ALLOW=NOT-FOUND
             SELECT CMPY
                   ,SUPP
                   ,ENTRY_DATE
                   ,SYSREF
                   ,RATE_TYPE
                   ,EFF_DATE
                   ,EXCH_RATE
                   ,ORIG_EXCH_RATE
                   ,NBASE_GROSS_AMT
                   ,NBASE_TAX_AMT
                   ,NBASE_DSCNT_AMT
                   ,NBASE_AMT_PAID
                   ,NBASE_DSCNT_CLMD
                   ,NBASE_AMT_OUTSTD
               INTO :TGBCURR-CMPY
                   ,:TGBCURR-SUPP
                   ,:XGBCURR-ENTRY-DATE
                   ,:TGBCURR-SYSREF
                   ,:TGBCURR-RATE-TYPE
                   ,:XGBCURR-EFF-DATE
                   ,:TGBCURR-EXCH-RATE
                   ,:TGBCURR-ORIG-EXCH-RATE
                   ,:TGBCURR-NBASE-GROSS-AMT
                   ,:TGBCURR-NBASE-TAX-AMT
                   ,:TGBCURR-NBASE-DSCNT-AMT
                   ,:TGBCURR-NBASE-AMT-PAID
                   ,:TGBCURR-NBASE-DSCNT-CLMD
                   ,:TGBCURR-NBASE-AMT-OUTSTD
               FROM TGBCURR
              WHERE CMPY = :TGBCURR-CMPY
                AND SUPP = :TGBCURR-SUPP
                AND ENTRY_DATE = :XGBCURR-ENTRY-DATE
                AND SYSREF = :TGBCURR-SYSREF
           END-EXEC.

           EXEC QSP SQL SELECT-TGBGLAC ALLOW=NOT-FOUND
             SELECT CMPY
                   ,SUPP
                   ,ENTRY_DATE
                   ,SYSREF
                   ,GL_CMPY
                   ,GL_ACCT
               INTO :TGBGLAC-CMPY
                   ,:TGBGLAC-SUPP
                   ,:XGBGLAC-ENTRY-DATE
                   ,:TGBGLAC-SYSREF
                   ,:TGBGLAC-GL-CMPY
                   ,:TGBGLAC-GL-ACCT
               FROM TGBGLAC
              WHERE CMPY = :TGBGLAC-CMPY
                AND SUPP = :TGBGLAC-SUPP
                AND ENTRY_DATE = :XGBGLAC-ENTRY-DATE
                AND SYSREF = :TGBGLAC-SYSREF
           END-EXEC.

           EXEC QSP SQL SELECT-TAUADCTL ALLOW=NOT-FOUND
             SELECT CHAR_LEN
                   ,NUM_FLDS
                   ,DATE_FLDS
               INTO :TAUADCTL-CHAR-LEN
                   ,:TAUADCTL-NUM-FLDS
                   ,:TAUADCTL-DATE-FLDS
               FROM TAUADCTL
              WHERE CMPY = :TAUADCTL-CMPY
                AND TYPE = :TAUADCTL-TYPE
                AND FRMAT = :TAUADCTL-FRMAT
           END-EXEC.

           EXEC QSP SQL CURSOR-TGBSKDTL
            DECLARE C4 CURSOR
                FOR
             SELECT CMPY
                   ,SKEL_TYPE
                   ,SKEL_CODE
                   ,DETL_SEQ_NUM
                   ,DESCR
                   ,TAX_CODE
                   ,TAX_TYPE
                   ,TAX_HAND_CODE
                   ,LOCTN
                   ,SA_TYPE
                   ,GL_CMPY
                   ,GL_ACCT
                   ,ANAL
                   ,RECON
                   ,PROJ
                   ,PRO_RATA_IND
                   ,PYMNT_ANAL
                   ,WHOLD_USE_IND
                   ,EXCLD_DSCNT_FLAG
               FROM TGBSKDTL
              WHERE CMPY      = :TGBSKDTL-CMPY
                AND SKEL_TYPE = :TGBSKDTL-SKEL-TYPE
                AND SKEL_CODE = :TGBSKDTL-SKEL-CODE
           ORDER BY CMPY
                   ,SKEL_TYPE
                   ,SKEL_CODE
                   ,DETL_SEQ_NUM
           END-EXEC

           EXEC QSP SQL FETCH-TGBSKDTL ALLOW=NOT-FOUND
              FETCH C4
               INTO :TGBSKDTL-CMPY
                   ,:TGBSKDTL-SKEL-TYPE
                   ,:TGBSKDTL-SKEL-CODE
                   ,:TGBSKDTL-DETL-SEQ-NUM
                   ,:TGBSKDTL-DESCR
                   ,:TGBSKDTL-TAX-CODE
                   ,:TGBSKDTL-TAX-TYPE
                   ,:TGBSKDTL-TAX-HAND-CODE
                   ,:TGBSKDTL-LOCTN
                   ,:TGBSKDTL-SA-TYPE
                   ,:TGBSKDTL-GL-CMPY
                   ,:TGBSKDTL-GL-ACCT
                   ,:TGBSKDTL-ANAL
                   ,:TGBSKDTL-RECON
                   ,:TGBSKDTL-PROJ
                   ,:TGBSKDTL-PRO-RATA-IND
                   ,:TGBSKDTL-PYMNT-ANAL
                   ,:TGBSKDTL-WHOLD-USE-IND
                   ,:TGBSKDTL-EXCLD-DSCNT-FLAG
           END-EXEC

++IF TARGET(POP=Y)
|          EXEC QSP SQL SELECT-TGBORDR ALLOW=NOT-FOUND
|            SELECT ORDR_REF
|              INTO :TGBORDR-ORDR-REF
|              FROM TGBORDR
|             WHERE CMPY       = :TGBORDR-CMPY
|               AND SUPP       = :TGBORDR-SUPP
|               AND ENTRY_DATE = :XGBORDR-ENTRY-DATE
|               AND SYSREF     = :TGBORDR-SYSREF
|               AND LINE_NUM   = :TGBORDR-LINE-NUM
|          END-EXEC.
|
|          EXEC QSP SQL CURSOR-TGBBGRN
|           DECLARE C5 CURSOR
|               FOR
|            SELECT A.CMPY
|                  ,A.BTCH_NUM
|                  ,A.TRAN_SEQ_NUM
|                  ,A.DETL_SEQ_NUM
|                  ,A.INVCD_QTY
|                  ,A.NETT_QTY
|                  ,A.NETT_VAL
|                  ,A.MTCH_QTY
|                  ,A.GRN_DATE
|                  ,A.ADVC_NOTE
|                  ,A.GRN
|                  ,A.ERR_STAT
|                  ,B.GRN_STAT_IND
|              FROM TGBBGRN A
|                  ,TPLGRN B
|             WHERE A.CMPY         = :TGBBGRN-CMPY
|               AND A.BTCH_NUM     = :TGBBGRN-BTCH-NUM
|               AND A.TRAN_SEQ_NUM = :TGBBGRN-TRAN-SEQ-NUM
|               AND A.DETL_SEQ_NUM = :TGBBGRN-DETL-SEQ-NUM
|               AND A.CMPY         = B.CMPY
|               AND A.GRN          = B.GRN
|          ORDER BY CMPY
|                  ,BTCH_NUM
|                  ,TRAN_SEQ_NUM
|                  ,DETL_SEQ_NUM
|          END-EXEC.
|
|          EXEC QSP SQL FETCH-TGBBGRN ALLOW=NOT-FOUND
|             FETCH C5
|              INTO :TGBBGRN-CMPY
|                  ,:TGBBGRN-BTCH-NUM
|                  ,:TGBBGRN-TRAN-SEQ-NUM
|                  ,:TGBBGRN-DETL-SEQ-NUM
|                  ,:TGBBGRN-INVCD-QTY
|                  ,:TGBBGRN-NETT-QTY
|                  ,:TGBBGRN-NETT-VAL
|                  ,:TGBBGRN-MTCH-QTY
|                  ,:XGBBGRN-GRN-DATE
|                  ,:TGBBGRN-ADVC-NOTE
|                  ,:TGBBGRN-GRN
|                  ,:TGBBGRN-ERR-STAT
|                  ,:TPLGRN-GRN-STAT-IND
|          END-EXEC.
|
|          EXEC QSP SQL SELECT-TDOOLINE ALLOW=NOT-FOUND
|            SELECT VAL_TAX
|              INTO :TDOOLINE-VAL-TAX
|              FROM TDOOLINE
|             WHERE CMPY             = :TDOOLINE-CMPY
|               AND DOC_IND          = :TDOOLINE-DOC-IND
|               AND ORDR_REF         = :TDOOLINE-ORDR-REF
|               AND LINE_NUM         = :TDOOLINE-LINE-NUM
|          END-EXEC.
|
|          EXEC QSP SQL SELECT-TDOOLINE-9 ALLOW=NOT-FOUND
|            SELECT CMPY
|                  ,TXT_NUM
|              INTO :TDOOLINE-CMPY
|                  ,:TDOOLINE-TXT-NUM
|              FROM TDOOLINE
|             WHERE CMPY             = :TDOOLINE-CMPY
|               AND DOC_IND          = :TDOOLINE-DOC-IND
|               AND ORDR_REF         = :TDOOLINE-ORDR-REF
|               AND LINE_NUM         = :TDOOLINE-LINE-NUM
|          END-EXEC.
|
|          EXEC QSP SQL SELECT-TDOORDER-1 ALLOW=NOT-FOUND
|            SELECT CMPY
|                  ,ORDR_REF
|                  ,TXT_NUM
|              INTO :TDOORDER-CMPY
|                  ,:TDOORDER-ORDR-REF
|                  ,:TDOORDER-TXT-NUM
|              FROM TDOORDER
|             WHERE CMPY     = :TDOORDER-CMPY
|               AND DOC_IND  = :TDOORDER-DOC-IND
|               AND ORDR_REF = :TDOORDER-ORDR-REF
|          END-EXEC.

           EXEC QSP SQL UPDATE-TDOORDER
                UPDATE TDOORDER
                SET ALT_INVCE_SUPP = :TDOORDER-ALT-INVCE-SUPP
              WHERE CMPY           = :TDOORDER-CMPY
                AND DOC_IND        = :TDOORDER-DOC-IND
                AND ORDR_REF       = :TDOORDER-ORDR-REF
           END-EXEC.

|
++END-IF

           EXEC QSP SQL CURSOR-TGBBARSP
            DECLARE C6 CURSOR
                FOR
             SELECT CMPY
                   ,BTCH_NUM
                   ,TRAN_SEQ_NUM
                   ,DETL_SEQ_NUM
                   ,RSP_SEQ_NUM
                   ,AUTH_GRP
                   ,GL_CMPY
                   ,ELEM
                   ,PATH_KEY
                   ,ACCS
                   ,AUTH_ELEM
                   ,AUTH_PATH_KEY
                   ,AUTH_ACCS
                   ,MIN_AUTH
                   ,ACT_AUTH
                   ,AMT_TO_AUTH
                   ,VAL_LVL
                   ,BUILT_FLAG
               FROM TGBBARSP
              WHERE CMPY         = :TGBBARSP-CMPY
                AND BTCH_NUM     = :TGBBARSP-BTCH-NUM
                AND TRAN_SEQ_NUM = :TGBBARSP-TRAN-SEQ-NUM
                AND DETL_SEQ_NUM = :TGBBARSP-DETL-SEQ-NUM
           ORDER BY CMPY
                   ,BTCH_NUM
                   ,TRAN_SEQ_NUM
                   ,DETL_SEQ_NUM
                   ,RSP_SEQ_NUM
           END-EXEC.

           EXEC QSP SQL FETCH-TGBBARSP ALLOW=NOT-FOUND
              FETCH C6
               INTO :TGBBARSP-CMPY
                   ,:TGBBARSP-BTCH-NUM
                   ,:TGBBARSP-TRAN-SEQ-NUM
                   ,:TGBBARSP-DETL-SEQ-NUM
                   ,:TGBBARSP-RSP-SEQ-NUM
                   ,:TGBBARSP-AUTH-GRP
                   ,:TGBBARSP-GL-CMPY
                   ,:TGBBARSP-ELEM
                   ,:TGBBARSP-PATH-KEY
                   ,:TGBBARSP-ACCS
                   ,:TGBBARSP-AUTH-ELEM
                   ,:TGBBARSP-AUTH-PATH-KEY
                   ,:TGBBARSP-AUTH-ACCS
                   ,:TGBBARSP-MIN-AUTH
                   ,:TGBBARSP-ACT-AUTH
                   ,:TGBBARSP-AMT-TO-AUTH
                   ,:TGBBARSP-VAL-LVL
                   ,:TGBBARSP-BUILT-FLAG
           END-EXEC.

           EXEC QSP SQL CURSOR-TGBBTAUT
            DECLARE C7 CURSOR
                FOR
             SELECT CMPY
                   ,BTCH_NUM
                   ,TRAN_SEQ_NUM
                   ,DETL_SEQ_NUM
                   ,RSP_SEQ_NUM
                   ,TAUT_SEQ_NUM
                   ,SEL_FLAG
                   ,USR
                   ,BUILT_FLAG
                   ,AUTH_SEQ_NUM
               FROM TGBBTAUT
              WHERE CMPY         = :TGBBTAUT-CMPY
                AND BTCH_NUM     = :TGBBTAUT-BTCH-NUM
                AND TRAN_SEQ_NUM = :TGBBTAUT-TRAN-SEQ-NUM
                AND DETL_SEQ_NUM = :TGBBTAUT-DETL-SEQ-NUM
                AND RSP_SEQ_NUM  = :TGBBTAUT-RSP-SEQ-NUM
           ORDER BY CMPY
                   ,BTCH_NUM
                   ,TRAN_SEQ_NUM
                   ,DETL_SEQ_NUM
                   ,RSP_SEQ_NUM
                   ,TAUT_SEQ_NUM
           END-EXEC.

           EXEC QSP SQL FETCH-TGBBTAUT ALLOW=NOT-FOUND
              FETCH C7
               INTO :TGBBTAUT-CMPY
                   ,:TGBBTAUT-BTCH-NUM
                   ,:TGBBTAUT-TRAN-SEQ-NUM
                   ,:TGBBTAUT-DETL-SEQ-NUM
                   ,:TGBBTAUT-RSP-SEQ-NUM
                   ,:TGBBTAUT-TAUT-SEQ-NUM
                   ,:TGBBTAUT-SEL-FLAG
                   ,:TGBBTAUT-USR
                   ,:TGBBTAUT-BUILT-FLAG
                   ,:TGBBTAUT-AUTH-SEQ-NUM
           END-EXEC.

           EXEC QSP SQL SELECT-TGOAUTHC ALLOW=NOT-FOUND
             SELECT MTHD
                   ,TYPE
                   ,AUTH_LVL
                   ,MIN_VAL
                   ,ORDR_RLTD
                   ,DSBLD
               INTO :TGOAUTHC-MTHD
                   ,:TGOAUTHC-TYPE
                   ,:TGOAUTHC-AUTH-LVL
                   ,:TGOAUTHC-MIN-VAL
                   ,:TGOAUTHC-ORDR-RLTD
                   ,:TGOAUTHC-DSBLD
               FROM TGOAUTHC
              WHERE CMPY       = :TGOAUTHC-CMPY
                AND AUTH_CNTRL = :TGOAUTHC-AUTH-CNTRL
           END-EXEC.

            EXEC QSP SQL SELECT-TAFUSR ALLOW=NOT-FOUND
              SELECT DESCR
                    ,DSBLD
                INTO :TAFUSR-DESCR
                    ,:TAFUSR-DSBLD
                FROM TAFUSR
               WHERE USR = :TAFUSR-USR
            END-EXEC.


            EXEC QSP SQL COUNT-TPBADDR ALLOW=NOT-FOUND,MULTIPLE
              SELECT COUNT(*)
                INTO :CF-COUNT
                FROM TPBADDR
               WHERE CMPY = :TPBADDR-CMPY
                 AND SUPP = :TPBADDR-SUPP
            END-EXEC

           EXEC QSP SQL SELECT-TAUADATA ALLOW=NOT-FOUND
             SELECT 'Y'
               INTO :HV-ROW-EXISTS
               FROM TAUADATA
              WHERE  KEY_CMPY  = :TAUADATA-KEY-CMPY
                AND  KEY_12    = :TAUADATA-KEY-12
                AND  KEY_DATE  = :XAUADATA-KEY-DATE
                AND  KEY_INT   = :TAUADATA-KEY-INT
                AND  KEY_SMALL = 0
           END-EXEC.

           EXEC QSP SQL SELECT-TAUADATA-N ALLOW=NOT-FOUND
             SELECT 'Y'
               INTO :HV-ROW-EXISTS
               FROM TAUADATA
              WHERE  KEY_CMPY  = :TAUADATA-KEY-CMPY
                AND  KEY_INT_1 = :TAUADATA-KEY-INT-1
                AND  KEY_SMALL = 0
           END-EXEC.

           EXEC QSP SQL SELECT-TAUADATA-L ALLOW=NOT-FOUND
             SELECT 'Y'
               INTO :HV-ROW-EXISTS
               FROM TAUADATA
              WHERE  KEY_CMPY  = :TAUADATA-KEY-CMPY
                AND  KEY_12    = :TAUADATA-KEY-12
                AND  KEY_DATE  = :XAUADATA-KEY-DATE
                AND  KEY_INT   = :TAUADATA-KEY-INT
                AND  KEY_SMALL = :TAUADATA-KEY-SMALL
           END-EXEC.

           EXEC QSP SQL SELECT-TAUADATA-L-N ALLOW=NOT-FOUND
             SELECT 'Y'
               INTO :HV-ROW-EXISTS
               FROM TAUADATA
              WHERE  KEY_CMPY  = :TAUADATA-KEY-CMPY
                AND  KEY_INT_1 = :TAUADATA-KEY-INT-1
                AND  KEY_SMALL = :TAUADATA-KEY-SMALL
           END-EXEC.

           EXEC QSP SQL SELECT-TPLGRN ALLOW=NOT-FOUND
             SELECT DLVRY_CMNT
               INTO :TPLGRN-DLVRY-CMNT
               FROM TPLGRN
              WHERE CMPY = :TPLGRN-CMPY
                AND  GRN = :TPLGRN-GRN
           END-EXEC.

           EXEC QSP SQL SELECT-TRAHAND ALLOW=NOT-FOUND
             SELECT INCL_FLAG
                   ,RCVBLE_IND
                   ,PRORAT_FLAG
                   ,DSBLD
             INTO  :TRAHAND-INCL-FLAG
                  ,:TRAHAND-RCVBLE-IND
                  ,:TRAHAND-PRORAT-FLAG
                  ,:TRAHAND-DSBLD
             FROM TRAHAND
             WHERE HAND = :TRAHAND-HAND
           END-EXEC

           EXEC QSP SQL SELECT-TGBTRAN-1 ALLOW=NOT-FOUND
             SELECT VAT_NON_REC_VALUE
                   ,VAT_REC_VALUE
              INTO :TGBTRAN-VAT-NON-REC-VALUE
                  ,:TGBTRAN-VAT-REC-VALUE
             FROM TGBTRAN
            WHERE CMPY       = :TGBTRAN-CMPY
              AND SUPP       = :TGBTRAN-SUPP
              AND ENTRY_DATE = :XGBTRAN-ENTRY-DATE
              AND SYSREF     = :TGBTRAN-SYSREF
           END-EXEC

           EXEC QSP SQL SELECT-TGBCURR-1 ALLOW=NOT-FOUND
             SELECT NBASE_NREC_VALUE
                   ,NBASE_REC_VALUE
              INTO :TGBCURR-NBASE-NREC-VALUE
                  ,:TGBCURR-NBASE-REC-VALUE
             FROM TGBCURR
            WHERE CMPY       = :TGBCURR-CMPY
              AND SUPP       = :TGBCURR-SUPP
              AND ENTRY_DATE = :XGBCURR-ENTRY-DATE
              AND SYSREF     = :TGBCURR-SYSREF
           END-EXEC

           EXEC QSP SQL SELECT-TGBDETL-1 ALLOW=NOT-FOUND
             SELECT VAT_NON_REC_VALUE
                   ,VAT_REC_VALUE
                   ,NBASE_NREC_VALUE
                   ,NBASE_REC_VALUE
              INTO :TGBDETL-VAT-NON-REC-VALUE
                  ,:TGBDETL-VAT-REC-VALUE
                  ,:TGBDETL-NBASE-NREC-VALUE
                  ,:TGBDETL-NBASE-REC-VALUE
             FROM TGBDETL
            WHERE CMPY       = :TGBDETL-CMPY
              AND SUPP       = :TGBDETL-SUPP
              AND ENTRY_DATE = :XGBDETL-ENTRY-DATE
              AND SYSREF     = :TGBDETL-SYSREF
              AND LINE_NUM   = :TGBDETL-LINE-NUM
           END-EXEC

           EXEC QSP SQL SELECT-TPBTAX ALLOW=NOT-FOUND
             SELECT TAX_REG_FLAG
                   ,TAX_CODE
               INTO :TPBTAX-TAX-REG-FLAG
                   ,:TPBTAX-TAX-CODE
               FROM TPBTAX
              WHERE CMPY  = :TPBTAX-CMPY
                AND SUPP  = :TPBTAX-SUPP
                AND LOCTN = :TPBTAX-LOCTN
           END-EXEC

           EXEC QSP SQL SELECT-TPBTAX-DFLT ALLOW=MULTIPLE,NOT-FOUND
             SELECT REG_NUM
               INTO :TPBTAX-REG-NUM
               FROM TPBTAX
              WHERE CMPY       = :TPBTAX-CMPY
                AND SUPP       = :TPBTAX-SUPP
                AND DFLT_FLAG  = 'Y'
                AND REG_NUM   <> ' '
           END-EXEC

           EXEC QSP SQL SELECT-TPBSCHD ALLOW=NOT-FOUND
             SELECT PYMNT_MTHD
               INTO :TPBSCHD-PYMNT-MTHD
               FROM TPBSCHD
              WHERE CMPY     = :TPBSCHD-CMPY
                AND SUPP     = :TPBSCHD-SUPP
                AND ADDR_NUM = :TPBSCHD-ADDR-NUM
           END-EXEC

           EXEC QSP SQL SELECT-TGAPAYM ALLOW=NOT-FOUND
             SELECT DESCR
               INTO :TGAPAYM-DESCR
               FROM TGAPAYM
              WHERE CMPY = :TGAPAYM-CMPY
                AND PYMNT_MTHD = :TGAPAYM-PYMNT-MTHD
           END-EXEC.

           EXEC QSP SQL SELECT-EXACT-SUPP ALLOW=NOT-FOUND
             SELECT EXACT_MTCH_FLAG
               INTO :TPBSUPP-EXACT-MTCH-FLAG
               FROM TPBSUPP
              WHERE CMPY = :TPBSUPP-CMPY
                AND SUPP = :TPBSUPP-SUPP
           END-EXEC.

           EXEC QSP SQL SELECT-TPASETTL ALLOW=NOT-FOUND
             SELECT DESCR
               INTO :TPASETTL-DESCR
               FROM TPASETTL
              WHERE CMPY   = :TPASETTL-CMPY
                AND STLMNT = :TPASETTL-STLMNT
           END-EXEC

           EXEC QSP SQL SELECT-TPADSCNT ALLOW=NOT-FOUND
             SELECT DESCR
               INTO :TPADSCNT-DESCR
               FROM TPADSCNT
              WHERE CMPY = :TPADSCNT-CMPY
                AND DSCNT = :TPADSCNT-DSCNT
           END-EXEC.

           EXEC QSP SQL SELECT-TGBBORDR ALLOW=NOT-FOUND,MULTIPLE
             SELECT 'Y'
               INTO :HV-ROW-EXISTS
               FROM TGBBORDR
              WHERE CMPY         = :TGBBORDR-CMPY
                AND BTCH_NUM     = :TGBBORDR-BTCH-NUM
                AND TRAN_SEQ_NUM = :TGBBORDR-TRAN-SEQ-NUM
                AND ORDR_REF     = :TGBBORDR-ORDR-REF
           END-EXEC.
CED032
CED032     EXEC QSP SQL SELECT-TGBBTRAN-INV-LOCTN ALLOW=NOT-FOUND
CED032       SELECT INV_LOCTN
CED032         INTO :TGBBTRAN-INV-LOCTN
CED032         FROM TGBBTRAN
CED032        WHERE CMPY         = :TGBBTRAN-CMPY
CED032          AND BTCH_NUM     = :TGBBTRAN-BTCH-NUM
CED032          AND TRAN_SEQ_NUM = :TGBBTRAN-TRAN-SEQ-NUM
CED032     END-EXEC.

           EXEC QSP SQL SELECT-TPXKIT ALLOW=NOT-FOUND
             SELECT DESCR
                   ,AP_FLAG
                   ,DSBLD
               INTO :TPXKIT-DESCR
                   ,:TPXKIT-AP-FLAG
                   ,:TPXKIT-DSBLD
               FROM TPXKIT
              WHERE CMPY     = :TPXKIT-CMPY
                AND KIT_CODE = :TPXKIT-KIT-CODE
           END-EXEC

           EXEC QSP SQL CURSOR-TGBBTEXT
            DECLARE CTXT CURSOR
                FOR
             SELECT CMPY
                   ,BTCH_NUM
                   ,TRAN_SEQ_NUM
                   ,DETL_SEQ_NUM
                   ,TEXT_SEQ_NUM
                   ,TXT_LINE
               FROM TGBBTEXT
              WHERE CMPY         = :TGBBTEXT-CMPY
                AND BTCH_NUM     = :TGBBTEXT-BTCH-NUM
                AND TRAN_SEQ_NUM = :TGBBTEXT-TRAN-SEQ-NUM
                AND DETL_SEQ_NUM = :TGBBTEXT-DETL-SEQ-NUM
           ORDER BY CMPY
                   ,BTCH_NUM
                   ,TRAN_SEQ_NUM
                   ,DETL_SEQ_NUM
                   ,TEXT_SEQ_NUM
           END-EXEC

           EXEC QSP SQL FETCH-TGBBTEXT ALLOW=NOT-FOUND
              FETCH CTXT
               INTO :TPXTEXT-CMPY
                   ,:TGBBTEXT-BTCH-NUM
                   ,:TGBBTEXT-TRAN-SEQ-NUM
                   ,:TGBBTEXT-DETL-SEQ-NUM
                   ,:TPXTEXT-SEQ
                   ,:TPXTEXT-TXT-LINE
           END-EXEC

           EXEC QSP SQL SELECT-TGALEDGR ALLOW=NOT-FOUND
             SELECT PPD_VAT_ACCT
               INTO :TGALEDGR-PPD-VAT-ACCT
               FROM TGALEDGR
              WHERE CMPY  = :TGALEDGR-CMPY
                AND LEDGR = :TGALEDGR-LEDGR
           END-EXEC.
